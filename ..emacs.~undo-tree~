"e80eaf73c214a57390fddc962a340f3a7ec7d28a"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((nil rear-nonsticky nil 29328 . 29329) (nil fontified nil 29319 . 29329) (29319 . 29329) (#(";" 0 1 (fontified t face font-lock-comment-face)) . -29319) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 29320 (29318 . 29320) (29309 . 29318) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -29309) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 29310 (29294 . 29310)) nil (24642 16566 12125 0) 0 nil]) ((#("with " 0 5 (fontified t face font-lock-comment-face)) . 29283) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 29284) nil (24642 16566 12137 0) 0 nil]) ((29274 . 29282) (#("conflicted" 0 10 (fontified t face font-lock-comment-face)) . 29274) (undo-tree-id9 . -6) 29280) nil (24642 16566 12143 0) 0 nil]) ((29298 . 29301) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -29298) (undo-tree-id10 . -1) 29299 (29297 . 29299) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -29297) (undo-tree-id11 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -29298) (undo-tree-id12 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -29299) (undo-tree-id13 . -1) 29300 (29283 . 29300) (29270 . 29283)) nil (24642 16566 12156 0) 0 nil]) ((apply -3 29255 29271 undo--wrap-and-run-primitive-undo 29255 29271 ((29255 . 29258) 29259)) (t 24641 31451 0 0)) nil (24642 16566 12160 0) 0 nil]) ((#("








" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 9 (fontified t)) . -30301) (undo-tree-id5 . -7) (undo-tree-id6 . -7) (undo-tree-id7 . -6) (undo-tree-id8 . -6) (undo-tree-id9 . -5) (undo-tree-id10 . -5) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -2) (undo-tree-id22 . -3) (undo-tree-id23 . -4) (undo-tree-id24 . -3) (undo-tree-id25 . -2) (undo-tree-id26 . -1) 30300 (t 24641 31446 0 0)) nil (24641 31450 995602 0) 0 nil]) ((29200 . 29207)) nil (24641 31444 414705 0) 0 nil]) ((nil rear-nonsticky nil 29246 . 29247) (nil fontified nil 29214 . 29247) (29214 . 29247)) nil (24641 31444 414712 0) 0 nil]) ((29211 . 29214)) nil (24641 31444 414715 0) 0 nil]) ((29211 . 29212)) nil (24641 31444 414717 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 29211) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (24641 31444 414745 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 29211) (undo-tree-id2 . -1)) nil (24641 31444 414750 0) 0 nil]) ((#("(global-set-key (kbd \"C-s\") 'swiper)" 0 21 (fontified t) 21 26 (face font-lock-string-face fontified t) 26 36 (fontified t)) . 29211)) nil (24641 31444 414753 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 29249) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("
" 0 1 (fontified t)) . 29249)) nil (24641 31444 414759 0) 0 nil]) ((nil rear-nonsticky nil 30294 . 30295) (nil fontified nil 29251 . 30295) (29251 . 30295)) nil (24641 31444 414763 0) 0 nil]) ((29249 . 29261)) nil (24641 31444 414764 0) 0 nil]) ((29248 . 29249) (t 24641 21132 0 0)) nil (24641 31444 414766 0) 0 nil]) ((4632 . 5847) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4632) (4628 . 4630) (#("
" 0 1 (fontified nil)) . -4628) (3951 . 4629) (#(" " 0 1 (fontified nil)) . 3951) (3921 . 3952) (3896 . 3899) (3859 . 3862) (3824 . 3827) (3774 . 3777) (#("
" 0 1 (fontified nil)) . -3909) (3885 . 3887) (3851 . 3853) (3819 . 3821) (3772 . 3774) (3901 . 3902) (3878 . 3879) (#("
" 0 1 (fontified nil)) . 3878) (3878 . 3879) (#(" " 0 1 (fontified nil)) . -3878) (3846 . 3847) (#("
" 0 1 (fontified nil)) . 3846) (3846 . 3847) (#(" " 0 1 (fontified nil)) . -3846) (3816 . 3817) (#("
" 0 1 (fontified nil)) . 3816) (3816 . 3817) (#(" " 0 1 (fontified nil)) . -3816) (3771 . 3772) (#("
" 0 1 (fontified nil)) . 3771) (3771 . 3772) (#(" " 0 1 (fontified nil)) . -3771) (3731 . 3901) (#(" " 0 1 (fontified nil)) . 3731) (3465 . 3732) (3434 . 3437) (3364 . 3367) (#("
" 0 1 (fontified nil)) . -3459) (3429 . 3431) (3362 . 3364) (3455 . 3456) (3426 . 3427) (#(" " 0 1 (fontified nil)) . -3426) (3361 . 3362) (#("
" 0 1 (fontified nil)) . 3361) (3361 . 3362) (#(" " 0 1 (fontified nil)) . -3361) (3328 . 3455) (#(" " 0 1 (fontified nil)) . 3328) (3303 . 3329) (#("
" 0 1 (fontified nil)) . -3303) (3101 . 3304) (#(" " 0 1 (fontified nil)) . 3101) (2957 . 3102) (#("
" 0 1 (fontified nil)) . -2957) (2872 . 2958) (#(" " 0 1 (fontified nil)) . 2872) (2601 . 2873) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(ace-link swiper beacon evil-commentary imenu-list org-download org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 2018 (fontified nil)) . -2601) (t 24641 18068 0 0)) nil (24641 21131 989740 0) 0 nil]) ((4621 . 5836) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4621) (4617 . 4619) (#("
" 0 1 (fontified nil)) . -4617) (3951 . 4618) (#(" " 0 1 (fontified nil)) . 3951) (3921 . 3952) (3896 . 3899) (3859 . 3862) (3824 . 3827) (3774 . 3777) (#("
" 0 1 (fontified nil)) . -3909) (3885 . 3887) (3851 . 3853) (3819 . 3821) (3772 . 3774) (3901 . 3902) (3878 . 3879) (#("
" 0 1 (fontified nil)) . 3878) (3878 . 3879) (#(" " 0 1 (fontified nil)) . -3878) (3846 . 3847) (#("
" 0 1 (fontified nil)) . 3846) (3846 . 3847) (#(" " 0 1 (fontified nil)) . -3846) (3816 . 3817) (#("
" 0 1 (fontified nil)) . 3816) (3816 . 3817) (#(" " 0 1 (fontified nil)) . -3816) (3771 . 3772) (#("
" 0 1 (fontified nil)) . 3771) (3771 . 3772) (#(" " 0 1 (fontified nil)) . -3771) (3731 . 3901) (#(" " 0 1 (fontified nil)) . 3731) (3465 . 3732) (3434 . 3437) (3364 . 3367) (#("
" 0 1 (fontified nil)) . -3459) (3429 . 3431) (3362 . 3364) (3455 . 3456) (3426 . 3427) (#(" " 0 1 (fontified nil)) . -3426) (3361 . 3362) (#("
" 0 1 (fontified nil)) . 3361) (3361 . 3362) (#(" " 0 1 (fontified nil)) . -3361) (3328 . 3455) (#(" " 0 1 (fontified nil)) . 3328) (3303 . 3329) (#("
" 0 1 (fontified nil)) . -3303) (3101 . 3304) (#(" " 0 1 (fontified nil)) . 3101) (2957 . 3102) (#("
" 0 1 (fontified nil)) . -2957) (2872 . 2958) (#(" " 0 1 (fontified nil)) . 2872) (2601 . 2873) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(zoom ace-link swiper beacon evil-commentary imenu-list org-download org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 2023 (fontified nil)) . -2601) (t 24641 17952 0 0)) nil (24641 18068 429937 0) 0 nil]) ((4626 . 5841) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4626) (4622 . 4624) (#("
" 0 1 (fontified nil)) . -4622) (3951 . 4623) (#(" " 0 1 (fontified nil)) . 3951) (3921 . 3952) (3896 . 3899) (3859 . 3862) (3824 . 3827) (3774 . 3777) (#("
" 0 1 (fontified nil)) . -3909) (3885 . 3887) (3851 . 3853) (3819 . 3821) (3772 . 3774) (3901 . 3902) (3878 . 3879) (#("
" 0 1 (fontified nil)) . 3878) (3878 . 3879) (#(" " 0 1 (fontified nil)) . -3878) (3846 . 3847) (#("
" 0 1 (fontified nil)) . 3846) (3846 . 3847) (#(" " 0 1 (fontified nil)) . -3846) (3816 . 3817) (#("
" 0 1 (fontified nil)) . 3816) (3816 . 3817) (#(" " 0 1 (fontified nil)) . -3816) (3771 . 3772) (#("
" 0 1 (fontified nil)) . 3771) (3771 . 3772) (#(" " 0 1 (fontified nil)) . -3771) (3731 . 3901) (#(" " 0 1 (fontified nil)) . 3731) (3465 . 3732) (3434 . 3437) (3364 . 3367) (#("
" 0 1 (fontified nil)) . -3459) (3429 . 3431) (3362 . 3364) (3455 . 3456) (3426 . 3427) (#(" " 0 1 (fontified nil)) . -3426) (3361 . 3362) (#("
" 0 1 (fontified nil)) . 3361) (3361 . 3362) (#(" " 0 1 (fontified nil)) . -3361) (3328 . 3455) (#(" " 0 1 (fontified nil)) . 3328) (3303 . 3329) (#("
" 0 1 (fontified nil)) . -3303) (3101 . 3304) (#(" " 0 1 (fontified nil)) . 3101) (2957 . 3102) (#("
" 0 1 (fontified nil)) . -2957) (2872 . 2958) (#(" " 0 1 (fontified nil)) . 2872) (2601 . 2873) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(ace-link swiper beacon evil-commentary imenu-list org-download org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 2018 (fontified nil)) . -2601) (t 24641 5243 0 0)) nil (24641 17952 557858 0) 0 nil]) ((nil rear-nonsticky nil 22834 . 22835) (nil fontified nil 22773 . 22835) (22773 . 22835)) nil (24641 5243 273596 0) 0 nil]) ((22770 . 22773)) nil (24641 5243 273602 0) 0 nil]) ((22770 . 22771)) nil (24641 5243 273604 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 24191) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 24191) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 24191)) nil (24641 5243 273607 0) 0 nil]) ((24255 . 24256)) nil (24641 5243 273609 0) 0 nil]) ((nil rear-nonsticky nil 24254 . 24255) (nil fontified nil 22716 . 24255) (22716 . 24255)) nil (24641 5243 273612 0) 0 nil]) ((22715 . 22716)) nil (24641 5243 273614 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -22715) (undo-tree-id0 . -1) 22716) nil (24641 5243 273637 0) 0 nil]) ((22715 . 22716) (t 24641 1044 0 0)) nil (24641 5243 273640 0) 0 nil]) ((22715 . 22716) (22714 . 22715) (t 24641 1035 0 0) 22714) nil (24641 1044 10817 0) 0 nil]) ((nil rear-nonsticky nil 21859 . 21860) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -21914) (21859 . 21915)) nil (24641 1035 270287 0) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -21934) (undo-tree-id90 . -1) 21935) nil (24641 1035 270307 0) 0 nil]) ((21934 . 21935)) nil (24641 1035 270311 0) 0 nil]) ((21922 . 21934)) nil (24641 1035 270313 0) 0 nil]) ((21901 . 21922)) nil (24641 1035 270314 0) 0 nil]) ((21880 . 21901) (t 24641 916 0 0)) nil (24641 1035 270316 0) 0 nil]) ((nil rear-nonsticky nil 21928 . 21929) (nil fontified nil 21883 . 21929) (21883 . 21929)) nil (24641 916 269478 0) 0 nil]) ((21881 . 21883)) nil (24641 916 269485 0) 0 nil]) ((21880 . 21881) (t 24641 897 0 0)) nil (24641 916 269488 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 22557) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (t 24641 892 0 0)) nil (24641 896 914007 0) 0 nil]) ((nil rear-nonsticky nil 21878 . 21879) (nil fontified nil 21869 . 21879) (21869 . 21879)) nil (24641 882 445231 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-face)) . -21869) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 21870) nil (24641 882 445256 0) 0 nil]) ((21868 . 21870)) nil (24641 882 445259 0) 0 nil]) ((nil rear-nonsticky nil 22543 . 22544) (nil fontified nil 22499 . 22544) (22499 . 22544)) nil (24641 882 445262 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 21869)) nil (24641 882 445264 0) 0 nil]) ((21862 . 21868)) nil (24641 882 445266 0) 0 nil]) ((nil rear-nonsticky nil 22491 . 22492) (nil fontified nil 21865 . 22492) (21865 . 22492)) nil (24641 882 445268 0) 0 nil]) ((21863 . 21865) (#(" " 0 1 (fontified nil face font-lock-comment-delimiter-face)) . 21862) (undo-tree-id87 . -1) (21863 . 21864)) nil (24641 882 445273 0) 0 nil]) ((21860 . 21863)) nil (24641 882 445275 0) 0 nil]) ((21859 . 21865)) nil (24641 882 445277 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 21910) (t 24640 62131 0 0)) nil (24641 882 445279 0) 0 nil]) ((19063 . 19064) (t 24640 62129 0 0)) nil (24640 62131 657321 0) 0 nil]) ((nil rear-nonsticky nil 19062 . 19063) (nil fontified nil 19018 . 19063) (19018 . 19063)) nil (24640 62128 938907 0) 0 nil]) ((19017 . 19018) (t 24640 62103 0 0)) nil (24640 62128 938914 0) 0 nil]) ((nil rear-nonsticky nil 19016 . 19017) (nil fontified nil 18974 . 19017) (18974 . 19017)) nil (24640 62103 129759 0) 0 nil]) ((#("2" 0 1 (fontified t)) . -18974) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("0" 0 1 (fontified t)) . -18975) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("2" 0 1 (fontified t)) . -18976) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("1" 0 1 (fontified t)) . -18977) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("-" 0 1 (fontified t)) . -18978) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("0" 0 1 (fontified t)) . -18979) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("3" 0 1 (fontified t)) . -18980) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("-" 0 1 (fontified t)) . -18981) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("0" 0 1 (fontified t)) . -18982) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("4" 0 1 (fontified t rear-nonsticky t)) . -18983) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 18984) nil (24640 62103 129917 0) 0 nil]) ((nil rear-nonsticky nil 18983 . 18984) (nil fontified nil 18974 . 18984) (18974 . 18984)) nil (24640 62103 129926 0) 0 nil]) ((18973 . 18974)) nil (24640 62103 129928 0) 0 nil]) ((nil rear-nonsticky nil 18972 . 18973) (nil fontified nil 18963 . 18973) (18963 . 18973)) nil (24640 62103 129931 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-face)) . -18963) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 18964) nil (24640 62103 129938 0) 0 nil]) ((18961 . 18964)) nil (24640 62103 129941 0) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -18961) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 18962) nil (24640 62103 129948 0) 0 nil]) ((18945 . 18962)) nil (24640 62103 129950 0) 0 nil]) ((#("y" 0 1 (fontified t face font-lock-comment-face)) . -18945) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 18946) nil (24640 62103 129957 0) 0 nil]) ((18943 . 18946)) nil (24640 62103 129960 0) 0 nil]) ((18938 . 18943)) nil (24640 62103 129961 0) 0 nil]) ((18917 . 18938)) nil (24640 62103 129963 0) 0 nil]) ((18916 . 18918) (t 24640 61724 0 0)) nil (24640 62103 129965 0) 0 nil]) ((#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443)) nil (24640 61724 856723 0) 0 nil]) ((#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443)) nil (24640 61724 856735 0) 0 nil]) ((#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443)) nil (24640 61724 856747 0) 0 nil]) ((#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#("-" 0 1 (fontified t)) . 20443) (#(" " 0 1 (fontified t)) . 20443) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 20443) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 20443)) nil (24640 61724 856758 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 19639)) nil (24640 61724 856764 0) 0 nil]) ((19436 . 19447)) nil (24640 61724 856765 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 19435) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 19435) (#("
" 0 1 (fontified t face font-lock-comment-face)) . 19435) (t 24640 17833 0 0)) nil (24640 61724 856768 0) 0 nil]) ((4621 . 5836) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4621) (4617 . 4619) (#("
" 0 1 (fontified nil)) . -4617) (3951 . 4618) (#(" " 0 1 (fontified nil)) . 3951) (3921 . 3952) (3896 . 3899) (3859 . 3862) (3824 . 3827) (3774 . 3777) (#("
" 0 1 (fontified nil)) . -3909) (3885 . 3887) (3851 . 3853) (3819 . 3821) (3772 . 3774) (3901 . 3902) (3878 . 3879) (#("
" 0 1 (fontified nil)) . 3878) (3878 . 3879) (#(" " 0 1 (fontified nil)) . -3878) (3846 . 3847) (#("
" 0 1 (fontified nil)) . 3846) (3846 . 3847) (#(" " 0 1 (fontified nil)) . -3846) (3816 . 3817) (#("
" 0 1 (fontified nil)) . 3816) (3816 . 3817) (#(" " 0 1 (fontified nil)) . -3816) (3771 . 3772) (#("
" 0 1 (fontified nil)) . 3771) (3771 . 3772) (#(" " 0 1 (fontified nil)) . -3771) (3731 . 3901) (#(" " 0 1 (fontified nil)) . 3731) (3465 . 3732) (3434 . 3437) (3364 . 3367) (#("
" 0 1 (fontified nil)) . -3459) (3429 . 3431) (3362 . 3364) (3455 . 3456) (3426 . 3427) (#(" " 0 1 (fontified nil)) . -3426) (3361 . 3362) (#("
" 0 1 (fontified nil)) . 3361) (3361 . 3362) (#(" " 0 1 (fontified nil)) . -3361) (3328 . 3455) (#(" " 0 1 (fontified nil)) . 3328) (3303 . 3329) (#("
" 0 1 (fontified nil)) . -3303) (3101 . 3304) (#(" " 0 1 (fontified nil)) . 3101) (2957 . 3102) (#("
" 0 1 (fontified nil)) . -2957) (2872 . 2958) (#(" " 0 1 (fontified nil)) . 2872) (2601 . 2873) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(swiper beacon evil-commentary imenu-list org-download org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 2009 (fontified nil)) . -2601) (t 24640 14637 0 0)) nil (24640 17833 563752 0) 0 nil]) ((#("		" 0 2 (fontified nil)) . 26676) (undo-tree-id0 . 2) (undo-tree-id1 . -2) (undo-tree-id2 . -1) (#("
" 0 1 (fontified t)) . -26676) (undo-tree-id3 . -1) (undo-tree-id4 . 1) 26649) nil (24640 14637 268150 0) 0 nil]) ((26676 . 26679) (26670 . 26676) (#("x-occur" 0 7 (fontified t)) . 26670) (undo-tree-id5 . -6) (undo-tree-id6 . 6) (undo-tree-id7 . -6) (undo-tree-id8 . -4) (undo-tree-id9 . -5) (undo-tree-id10 . -6) (undo-tree-id11 . -7) (undo-tree-id12 . -6) (undo-tree-id13 . -7) (undo-tree-id14 . -7) (undo-tree-id15 . -6) (undo-tree-id16 . -7) (undo-tree-id17 . -6) (undo-tree-id18 . -6) (undo-tree-id19 . -5) (undo-tree-id20 . -4) (undo-tree-id21 . -3) (undo-tree-id22 . -2) (undo-tree-id23 . -1)) nil (24640 14637 268190 0) 0 nil]) ((26670 . 26678)) nil (24640 14637 268194 0) 0 nil]) ((#("x-occur)" 0 8 (fontified t)) . 26670) (undo-tree-id24 . -7) (undo-tree-id25 . -7) (undo-tree-id26 . -8) (undo-tree-id27 . 7) (undo-tree-id28 . -8) (undo-tree-id29 . -7) (undo-tree-id30 . -8) (undo-tree-id31 . -7) (undo-tree-id32 . -4) (undo-tree-id33 . -5) (undo-tree-id34 . -6) (undo-tree-id35 . -7) (undo-tree-id36 . -6) (undo-tree-id37 . -7) (undo-tree-id38 . -7) 26677) nil (24640 14637 268222 0) 0 nil]) ((26670 . 26671) (#("helm" 0 4 (fontified t)) . 26670) (undo-tree-id39 . -1) 26671) nil (24640 14637 268228 0) 0 nil]) ((nil rear-nonsticky nil 26639 . 26640) (nil fontified nil 26630 . 26640) (26630 . 26640) (#(";" 0 1 (fontified t face font-lock-comment-face)) . -26630) (undo-tree-id40 . -1) 26631 (26626 . 26631) (26620 . 26626)) nil (24640 14637 268234 0) 0 nil]) ((apply -3 26533 26577 undo--wrap-and-run-primitive-undo 26533 26577 ((26533 . 26536)))) nil (24640 14637 268237 0) 0 nil]) ((26658 . 26659) 26618) nil (24640 14637 268239 0) 0 nil]) ((nil rear-nonsticky nil 26617 . 26618) (#("
" 0 1 (fontified nil)) . -26658) (26617 . 26659) (t 24640 13376 0 0)) nil (24640 14637 268242 0) 0 nil]) ((4612 . 5827) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4612) (4608 . 4610) (#("
" 0 1 (fontified nil)) . -4608) (3951 . 4609) (#(" " 0 1 (fontified nil)) . 3951) (3921 . 3952) (3896 . 3899) (3859 . 3862) (3824 . 3827) (3774 . 3777) (#("
" 0 1 (fontified nil)) . -3909) (3885 . 3887) (3851 . 3853) (3819 . 3821) (3772 . 3774) (3901 . 3902) (3878 . 3879) (#("
" 0 1 (fontified nil)) . 3878) (3878 . 3879) (#(" " 0 1 (fontified nil)) . -3878) (3846 . 3847) (#("
" 0 1 (fontified nil)) . 3846) (3846 . 3847) (#(" " 0 1 (fontified nil)) . -3846) (3816 . 3817) (#("
" 0 1 (fontified nil)) . 3816) (3816 . 3817) (#(" " 0 1 (fontified nil)) . -3816) (3771 . 3772) (#("
" 0 1 (fontified nil)) . 3771) (3771 . 3772) (#(" " 0 1 (fontified nil)) . -3771) (3731 . 3901) (#(" " 0 1 (fontified nil)) . 3731) (3465 . 3732) (3434 . 3437) (3364 . 3367) (#("
" 0 1 (fontified nil)) . -3459) (3429 . 3431) (3362 . 3364) (3455 . 3456) (3426 . 3427) (#(" " 0 1 (fontified nil)) . -3426) (3361 . 3362) (#("
" 0 1 (fontified nil)) . 3361) (3361 . 3362) (#(" " 0 1 (fontified nil)) . -3361) (3328 . 3455) (#(" " 0 1 (fontified nil)) . 3328) (3303 . 3329) (#("
" 0 1 (fontified nil)) . -3303) (3101 . 3304) (#(" " 0 1 (fontified nil)) . 3101) (2957 . 3102) (#("
" 0 1 (fontified nil)) . -2957) (2872 . 2958) (#(" " 0 1 (fontified nil)) . 2872) (2601 . 2873) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(beacon evil-commentary imenu-list org-download org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 2002 (fontified nil)) . -2601) (t 24639 62480 0 0)) nil (24640 13376 503603 0) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -21788) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 21789) nil (24639 62480 484177 0) 0 nil]) ((#("w" 0 1 (fontified t face font-lock-comment-face)) . -21789) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("
" 0 1 (fontified t face font-lock-comment-face)) . -21790) (undo-tree-id4 . -1) (undo-tree-id5 . 1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 21791) nil (24639 62480 484194 0) 0 nil]) ((21790 . 21791)) nil (24639 62480 484197 0) 0 nil]) ((21789 . 21790)) nil (24639 62480 484198 0) 0 nil]) ((21788 . 21789)) nil (24639 62480 484200 0) 0 nil]) ((nil rear-nonsticky nil 21787 . 21788) (nil fontified nil 21778 . 21788) (21778 . 21788)) nil (24639 62480 484202 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-face)) . -21778) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 21779) nil (24639 62480 484208 0) 0 nil]) ((21772 . 21779)) nil (24639 62480 484210 0) 0 nil]) ((#("k" 0 1 (fontified t face font-lock-comment-face)) . -21772) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 21773) nil (24639 62480 484219 0) 0 nil]) ((21757 . 21773)) nil (24639 62480 484221 0) 0 nil]) ((21755 . 21757)) nil (24639 62480 484222 0) 0 nil]) ((nil rear-nonsticky nil 21770 . 21771) (nil fontified nil 21756 . 21771) (21756 . 21771)) nil (24639 62480 484225 0) 0 nil]) ((21754 . 21756)) nil (24639 62480 484226 0) 0 nil]) ((21754 . 21756)) nil (24639 62480 484228 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 21442) (t 24639 60153 0 0)) nil (24639 62480 484230 0) 0 nil]) ((4605 . 5820) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4605) (4601 . 4603) (#("
" 0 1 (fontified nil)) . -4601) (3951 . 4602) (#(" " 0 1 (fontified nil)) . 3951) (3921 . 3952) (3896 . 3899) (3859 . 3862) (3824 . 3827) (3774 . 3777) (#("
" 0 1 (fontified nil)) . -3909) (3885 . 3887) (3851 . 3853) (3819 . 3821) (3772 . 3774) (3901 . 3902) (3878 . 3879) (#("
" 0 1 (fontified nil)) . 3878) (3878 . 3879) (#(" " 0 1 (fontified nil)) . -3878) (3846 . 3847) (#("
" 0 1 (fontified nil)) . 3846) (3846 . 3847) (#(" " 0 1 (fontified nil)) . -3846) (3816 . 3817) (#("
" 0 1 (fontified nil)) . 3816) (3816 . 3817) (#(" " 0 1 (fontified nil)) . -3816) (3771 . 3772) (#("
" 0 1 (fontified nil)) . 3771) (3771 . 3772) (#(" " 0 1 (fontified nil)) . -3771) (3731 . 3901) (#(" " 0 1 (fontified nil)) . 3731) (3465 . 3732) (3434 . 3437) (3364 . 3367) (#("
" 0 1 (fontified nil)) . -3459) (3429 . 3431) (3362 . 3364) (3455 . 3456) (3426 . 3427) (#(" " 0 1 (fontified nil)) . -3426) (3361 . 3362) (#("
" 0 1 (fontified nil)) . 3361) (3361 . 3362) (#(" " 0 1 (fontified nil)) . -3361) (3328 . 3455) (#(" " 0 1 (fontified nil)) . 3328) (3303 . 3329) (#("
" 0 1 (fontified nil)) . -3303) (3101 . 3304) (#(" " 0 1 (fontified nil)) . 3101) (2957 . 3102) (#("
" 0 1 (fontified nil)) . -2957) (2872 . 2958) (#(" " 0 1 (fontified nil)) . 2872) (2601 . 2873) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(evil-commentary imenu-list org-download org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1995 (fontified nil)) . -2601) (t 24639 59968 0 0)) nil (24639 60153 711318 0) 0 nil]) ((18846 . 18851)) nil (24639 59968 575658 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 18888) (#("
" 0 1 (fontified t)) . 18888)) nil (24639 59968 575665 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 18865) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1)) nil (24639 59968 575693 0) 0 nil]) ((nil rear-nonsticky nil 18887 . 18888) (nil fontified nil 18866 . 18888) (18866 . 18888)) nil (24639 59968 575696 0) 0 nil]) ((18864 . 18866)) nil (24639 59968 575697 0) 0 nil]) ((nil rear-nonsticky nil 18863 . 18864) (nil fontified nil 18854 . 18864) (18854 . 18864)) nil (24639 59968 575700 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-face)) . -18854) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 18855) nil (24639 59968 575705 0) 0 nil]) ((18848 . 18855)) nil (24639 59968 575708 0) 0 nil]) ((18827 . 18848)) nil (24639 59968 575709 0) 0 nil]) ((18827 . 18829) (t 24639 59904 0 0)) nil (24639 59968 575711 0) 0 nil]) ((4598 . 5813) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4598) (4594 . 4596) (#("
" 0 1 (fontified nil)) . -4594) (3951 . 4595) (#(" " 0 1 (fontified nil)) . 3951) (3921 . 3952) (3896 . 3899) (3859 . 3862) (3824 . 3827) (3774 . 3777) (#("
" 0 1 (fontified nil)) . -3909) (3885 . 3887) (3851 . 3853) (3819 . 3821) (3772 . 3774) (3901 . 3902) (3878 . 3879) (#("
" 0 1 (fontified nil)) . 3878) (3878 . 3879) (#(" " 0 1 (fontified nil)) . -3878) (3846 . 3847) (#("
" 0 1 (fontified nil)) . 3846) (3846 . 3847) (#(" " 0 1 (fontified nil)) . -3846) (3816 . 3817) (#("
" 0 1 (fontified nil)) . 3816) (3816 . 3817) (#(" " 0 1 (fontified nil)) . -3816) (3771 . 3772) (#("
" 0 1 (fontified nil)) . 3771) (3771 . 3772) (#(" " 0 1 (fontified nil)) . -3771) (3731 . 3901) (#(" " 0 1 (fontified nil)) . 3731) (3465 . 3732) (3434 . 3437) (3364 . 3367) (#("
" 0 1 (fontified nil)) . -3459) (3429 . 3431) (3362 . 3364) (3455 . 3456) (3426 . 3427) (#(" " 0 1 (fontified nil)) . -3426) (3361 . 3362) (#("
" 0 1 (fontified nil)) . 3361) (3361 . 3362) (#(" " 0 1 (fontified nil)) . -3361) (3328 . 3455) (#(" " 0 1 (fontified nil)) . 3328) (3303 . 3329) (#("
" 0 1 (fontified nil)) . -3303) (3101 . 3304) (#(" " 0 1 (fontified nil)) . 3101) (2957 . 3102) (#("
" 0 1 (fontified nil)) . -2957) (2872 . 2958) (#(" " 0 1 (fontified nil)) . 2872) (2601 . 2873) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(imenu-list org-download org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1979 (fontified nil)) . -2601) (t 24639 56437 0 0)) nil (24639 59904 53699 0) 0 nil]) ((4582 . 5797) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4582) (4578 . 4580) (#("
" 0 1 (fontified nil)) . -4578) (3951 . 4579) (#(" " 0 1 (fontified nil)) . 3951) (3921 . 3952) (3896 . 3899) (3859 . 3862) (3824 . 3827) (3774 . 3777) (#("
" 0 1 (fontified nil)) . -3909) (3885 . 3887) (3851 . 3853) (3819 . 3821) (3772 . 3774) (3901 . 3902) (3878 . 3879) (#("
" 0 1 (fontified nil)) . 3878) (3878 . 3879) (#(" " 0 1 (fontified nil)) . -3878) (3846 . 3847) (#("
" 0 1 (fontified nil)) . 3846) (3846 . 3847) (#(" " 0 1 (fontified nil)) . -3846) (3816 . 3817) (#("
" 0 1 (fontified nil)) . 3816) (3816 . 3817) (#(" " 0 1 (fontified nil)) . -3816) (3771 . 3772) (#("
" 0 1 (fontified nil)) . 3771) (3771 . 3772) (#(" " 0 1 (fontified nil)) . -3771) (3731 . 3901) (#(" " 0 1 (fontified nil)) . 3731) (3465 . 3732) (3434 . 3437) (3364 . 3367) (#("
" 0 1 (fontified nil)) . -3459) (3429 . 3431) (3362 . 3364) (3455 . 3456) (3426 . 3427) (#(" " 0 1 (fontified nil)) . -3426) (3361 . 3362) (#("
" 0 1 (fontified nil)) . 3361) (3361 . 3362) (#(" " 0 1 (fontified nil)) . -3361) (3328 . 3455) (#(" " 0 1 (fontified nil)) . 3328) (3303 . 3329) (#("
" 0 1 (fontified nil)) . -3303) (3101 . 3304) (#(" " 0 1 (fontified nil)) . 3101) (2957 . 3102) (#("
" 0 1 (fontified nil)) . -2957) (2872 . 2958) (#(" " 0 1 (fontified nil)) . 2872) (2601 . 2873) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(org-download org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1968 (fontified nil)) . -2601) (t 24638 64300 0 0)) nil (24639 56437 370610 0) 0 nil]) ((16833 . 16837)) nil (24638 64300 398460 0) 0 nil]) ((#("e" 0 1 (fontified t)) . 16833) (#("d" 0 1 (fontified t)) . 16833) (#("i" 0 1 (fontified t)) . 16833) (#("h" 0 1 (fontified t)) . 16833) (#("-" 0 1 (fontified t)) . 16833) (#("w" 0 1 (fontified t)) . 16833) (#("o" 0 1 (fontified t)) . 16833) (#("h" 0 1 (fontified t)) . 16833) (#("s" 0 1 (fontified t)) . 16833)) nil (24638 64300 398468 0) 0 nil]) ((16821 . 16825)) nil (24638 64300 398473 0) 0 nil]) ((#("g" 0 1 (fontified t)) . 16821) (#("n" 0 1 (fontified t)) . 16821) (#("i" 0 1 (fontified t)) . 16821) (#("d" 0 1 (fontified t)) . 16821) (#("l" 0 1 (fontified t)) . 16821) (#("o" 0 1 (fontified t)) . 16821) (#("f" 0 1 (fontified t)) . 16821) (t 24638 64128 0 0)) nil (24638 64300 398476 0) 0 nil]) ((16818 . 16819)) nil (24638 64127 927193 0) 0 nil]) ((16813 . 16816)) nil (24638 64127 927199 0) 0 nil]) ((16812 . 16814)) nil (24638 64127 927201 0) 0 nil]) ((#("a" 0 1 (face font-lock-string-face fontified t)) . 16812) (#("z" 0 1 (face font-lock-string-face fontified t)) . 16812)) nil (24638 64127 927203 0) 0 nil]) ((16810 . 16811)) nil (24638 64127 927206 0) 0 nil]) ((16806 . 16810)) nil (24638 64127 927207 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 16772) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (24638 64127 927236 0) 0 nil]) ((nil rear-nonsticky nil 16837 . 16838) (nil fontified nil 16773 . 16838) (16773 . 16838)) nil (24638 64127 927239 0) 0 nil]) ((16772 . 16775) (t 24638 60659 0 0)) nil (24638 64127 927241 0) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((15894 . 15897)) ((#("xxx" 0 3 (fontified t)) . 15894) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (t 24638 60623 0 0)) (24638 60623 398765 0) 0 nil]) ((#("d" 0 1 (fontified t)) . 15894) (#("n" 0 1 (fontified t)) . 15894) (#("u" 0 1 (fontified t)) . 15894) (#("o" 0 1 (fontified t)) . 15894) (#("r" 0 1 (fontified t)) . 15894) (#("g" 0 1 (fontified t)) . 15894) (#("k" 0 1 (fontified t)) . 15894) (#("c" 0 1 (fontified t)) . 15894) (#("a" 0 1 (fontified t)) . 15894) (#("b" 0 1 (fontified t)) . 15894) (#("-" 0 1 (fontified t)) . 15894) (#("l" 0 1 (fontified t)) . 15894) (#("a" 0 1 (fontified t)) . 15894) (#("n" 0 1 (fontified t)) . 15894) (#("i" 0 1 (fontified t)) . 15894) (#("g" 0 1 (fontified t)) . 15894) (#("i" 0 1 (fontified t)) . 15894) (#("r" 0 1 (fontified t)) . 15894) (#("o" 0 1 (fontified t)) . 15894)) ((15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895) (15894 . 15895)) (24638 60641 82730 0) 0 nil]) ((9791 . 9794)) ((#("yyy" 0 3 (fontified t)) . 9791)) (24638 60641 282842 0) 0 nil]) ((#("t" 0 1 (fontified t)) . 9791) (#("s" 0 1 (fontified t)) . 9791) (#("i" 0 1 (fontified t)) . 9791) (#("l" 0 1 (fontified t)) . 9791) (#("a" 0 1 (fontified t)) . 9791) (#("-" 0 1 (fontified t)) . 9791) (#("e" 0 1 (fontified t)) . 9791) (#("m" 0 1 (fontified t)) . 9791) (#("a" 0 1 (fontified t)) . 9791) (#("r" 0 1 (fontified t)) . 9791) (#("f" 0 1 (fontified t)) . 9791) (#("-" 0 1 (fontified t)) . 9791) (#("t" 0 1 (fontified t)) . 9791) (#("l" 0 1 (fontified t)) . 9791) (#("u" 0 1 (fontified t)) . 9791) (#("a" 0 1 (fontified t)) . 9791) (#("f" 0 1 (fontified t)) . 9791) (#("e" 0 1 (fontified t)) . 9791) (#("d" 0 1 (fontified t)) . 9791)) ((9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792) (9791 . 9792)) (24638 60641 482521 0) 0 nil]) ((9858 . 9861)) ((#("xxx" 0 3 (fontified t)) . 9858)) (24638 60641 947350 0) 0 nil]) ((#("t" 0 1 (fontified t)) . 9858) (#("s" 0 1 (fontified t)) . 9858) (#("i" 0 1 (fontified t)) . 9858) (#("l" 0 1 (fontified t)) . 9858) (#("a" 0 1 (fontified t)) . 9858) (#("-" 0 1 (fontified t)) . 9858) (#("e" 0 1 (fontified t)) . 9858) (#("m" 0 1 (fontified t)) . 9858) (#("a" 0 1 (fontified t)) . 9858) (#("r" 0 1 (fontified t)) . 9858) (#("f" 0 1 (fontified t)) . 9858) (#("-" 0 1 (fontified t)) . 9858) (#("t" 0 1 (fontified t)) . 9858) (#("l" 0 1 (fontified t)) . 9858) (#("u" 0 1 (fontified t)) . 9858) (#("a" 0 1 (fontified t)) . 9858) (#("f" 0 1 (fontified t)) . 9858) (#("e" 0 1 (fontified t)) . 9858) (#("d" 0 1 (fontified t)) . 9858)) ((9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859) (9858 . 9859)) (24638 60642 317670 0) 0 nil]) ((#("y" 0 1 (fontified t)) . -9594) (undo-tree-id12 . -1) (#("y" 0 1 (fontified t)) . -9595) (undo-tree-id13 . -1) 9596) ((9594 . 9596)) (24638 60642 682924 0) 0 nil]) ((9594 . 9596)) ((#("yy" 0 1 (fontified t) 1 2 (fontified t)) . 9594) (undo-tree-id18 . -2) (undo-tree-id19 . -2)) (24638 60642 954631 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 9911) (#("
" 0 1 (fontified t)) . 9911)) ((9911 . 9912) (9911 . 9912)) (24638 60643 186469 0) 0 nil]) ((9776 . 9777)) ((#("
" 0 1 (fontified t)) . 9776) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1)) (24638 60643 394481 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 9776) (undo-tree-id14 . -1) (#("
" 0 1 (fontified t)) . 9776)) ((9776 . 9777) (9776 . 9777)) (24638 60644 258456 0) 0 nil]) ((9911 . 9914)) ((#("


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 9911) (undo-tree-id23 . -1) (undo-tree-id24 . -1)) (24638 60644 466463 0) 0 nil]) ((nil rear-nonsticky nil 9910 . 9911) (nil fontified nil 9778 . 9792) (nil fontified nil 9792 . 9793) (nil fontified nil 9793 . 9794) (nil fontified nil 9794 . 9795) (nil fontified nil 9795 . 9796) (nil fontified nil 9796 . 9797) (nil fontified nil 9797 . 9798) (nil fontified nil 9798 . 9799) (nil fontified nil 9799 . 9800) (nil fontified nil 9800 . 9801) (nil fontified nil 9801 . 9802) (nil fontified nil 9802 . 9803) (nil fontified nil 9803 . 9804) (nil fontified nil 9804 . 9805) (nil fontified nil 9805 . 9806) (nil fontified nil 9806 . 9807) (nil fontified nil 9807 . 9808) (nil fontified nil 9808 . 9809) (nil fontified nil 9809 . 9810) (nil fontified nil 9810 . 9811) (nil fontified nil 9811 . 9833) (nil fontified nil 9833 . 9842) (nil fontified nil 9842 . 9845) (9778 . 9911)) ((#("(add-to-list 'default-frame-alist '(foreground-color . \"#E0DFDB\"))
(add-to-list 'default-frame-alist '(background-color . \"#102372\"))" 0 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 55 (fontified nil) 55 64 (fontified nil face font-lock-string-face) 64 67 (fontified nil) 67 81 (fontified nil) 81 82 (fontified nil) 82 83 (fontified nil) 83 84 (fontified nil) 84 85 (fontified nil) 85 86 (fontified nil) 86 87 (fontified nil) 87 88 (fontified nil) 88 89 (fontified nil) 89 90 (fontified nil) 90 91 (fontified nil) 91 92 (fontified nil) 92 93 (fontified nil) 93 94 (fontified nil) 94 95 (fontified nil) 95 96 (fontified nil) 96 97 (fontified nil) 97 98 (fontified nil) 98 99 (fontified nil) 99 100 (fontified nil) 100 122 (fontified nil) 122 131 (fontified nil face font-lock-string-face) 131 132 (fontified nil) 132 133 (rear-nonsticky nil fontified nil)) . 9778) (undo-tree-id41 . -133) (undo-tree-id42 . -133) (undo-tree-id43 . -67) (undo-tree-id44 . -67) (undo-tree-id45 . -14) (nil fontified t 9778 . 9792) (nil rear-nonsticky t 9910 . 9911)) (24638 60654 906848 0) 0 nil]) ((9776 . 9778)) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 9776) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2)) (24638 60655 762364 0) 0 nil] [nil nil ((nil rear-nonsticky nil 390 . 391) (nil fontified nil 258 . 313) (nil fontified nil 313 . 322) (nil fontified nil 322 . 325) (258 . 391) (t 24638 60529 0 0)) ((#("(add-to-list 'default-frame-alist '(foreground-color . \"#E0DFDB\"))
(add-to-list 'default-frame-alist '(background-color . \"#102372\"))" 0 55 (fontified nil) 55 64 (fontified nil face font-lock-string-face) 64 67 (fontified nil) 67 122 (fontified nil) 122 131 (fontified nil face font-lock-string-face) 131 132 (fontified nil) 132 133 (fontified nil rear-nonsticky nil)) . 258) (undo-tree-id4 . -133) (undo-tree-id5 . -133) (undo-tree-id6 . -67) (undo-tree-id7 . -133) (nil fontified t 258 . 313) (nil rear-nonsticky t 390 . 391)) (24638 60548 534838 0) 0 nil]) ((nil fontified nil 194 . 197) (194 . 257)) ((#(";; enable clipboard in emacs
(setq x-select-enable-clipboard t)" 0 3 (fontified nil face font-lock-comment-delimiter-face) 3 29 (fontified nil face font-lock-comment-face) 29 30 (fontified t) 30 34 (fontified t face font-lock-keyword-face) 34 62 (fontified t) 62 63 (fontified t rear-nonsticky nil)) . 194) (undo-tree-id39 . -29) (undo-tree-id40 . -29) (nil fontified t 194 . 197)) (24638 60656 146316 0) 0 nil]) ((#("'" 0 1 (fontified t)) . 15760)) nil (24638 60646 794691 0) 0 nil]) ((#("'" 0 1 (fontified t)) . 15728)) nil (24638 59369 589541 0) 0 nil]) ((15729 . 15730)) nil (24638 59369 589544 0) 0 nil]) ((#("o" 0 1 (fontified t)) . 15729) (t 24638 59327 0 0)) nil (24638 59369 589546 0) 0 nil]) ((15728 . 15729)) nil (24638 59327 493259 0) 0 nil]) ((15760 . 15761) (t 24638 59296 0 0)) nil (24638 59327 493266 0) 0 nil]) ((#("r" 0 1 (fontified t)) . 15779) (#("o" 0 1 (fontified t)) . 15779)) nil (24638 59296 706239 0) 0 nil]) ((#("l" 0 1 (fontified t)) . 15779) (#("o" 0 1 (fontified t)) . 15779) (#("c" 0 1 (fontified t)) . 15779) (#("-" 0 1 (fontified t)) . 15779) (#("d" 0 1 (fontified t)) . 15779) (#("n" 0 1 (fontified t)) . 15779) (#("u" 0 1 (fontified t)) . 15779) (#("o" 0 1 (fontified t)) . 15779) (#("r" 0 1 (fontified t)) . 15779) (#("g" 0 1 (fontified t)) . 15779) (#("e" 0 1 (fontified t)) . 15779) (#("r" 0 1 (fontified t)) . 15779) (#("o" 0 1 (fontified t)) . 15779) (#("f" 0 1 (fontified t)) . 15779)) nil (24638 59296 706250 0) 0 nil]) ((15760 . 15779) (#("ori" 0 3 (fontified t)) . -15760) (undo-tree-id74 . -3) (undo-tree-id75 . 3) (undo-tree-id76 . -3) 15763) nil (24638 59296 706274 0) 0 nil]) ((15761 . 15763)) nil (24638 59296 706277 0) 0 nil]) ((#("r" 0 1 (fontified t)) . -15761) (undo-tree-id77 . -1) (#("i" 0 1 (fontified t)) . -15762) (undo-tree-id78 . -1) 15763) nil (24638 59296 706283 0) 0 nil]) ((15760 . 15763)) nil (24638 59296 706286 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 10161)) nil (24638 59296 706287 0) 0 nil]) ((#("      " 0 6 (fontified t)) . 10161)) nil (24638 59296 706289 0) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 10161) (undo-tree-id79 . -1) (undo-tree-id80 . -1)) nil (24638 59296 706295 0) 0 nil]) ((#("      (setq original-foreground (face-attribute 'default :foreground))" 0 6 (fontified t) 6 7 (fontified t) 7 11 (fontified t face font-lock-keyword-face) 11 57 (fontified t) 57 68 (fontified t face font-lock-builtin-face) 68 70 (fontified t)) . 10161)) nil (24638 59296 706297 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 10161) (undo-tree-id81 . -1) (undo-tree-id82 . -1)) nil (24638 59296 706302 0) 0 nil]) ((#("      (setq original-background (face-attribute 'default :background))" 0 6 (fontified t) 6 7 (fontified t) 7 11 (fontified t face font-lock-keyword-face) 11 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 68 (fontified t face font-lock-builtin-face) 68 70 (fontified t)) . 10161)) nil (24638 59296 706304 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 10161) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (t 24638 59133 0 0)) nil (24638 59296 706315 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 10304) (undo-tree-id69 . 1)) nil (24638 59133 839519 0) 0 nil]) ((10233 . 10239)) nil (24638 59133 839524 0) 0 nil]) ((10162 . 10168)) nil (24638 59133 839527 0) 0 nil]) ((nil rear-nonsticky nil 10291 . 10292) (nil fontified nil 10289 . 10292) (nil fontified nil 10278 . 10289) (nil fontified nil 10232 . 10278) (nil fontified nil 10228 . 10232) (nil fontified nil 10227 . 10228) (nil fontified nil 10224 . 10227) (nil fontified nil 10213 . 10224) (nil fontified nil 10212 . 10213) (nil fontified nil 10211 . 10212) (nil fontified nil 10210 . 10211) (nil fontified nil 10209 . 10210) (nil fontified nil 10208 . 10209) (nil fontified nil 10207 . 10208) (nil fontified nil 10206 . 10207) (nil fontified nil 10205 . 10206) (nil fontified nil 10204 . 10205) (nil fontified nil 10167 . 10204) (nil fontified nil 10163 . 10167) (nil fontified nil 10162 . 10163) (10162 . 10292)) nil (24638 59133 839535 0) 0 nil]) ((10163 . 10169) (#("      " 0 6 (fontified nil)) . 10162) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (10162 . 10169) (#("      " 0 6 (fontified nil)) . 10161) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (10161 . 10168) (10139 . 10141) (10158 . 10159) (t 24638 59024 0 0)) nil (24638 59133 839548 0) 0 nil] [nil ([nil ([nil nil ((9625 . 21643) (#(":BACKGROUND))
(SETQ ORIGINAL-FOREGROUND (FACE-ATTRIBUTE 'DEFAULT :FOREGROUND))

;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"GRAY\")))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
(ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))


(IF (DISPLAY-GRAPHIC-P)
    (PROGN
    ;; IF GRAPHIC (GUI)
      (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (FACE-REMAP-ADD-RELATIVE 'HL-LINE NIL :BACKGROUND \"GRAY\")))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-OPERATOR-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (HL-LINE-MODE 0)))
      (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :BACKGROUND \"LIGHTGRAY\")))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))

      ;; (ADD-HOOK 'EVIL-OPERATOR-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"GRAY\")))

      (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :BACKGROUND \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :WEIGHT 'NORMAL)))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))

      (ADD-HOOK 'EVIL-VISUAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      ;; (ADD-HOOK 'EVIL-VISUAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"DARKGRAY\")))
      ;; (ADD-HOOK 'EVIL-VISUAL-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))

      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))
      (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND ORIGINAL-BACKGROUND)))
      (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :FOREGROUND ORIGINAL-FOREGROUND)))
    )
    ;; ELSE (OPTIONAL - TERMINAL MODE)
    (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :UNDERLINE T :BACKGROUND ORIGINAL-BACKGROUND)))
    (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :UNDERLINE T :OVERLINE 'T :BACKGROUND \"BLACK\")))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 0)))
)


;; [FOR REFERENCE] GUI DETECTION ~ MORE READABLE :)
;;
;; (WHEN (DISPLAY-GRAPHIC-P)
;;     (YOUR)
;;     (CODE))
;;
;; HTTPS://STACKOVERFLOW.COM/QUESTIONS/5795451/HOW-TO-DETECT-THAT-EMACS-IS-IN-TERMINAL-MODE
;; 2021-02-10


;; (DEFUN HIGHLIGHT-SELECTED-WINDOW ()
;;   \"HIGHLIGHT SELECTED WINDOW WITH A DIFFERENT BACKGROUND COLOR.\"
;;   (WALK-WINDOWS (LAMBDA (W)
;;                   (UNLESS (EQ W (SELECTED-WINDOW))
;;                     (WITH-CURRENT-BUFFER (WINDOW-BUFFER W)
;;                       (BUFFER-FACE-SET '(:BACKGROUND \"WHITE\"))))))
;;   (BUFFER-FACE-SET 'DEFAULT))
;; (ADD-HOOK 'BUFFER-LIST-UPDATE-HOOK 'HIGHLIGHT-SELECTED-WINDOW)


;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/34251/CHANGE-MODELINE-BACKGROUND-WHEN-IN-NORMAL-EVIL-MODE
;;
;; (SETQ ORIGINAL-MODELINE-BACKGROUND (FACE-ATTRIBUTE 'MODE-LINE :BACKGROUND))
;; (SETQ NORMAL-STATE-BACKGROUND \"RED\")
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FACE-ATTRIBUTE 'MODE-LINE NIL :BACKGROUND NORMAL-STATE-BACKGROUND)))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK  (LAMBDA () (SET-FACE-ATTRIBUTE 'MODE-LINE NIL :BACKGROUND ORIGINAL-MODELINE-BACKGROUND)))


;; EVIL CURSOR IN MODES 2021-02-06
;; HTTPS://GITHUB.COM/HLISSNER/DOOM-EMACS/ISSUES/1848
;; HTTP://FNWIYA.HATENABLOG.COM/ENTRY/2016/01/12/213149 
;; (SETQ EVIL-NORMAL-STATE-CURSOR '(BOX \"BLACK\")
;;       EVIL-INSERT-STATE-CURSOR '(BAR \"BLACK\")
;;       EVIL-VISUAL-STATE-CURSOR '(HOLLOW \"BLACK\")
;;       EVIL-EMACS-STATE-CURSOR '(BOX \"BLACK\"))

;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/30582/HOW-DO-I-CHANGE-THE-MODE-INDICATORS-FOR-EVIL-MODE-IN-THE-SPACELINE-MODE-LINE-PAC
(SETQ EVIL-NORMAL-STATE-TAG \"NORMAL\")
(SETQ EVIL-INSERT-STATE-TAG \"INSERT\")
(SETQ EVIL-VISUAL-STATE-TAG \"VISUAL\")
(SETQ EVIL-REPLACE-STATE-TAG \"REPLACE\")

;; COLOR THE EVIL TAG - COLORS TAKEN FROM SPACELINE
;; HTTPS://GITHUB.COM/MALABARBA/SMART-MODE-LINE/ISSUES/195
(SETQ EVIL-NORMAL-STATE-TAG   (PROPERTIZE \" NORMAL \" 'FACE '((:BACKGROUND \"BLACK\"          :FOREGROUND \"WHITE\")))
      EVIL-EMACS-STATE-TAG    (PROPERTIZE \" <E> \" 'FACE '((:BACKGROUND ORIGINAL-BACKGROUND :FOREGROUND FOREGROUND-COLOR)))
      EVIL-INSERT-STATE-TAG   (PROPERTIZE \" INSERT \" 'FACE '((:BACKGROUND \"LIGHTYELLOW\"    :FOREGROUND \"BLACK\")))
      EVIL-REPLACE-STATE-TAG  (PROPERTIZE \" REPLACE \" 'FACE '((:BACKGROUND \"CHOCOLATE\"     :FOREGROUND \"BLACK\")))
      EVIL-MOTION-STATE-TAG   (PROPERTIZE \" <MOTION> \" 'FACE '((:BACKGROUND \"PLUM3\"             :FOREGROUND \"BLACK\")))
      EVIL-VISUAL-STATE-TAG   (PROPERTIZE \" VISUAL \" 'FACE '((:BACKGROUND \"DARKGRAY\"       :FOREGROUND \"BLACK\")))
      EVIL-OPERATOR-STATE-TAG (PROPERTIZE \" <OPERATOR> \" 'FACE '((:BACKGROUND \"SANDY BROWN\"       :FOREGROUND \"BLACK\"))))

;; EVIL KEY BINDING
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"SPC\") 'EVIL-EX)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"J\") 'EVIL-NEXT-VISUAL-LINE)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"K\") 'EVIL-PREVIOUS-VISUAL-LINE)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"C-U\") 'EVIL-SCROLL-UP)
(DEFINE-KEY EVIL-VISUAL-STATE-MAP (KBD \"C-U\") 'EVIL-SCROLL-UP)

;; FORWARD-SENTENCE IS BASED ON THE SENTENCE-END VARIABLE
;; HTTPS://STACKOVERFLOW.COM/QUESTIONS/20257022/EVIL-EMACS-MODE-SENTENCE-MOTIONS-AND-OTHER-QUESTIONS
(SETQ SENTENCE-END \"[\\\\.\\\\?\\\\!] +\") ;; . OR ? OR ! FOLLOWED BY SPACES.
(DEFINE-KEY EVIL-NORMAL-STATE-MAP \")\" 'FORWARD-SENTENCE)


;; EVIL UNDO 2021-02-06
;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/3358/HOW-CAN-I-GET-UNDO-BEHAVIOR-IN-EVIL-SIMILAR-TO-VIMS
(SETQ EVIL-WANT-FINE-UNDO 'T)
(SETQ EVIL-WANT-FINE-UNDO 'FINE)
;; (SETQ EVIL-UNDO-SYSTEM 'UNDO-TREE) ;; NOT WORKING TESTED 2021-02-07

;; EVIL-SURROUND PACKAGE 2021-01-29
(GLOBAL-EVIL-SURROUND-MODE 1)

;; EVIL-SURROUND ADD PAIRS 2021-02-08
;; HTTPS://GITHUB.COM/EMACS-EVIL/EVIL-SURROUND
;; THIS MACRO WAS COPIED FROM HERE: HTTPS://STACKOVERFLOW.COM/A/22418983/4921402
(DEFMACRO DEFINE-AND-BIND-QUOTED-TEXT-OBJECT (NAME KEY START-REGEX END-REGEX)
  (LET ((INNER-NAME (MAKE-SYMBOL (CONCAT \"EVIL-INNER-\" NAME)))
        (OUTER-NAME (MAKE-SYMBOL (CONCAT \"EVIL-A-\" NAME))))
    `(PROGN
       (EVIL-DEFINE-TEXT-OBJECT ,INNER-NAME (COUNT &OPTIONAL BEG END TYPE)
         (EVIL-SELECT-PAREN ,START-REGEX ,END-REGEX BEG END TYPE COUNT NIL))
       (EVIL-DEFINE-TEXT-OBJECT ,OUTER-NAME (COUNT &OPTIONAL BEG END TYPE)
         (EVIL-SELECT-PAREN ,START-REGEX ,END-REGEX BEG END TYPE COUNT T))
       (DEFINE-KEY EVIL-INNER-TEXT-OBJECTS-MAP ,KEY #',INNER-NAME)
       (DEFINE-KEY EVIL-OUTER-TEXT-OBJECTS-MAP ,KEY #',OUTER-NAME))))

(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"PIPE\" \"|\" \"|\" \"|\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"SLASH\" \"/\" \"/\" \"/\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"UNDERSCORE\" \"_\" \"_\" \"_\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"CODE\" \"~\" \"~\" \"~\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"VERBATIM\" \"=\" \"=\" \"=\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"STRIKE_THROUGH\" \"+\" \"+\" \"+\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"ASTERISK\" \"*\" \"*\" \"*\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"DOLLAR\" \"$\" \"\\\\$\" \"\\\\$\") ;; SOMETIMES YOUR HAVE TO ESCAPE THE REGEX



;;----------------------------------------------------------------
;; ACE JUMP MODE
;;----------------------------------------------------------------
;; ACE JUMP MODE MAJOR FUNCTION
;; 
;; (ADD-TO-LIST 'LOAD-PATH \"/USERS/OSICKWON/.EMACS.D/ACE-JUMP-MODE/\")
;; (AUTOLOAD
;;   'ACE-JUMP-MODE
;;   \"ACE-JUMP-MODE\"
;;   \"EMACS QUICK MOVE MINOR MODE\"
;;   T)

;; YOU CAN SELECT THE KEY YOU PREFER TO
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C SPC\") 'ACE-JUMP-MODE)
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C SPC\") 'ACE-JUMP-CHAR-MODE)
;;
;; CONFLICT ORG-MODE: C-C SPC => ORG-TABLE-BLANK-FIELD

;; `C-U C-C SPC` WAS NOT WORKED PROPERLY, SO USED `C-C C-C` 2021-01-17
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C C-C SPC\") 'ACE-JUMP-CHAR-MODE)


;; WHEN ORG-MODE STARTS IT (ORG-MODE-MAP) OVERRIDES THE ACE-JUMP-MODE.
;; (HTTPS://GITHUB.COM/WINTERTTR/ACE-JUMP-MODE/ISSUES/47)
;; (ADD-HOOK 'ORG-MODE-HOOK
;;           (LAMBDA ()
;;             ;; (LOCAL-SET-KEY (KBD \"\\C-C SPC\") 'ACE-JUMP-MODE)))
;;             (LOCAL-SET-KEY (KBD \"\\C-C SPC\") 'ACE-JUMP-CHAR-MODE)))
 
;; 
;; ENABLE A MORE POWERFUL JUMP BACK FUNCTION FROM ACE JUMP MODE
;;
;; (AUTOLOAD
;;   'ACE-JUMP-MODE-POP-MARK
;;   \"ACE-JUMP-MODE\"
;;   \"ACE JUMP BACK:-)\"
;;   T)
;; (EVAL-AFTER-LOAD \"ACE-JUMP-MODE\"
;;   '(ACE-JUMP-MODE-ENABLE-MARK-SYNC))
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-X SPC\") 'ACE-JUMP-MODE-POP-MARK)

;;IF YOU USE VIPER MODE :
;(DEFINE-KEY VIPER-VI-GLOBAL-USER-MAP (KBD \"SPC\") 'ACE-JUMP-MODE)
;;IF YOU USE EVIL
;(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"SPC\") 'ACE-JUMP-MODE)
;; ----------------------------------------------------------------

;; PROJECTILE PACKAGE 2021-01-29
;; -----------------------------
(PROJECTILE-MODE +1)
(DEFINE-KEY PROJECTILE-MODE-MAP (KBD \"S-P\") 'PROJECTILE-COMMAND-MAP)
(DEFINE-KEY PROJECTILE-MODE-MAP (KBD \"C-C P\") 'PROJECTILE-COMMAND-MAP)

;; USE 'HELM-PROJECTILE-AG' INSETED OF C-C P S S, WHICH STANDS FOR AG SERCHING IN PROJECTILE
;; ONCE INSTALL PACKAGE OF 'HELM-PROJECTILE', YOU CAN ALSO USE 'HELM-PROJECTILE-AG'
;; OR INSTALL 'HELM-AG' PACKAGE TO USE SAME FUNCTION
;; HOWEVER, REQUIRED INTALL '(SUDO) PORT INSTALL THE_SILVER_SEARCHER' FIRST (THE_SILVER_SEARCHER = AG)


;; OLIVETTI 2021-02-11
;; -------------------
;; TO REMOVE BOUNDRY -> '(FRINGE-MODE 0 NIL (FRINGE)) IN `(CUSTOM-SET-VARIABLES` LINES IN FRONT OF THIS FILE. 
(USE-PACKAGE OLIVETTI
  :INIT
  (ADD-HOOK 'PROG-MODE-HOOK 'OLIVETTI-MODE)
  (ADD-HOOK 'TEXT-MODE-HOOK 'OLIVETTI-MODE)
  (SETQ OLIVETTI-BODY-WIDTH 0.99)
  ;; (SETQ OLIVETTI-BODY-WIDTH 100)
  ;; (SETQ OLIVETTI-MINIMUM-BODY-WIDTH 80)
)



;; UNDO-TREE PACKAGE 2021-02-13
;; ------------------------------
;; PREVENT ACCIDENTS :: REDO(C-?)
;; ------------------------------
(GLOBAL-UNDO-TREE-MODE)                                      
(SETQ UNDO-TREE-VISUALIZER-TIMESTAMPS T)
(SETQ UNDO-TREE-VISUALIZER-DIFF T)
(SETQ UNDO-TREE-AUTO-SAVE-HISTORY T)


;; ORG-DOWNLODA 2021-03-01
(REQUIRE 'ORG-DOWNLOAD)
;; DRAG-AND-DROP TO `DIRED`
(ADD-HOOK 'DIRED-MODE-HOOK 'ORG-DOWNLOAD-ENABLE)
;; " 0 11 (fontified t face font-lock-builtin-face) 11 14 (fontified t) 14 15 (fontified t) 15 19 (fontified t) 19 65 (fontified t) 65 76 (fontified t face font-lock-builtin-face) 76 80 (fontified t) 80 83 (fontified t face font-lock-comment-delimiter-face) 83 108 (fontified t face font-lock-comment-face) 108 166 (fontified t face font-lock-comment-face) 166 169 (fontified t face font-lock-comment-delimiter-face) 169 181 (fontified t face font-lock-comment-face) 181 281 (fontified t face font-lock-comment-face) 281 284 (fontified t face font-lock-comment-delimiter-face) 284 368 (fontified t face font-lock-comment-face) 368 409 (fontified t) 409 415 (fontified t) 415 449 (fontified t) 449 458 (fontified t) 458 464 (fontified t) 464 467 (fontified t) 467 469 (fontified t) 469 495 (fontified t) 495 500 (fontified t) 500 501 (fontified t) 501 505 (fontified t) 505 508 (fontified t face font-lock-comment-delimiter-face) 508 514 (fontified t face font-lock-comment-face) 514 525 (fontified t face font-lock-comment-face) 525 572 (fontified t) 572 578 (fontified t) 578 616 (fontified t) 616 627 (fontified t face font-lock-builtin-face) 627 628 (fontified t) 628 639 (fontified t face font-lock-string-face) 639 666 (fontified t) 666 690 (fontified t) 690 696 (fontified t) 696 755 (fontified t) 755 766 (fontified t face font-lock-builtin-face) 766 767 (fontified t) 767 773 (fontified t face font-lock-string-face) 773 777 (fontified t) 777 781 (fontified t) 781 783 (fontified t) 783 786 (fontified t face font-lock-comment-delimiter-face) 786 874 (fontified t face font-lock-comment-face) 874 923 (fontified t) 923 929 (fontified t) 929 964 (fontified t) 964 967 (fontified t) 967 978 (fontified t face font-lock-builtin-face) 978 979 (fontified t) 979 990 (fontified t face font-lock-string-face) 990 994 (fontified t) 994 1025 (fontified t) 1025 1040 (fontified t) 1040 1046 (fontified t) 1046 1069 (fontified t) 1069 1115 (fontified t) 1115 1121 (fontified t) 1121 1159 (fontified t) 1159 1170 (fontified t face font-lock-builtin-face) 1170 1200 (fontified t) 1200 1203 (fontified t face font-lock-comment-delimiter-face) 1203 1277 (fontified t face font-lock-comment-face) 1277 1335 (fontified t face font-lock-comment-face) 1335 1341 (fontified t) 1341 1344 (fontified t face font-lock-comment-delimiter-face) 1344 1439 (fontified t face font-lock-comment-face) 1439 1445 (fontified t) 1445 1448 (fontified t face font-lock-comment-delimiter-face) 1448 1494 (fontified t face font-lock-comment-face) 1494 1543 (fontified t face font-lock-comment-face) 1543 1550 (fontified t) 1550 1553 (fontified t face font-lock-comment-delimiter-face) 1553 1569 (fontified t face font-lock-comment-face) 1569 1638 (fontified t face font-lock-comment-face) 1638 1686 (fontified t) 1686 1692 (fontified t) 1692 1730 (fontified t) 1730 1741 (fontified t face font-lock-builtin-face) 1741 1742 (fontified t) 1742 1755 (fontified t face font-lock-string-face) 1755 1765 (fontified t) 1765 1768 (fontified t face font-lock-comment-delimiter-face) 1768 1858 (fontified t face font-lock-comment-face) 1858 1864 (fontified t) 1864 1867 (fontified t face font-lock-comment-delimiter-face) 1867 1951 (fontified t face font-lock-comment-face) 1951 1957 (fontified t) 1957 1960 (fontified t face font-lock-comment-delimiter-face) 1960 2043 (fontified t face font-lock-comment-face) 2043 2094 (fontified t face font-lock-comment-face) 2094 2100 (fontified t) 2100 2103 (fontified t face font-lock-comment-delimiter-face) 2103 2138 (fontified t face font-lock-comment-face) 2138 2198 (fontified t face font-lock-comment-face) 2198 2204 (fontified t) 2204 2207 (fontified t face font-lock-comment-delimiter-face) 2207 2313 (fontified t face font-lock-comment-face) 2313 2319 (fontified t) 2319 2322 (fontified t face font-lock-comment-delimiter-face) 2322 2417 (fontified t face font-lock-comment-face) 2417 2465 (fontified t) 2465 2471 (fontified t) 2471 2509 (fontified t) 2509 2520 (fontified t face font-lock-builtin-face) 2520 2521 (fontified t) 2521 2532 (fontified t face font-lock-string-face) 2532 2542 (fontified t) 2542 2545 (fontified t face font-lock-comment-delimiter-face) 2545 2594 (fontified t face font-lock-comment-face) 2594 2632 (fontified t face font-lock-comment-face) 2632 2638 (fontified t) 2638 2641 (fontified t face font-lock-comment-delimiter-face) 2641 2698 (fontified t face font-lock-comment-face) 2698 2736 (fontified t face font-lock-comment-face) 2736 2743 (fontified t) 2743 2746 (fontified t face font-lock-comment-delimiter-face) 2746 2837 (fontified t face font-lock-comment-face) 2837 2843 (fontified t) 2843 2846 (fontified t face font-lock-comment-delimiter-face) 2846 2931 (fontified t face font-lock-comment-face) 2931 2937 (fontified t) 2937 2940 (fontified t face font-lock-comment-delimiter-face) 2940 3036 (fontified t face font-lock-comment-face) 3036 3042 (fontified t) 3042 3045 (fontified t face font-lock-comment-delimiter-face) 3045 3132 (fontified t face font-lock-comment-face) 3132 3141 (fontified t face font-lock-comment-face) 11341 11352 (face font-lock-keyword-face) 11353 11361 (face font-lock-constant-face) 11364 11369 (face font-lock-builtin-face) 11461 11465 (face font-lock-keyword-face) 11494 11497 (face font-lock-comment-delimiter-face) 11497 11528 (face font-lock-comment-face) 11530 11533 (face font-lock-comment-delimiter-face) 11533 11571 (face font-lock-comment-face) 11576 11579 (face font-lock-comment-delimiter-face) 11579 11608 (face font-lock-comment-face) 11608 11611 (face font-lock-comment-delimiter-face) 11611 11642 (face font-lock-comment-face) 11642 11645 (face font-lock-comment-delimiter-face) 11645 11676 (face font-lock-comment-face) 11676 11679 (face font-lock-comment-delimiter-face) 11679 11710 (face font-lock-comment-face) 11773 11777 (face font-lock-keyword-face) 11814 11818 (face font-lock-keyword-face) 11849 11853 (face font-lock-keyword-face) 11887 11890 (face font-lock-comment-delimiter-face) 11890 11914 (face font-lock-comment-face) 11915 11922 (face font-lock-keyword-face) 11924 11936 (face font-lock-constant-face) 11938 11941 (face font-lock-comment-delimiter-face) 11941 11966 (face font-lock-comment-face) 12015 12018 (face font-lock-comment-delimiter-face)) . 9625)) ((9625 . 21643) (#(":BACKGROUND))
(SETQ ORIGINAL-FOREGROUND (FACE-ATTRIBUTE 'DEFAULT :FOREGROUND))

;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"GRAY\")))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
(ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))


(IF (DISPLAY-GRAPHIC-P)
    (PROGN
    ;; IF GRAPHIC (GUI)
      (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (FACE-REMAP-ADD-RELATIVE 'HL-LINE NIL :BACKGROUND \"GRAY\")))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-OPERATOR-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (HL-LINE-MODE 0)))
      (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :BACKGROUND \"LIGHTGRAY\")))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))

      ;; (ADD-HOOK 'EVIL-OPERATOR-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"GRAY\")))

      (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :BACKGROUND \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :WEIGHT 'NORMAL)))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))

      (ADD-HOOK 'EVIL-VISUAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      ;; (ADD-HOOK 'EVIL-VISUAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"DARKGRAY\")))
      ;; (ADD-HOOK 'EVIL-VISUAL-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))

      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))
      (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND ORIGINAL-BACKGROUND)))
      (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :FOREGROUND ORIGINAL-FOREGROUND)))
    )
    ;; ELSE (OPTIONAL - TERMINAL MODE)
    (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :UNDERLINE T :BACKGROUND ORIGINAL-BACKGROUND)))
    (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :UNDERLINE T :OVERLINE 'T :BACKGROUND \"BLACK\")))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 0)))
)


;; [FOR REFERENCE] GUI DETECTION ~ MORE READABLE :)
;;
;; (WHEN (DISPLAY-GRAPHIC-P)
;;     (YOUR)
;;     (CODE))
;;
;; HTTPS://STACKOVERFLOW.COM/QUESTIONS/5795451/HOW-TO-DETECT-THAT-EMACS-IS-IN-TERMINAL-MODE
;; 2021-02-10


;; (DEFUN HIGHLIGHT-SELECTED-WINDOW ()
;;   \"HIGHLIGHT SELECTED WINDOW WITH A DIFFERENT BACKGROUND COLOR.\"
;;   (WALK-WINDOWS (LAMBDA (W)
;;                   (UNLESS (EQ W (SELECTED-WINDOW))
;;                     (WITH-CURRENT-BUFFER (WINDOW-BUFFER W)
;;                       (BUFFER-FACE-SET '(:BACKGROUND \"WHITE\"))))))
;;   (BUFFER-FACE-SET 'DEFAULT))
;; (ADD-HOOK 'BUFFER-LIST-UPDATE-HOOK 'HIGHLIGHT-SELECTED-WINDOW)


;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/34251/CHANGE-MODELINE-BACKGROUND-WHEN-IN-NORMAL-EVIL-MODE
;;
;; (SETQ ORIGINAL-MODELINE-BACKGROUND (FACE-ATTRIBUTE 'MODE-LINE :BACKGROUND))
;; (SETQ NORMAL-STATE-BACKGROUND \"RED\")
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FACE-ATTRIBUTE 'MODE-LINE NIL :BACKGROUND NORMAL-STATE-BACKGROUND)))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK  (LAMBDA () (SET-FACE-ATTRIBUTE 'MODE-LINE NIL :BACKGROUND ORIGINAL-MODELINE-BACKGROUND)))


;; EVIL CURSOR IN MODES 2021-02-06
;; HTTPS://GITHUB.COM/HLISSNER/DOOM-EMACS/ISSUES/1848
;; HTTP://FNWIYA.HATENABLOG.COM/ENTRY/2016/01/12/213149 
;; (SETQ EVIL-NORMAL-STATE-CURSOR '(BOX \"BLACK\")
;;       EVIL-INSERT-STATE-CURSOR '(BAR \"BLACK\")
;;       EVIL-VISUAL-STATE-CURSOR '(HOLLOW \"BLACK\")
;;       EVIL-EMACS-STATE-CURSOR '(BOX \"BLACK\"))

;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/30582/HOW-DO-I-CHANGE-THE-MODE-INDICATORS-FOR-EVIL-MODE-IN-THE-SPACELINE-MODE-LINE-PAC
(SETQ EVIL-NORMAL-STATE-TAG \"NORMAL\")
(SETQ EVIL-INSERT-STATE-TAG \"INSERT\")
(SETQ EVIL-VISUAL-STATE-TAG \"VISUAL\")
(SETQ EVIL-REPLACE-STATE-TAG \"REPLACE\")

;; COLOR THE EVIL TAG - COLORS TAKEN FROM SPACELINE
;; HTTPS://GITHUB.COM/MALABARBA/SMART-MODE-LINE/ISSUES/195
(SETQ EVIL-NORMAL-STATE-TAG   (PROPERTIZE \" NORMAL \" 'FACE '((:BACKGROUND \"BLACK\"          :FOREGROUND \"WHITE\")))
      EVIL-EMACS-STATE-TAG    (PROPERTIZE \" <E> \" 'FACE '((:BACKGROUND ORIGINAL-BACKGROUND :FOREGROUND FOREGROUND-COLOR)))
      EVIL-INSERT-STATE-TAG   (PROPERTIZE \" INSERT \" 'FACE '((:BACKGROUND \"LIGHTYELLOW\"    :FOREGROUND \"BLACK\")))
      EVIL-REPLACE-STATE-TAG  (PROPERTIZE \" REPLACE \" 'FACE '((:BACKGROUND \"CHOCOLATE\"     :FOREGROUND \"BLACK\")))
      EVIL-MOTION-STATE-TAG   (PROPERTIZE \" <MOTION> \" 'FACE '((:BACKGROUND \"PLUM3\"             :FOREGROUND \"BLACK\")))
      EVIL-VISUAL-STATE-TAG   (PROPERTIZE \" VISUAL \" 'FACE '((:BACKGROUND \"DARKGRAY\"       :FOREGROUND \"BLACK\")))
      EVIL-OPERATOR-STATE-TAG (PROPERTIZE \" <OPERATOR> \" 'FACE '((:BACKGROUND \"SANDY BROWN\"       :FOREGROUND \"BLACK\"))))

;; EVIL KEY BINDING
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"SPC\") 'EVIL-EX)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"J\") 'EVIL-NEXT-VISUAL-LINE)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"K\") 'EVIL-PREVIOUS-VISUAL-LINE)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"C-U\") 'EVIL-SCROLL-UP)
(DEFINE-KEY EVIL-VISUAL-STATE-MAP (KBD \"C-U\") 'EVIL-SCROLL-UP)

;; FORWARD-SENTENCE IS BASED ON THE SENTENCE-END VARIABLE
;; HTTPS://STACKOVERFLOW.COM/QUESTIONS/20257022/EVIL-EMACS-MODE-SENTENCE-MOTIONS-AND-OTHER-QUESTIONS
(SETQ SENTENCE-END \"[\\\\.\\\\?\\\\!] +\") ;; . OR ? OR ! FOLLOWED BY SPACES.
(DEFINE-KEY EVIL-NORMAL-STATE-MAP \")\" 'FORWARD-SENTENCE)


;; EVIL UNDO 2021-02-06
;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/3358/HOW-CAN-I-GET-UNDO-BEHAVIOR-IN-EVIL-SIMILAR-TO-VIMS
(SETQ EVIL-WANT-FINE-UNDO 'T)
(SETQ EVIL-WANT-FINE-UNDO 'FINE)
;; (SETQ EVIL-UNDO-SYSTEM 'UNDO-TREE) ;; NOT WORKING TESTED 2021-02-07

;; EVIL-SURROUND PACKAGE 2021-01-29
(GLOBAL-EVIL-SURROUND-MODE 1)

;; EVIL-SURROUND ADD PAIRS 2021-02-08
;; HTTPS://GITHUB.COM/EMACS-EVIL/EVIL-SURROUND
;; THIS MACRO WAS COPIED FROM HERE: HTTPS://STACKOVERFLOW.COM/A/22418983/4921402
(DEFMACRO DEFINE-AND-BIND-QUOTED-TEXT-OBJECT (NAME KEY START-REGEX END-REGEX)
  (LET ((INNER-NAME (MAKE-SYMBOL (CONCAT \"EVIL-INNER-\" NAME)))
        (OUTER-NAME (MAKE-SYMBOL (CONCAT \"EVIL-A-\" NAME))))
    `(PROGN
       (EVIL-DEFINE-TEXT-OBJECT ,INNER-NAME (COUNT &OPTIONAL BEG END TYPE)
         (EVIL-SELECT-PAREN ,START-REGEX ,END-REGEX BEG END TYPE COUNT NIL))
       (EVIL-DEFINE-TEXT-OBJECT ,OUTER-NAME (COUNT &OPTIONAL BEG END TYPE)
         (EVIL-SELECT-PAREN ,START-REGEX ,END-REGEX BEG END TYPE COUNT T))
       (DEFINE-KEY EVIL-INNER-TEXT-OBJECTS-MAP ,KEY #',INNER-NAME)
       (DEFINE-KEY EVIL-OUTER-TEXT-OBJECTS-MAP ,KEY #',OUTER-NAME))))

(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"PIPE\" \"|\" \"|\" \"|\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"SLASH\" \"/\" \"/\" \"/\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"UNDERSCORE\" \"_\" \"_\" \"_\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"CODE\" \"~\" \"~\" \"~\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"VERBATIM\" \"=\" \"=\" \"=\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"STRIKE_THROUGH\" \"+\" \"+\" \"+\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"ASTERISK\" \"*\" \"*\" \"*\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"DOLLAR\" \"$\" \"\\\\$\" \"\\\\$\") ;; SOMETIMES YOUR HAVE TO ESCAPE THE REGEX



;;----------------------------------------------------------------
;; ACE JUMP MODE
;;----------------------------------------------------------------
;; ACE JUMP MODE MAJOR FUNCTION
;; 
;; (ADD-TO-LIST 'LOAD-PATH \"/USERS/OSICKWON/.EMACS.D/ACE-JUMP-MODE/\")
;; (AUTOLOAD
;;   'ACE-JUMP-MODE
;;   \"ACE-JUMP-MODE\"
;;   \"EMACS QUICK MOVE MINOR MODE\"
;;   T)

;; YOU CAN SELECT THE KEY YOU PREFER TO
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C SPC\") 'ACE-JUMP-MODE)
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C SPC\") 'ACE-JUMP-CHAR-MODE)
;;
;; CONFLICT ORG-MODE: C-C SPC => ORG-TABLE-BLANK-FIELD

;; `C-U C-C SPC` WAS NOT WORKED PROPERLY, SO USED `C-C C-C` 2021-01-17
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C C-C SPC\") 'ACE-JUMP-CHAR-MODE)


;; WHEN ORG-MODE STARTS IT (ORG-MODE-MAP) OVERRIDES THE ACE-JUMP-MODE.
;; (HTTPS://GITHUB.COM/WINTERTTR/ACE-JUMP-MODE/ISSUES/47)
;; (ADD-HOOK 'ORG-MODE-HOOK
;;           (LAMBDA ()
;;             ;; (LOCAL-SET-KEY (KBD \"\\C-C SPC\") 'ACE-JUMP-MODE)))
;;             (LOCAL-SET-KEY (KBD \"\\C-C SPC\") 'ACE-JUMP-CHAR-MODE)))
 
;; 
;; ENABLE A MORE POWERFUL JUMP BACK FUNCTION FROM ACE JUMP MODE
;;
;; (AUTOLOAD
;;   'ACE-JUMP-MODE-POP-MARK
;;   \"ACE-JUMP-MODE\"
;;   \"ACE JUMP BACK:-)\"
;;   T)
;; (EVAL-AFTER-LOAD \"ACE-JUMP-MODE\"
;;   '(ACE-JUMP-MODE-ENABLE-MARK-SYNC))
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-X SPC\") 'ACE-JUMP-MODE-POP-MARK)

;;IF YOU USE VIPER MODE :
;(DEFINE-KEY VIPER-VI-GLOBAL-USER-MAP (KBD \"SPC\") 'ACE-JUMP-MODE)
;;IF YOU USE EVIL
;(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"SPC\") 'ACE-JUMP-MODE)
;; ----------------------------------------------------------------

;; PROJECTILE PACKAGE 2021-01-29
;; -----------------------------
(PROJECTILE-MODE +1)
(DEFINE-KEY PROJECTILE-MODE-MAP (KBD \"S-P\") 'PROJECTILE-COMMAND-MAP)
(DEFINE-KEY PROJECTILE-MODE-MAP (KBD \"C-C P\") 'PROJECTILE-COMMAND-MAP)

;; USE 'HELM-PROJECTILE-AG' INSETED OF C-C P S S, WHICH STANDS FOR AG SERCHING IN PROJECTILE
;; ONCE INSTALL PACKAGE OF 'HELM-PROJECTILE', YOU CAN ALSO USE 'HELM-PROJECTILE-AG'
;; OR INSTALL 'HELM-AG' PACKAGE TO USE SAME FUNCTION
;; HOWEVER, REQUIRED INTALL '(SUDO) PORT INSTALL THE_SILVER_SEARCHER' FIRST (THE_SILVER_SEARCHER = AG)


;; OLIVETTI 2021-02-11
;; -------------------
;; TO REMOVE BOUNDRY -> '(FRINGE-MODE 0 NIL (FRINGE)) IN `(CUSTOM-SET-VARIABLES` LINES IN FRONT OF THIS FILE. 
(USE-PACKAGE OLIVETTI
  :INIT
  (ADD-HOOK 'PROG-MODE-HOOK 'OLIVETTI-MODE)
  (ADD-HOOK 'TEXT-MODE-HOOK 'OLIVETTI-MODE)
  (SETQ OLIVETTI-BODY-WIDTH 0.99)
  ;; (SETQ OLIVETTI-BODY-WIDTH 100)
  ;; (SETQ OLIVETTI-MINIMUM-BODY-WIDTH 80)
)



;; UNDO-TREE PACKAGE 2021-02-13
;; ------------------------------
;; PREVENT ACCIDENTS :: REDO(C-?)
;; ------------------------------
(GLOBAL-UNDO-TREE-MODE)                                      
(SETQ UNDO-TREE-VISUALIZER-TIMESTAMPS T)
(SETQ UNDO-TREE-VISUALIZER-DIFF T)
(SETQ UNDO-TREE-AUTO-SAVE-HISTORY T)


;; ORG-DOWNLODA 2021-03-01
(REQUIRE 'ORG-DOWNLOAD)
;; DRAG-AND-DROP TO `DIRED`
(ADD-HOOK 'DIRED-MODE-HOOK 'ORG-DOWNLOAD-ENABLE)
;; " 0 11 (fontified t face font-lock-builtin-face) 11 14 (fontified t) 14 15 (fontified t) 15 19 (fontified t) 19 65 (fontified t) 65 76 (fontified t face font-lock-builtin-face) 76 80 (fontified t) 80 83 (fontified t face font-lock-comment-delimiter-face) 83 108 (fontified t face font-lock-comment-face) 108 166 (fontified t face font-lock-comment-face) 166 169 (fontified t face font-lock-comment-delimiter-face) 169 181 (fontified t face font-lock-comment-face) 181 281 (fontified t face font-lock-comment-face) 281 284 (fontified t face font-lock-comment-delimiter-face) 284 368 (fontified t face font-lock-comment-face) 368 409 (fontified t) 409 415 (fontified t) 415 449 (fontified t) 449 458 (fontified t) 458 464 (fontified t) 464 467 (fontified t) 467 469 (fontified t) 469 495 (fontified t) 495 500 (fontified t) 500 501 (fontified t) 501 505 (fontified t) 505 508 (fontified t face font-lock-comment-delimiter-face) 508 514 (fontified t face font-lock-comment-face) 514 525 (fontified t face font-lock-comment-face) 525 572 (fontified t) 572 578 (fontified t) 578 616 (fontified t) 616 627 (fontified t face font-lock-builtin-face) 627 628 (fontified t) 628 639 (fontified t face font-lock-string-face) 639 666 (fontified t) 666 690 (fontified t) 690 696 (fontified t) 696 755 (fontified t) 755 766 (fontified t face font-lock-builtin-face) 766 767 (fontified t) 767 773 (fontified t face font-lock-string-face) 773 777 (fontified t) 777 781 (fontified t) 781 783 (fontified t) 783 786 (fontified t face font-lock-comment-delimiter-face) 786 874 (fontified t face font-lock-comment-face) 874 923 (fontified t) 923 929 (fontified t) 929 964 (fontified t) 964 967 (fontified t) 967 978 (fontified t face font-lock-builtin-face) 978 979 (fontified t) 979 990 (fontified t face font-lock-string-face) 990 994 (fontified t) 994 1025 (fontified t) 1025 1040 (fontified t) 1040 1046 (fontified t) 1046 1069 (fontified t) 1069 1115 (fontified t) 1115 1121 (fontified t) 1121 1159 (fontified t) 1159 1170 (fontified t face font-lock-builtin-face) 1170 1200 (fontified t) 1200 1203 (fontified t face font-lock-comment-delimiter-face) 1203 1277 (fontified t face font-lock-comment-face) 1277 1335 (fontified t face font-lock-comment-face) 1335 1341 (fontified t) 1341 1344 (fontified t face font-lock-comment-delimiter-face) 1344 1439 (fontified t face font-lock-comment-face) 1439 1445 (fontified t) 1445 1448 (fontified t face font-lock-comment-delimiter-face) 1448 1494 (fontified t face font-lock-comment-face) 1494 1543 (fontified t face font-lock-comment-face) 1543 1550 (fontified t) 1550 1553 (fontified t face font-lock-comment-delimiter-face) 1553 1569 (fontified t face font-lock-comment-face) 1569 1638 (fontified t face font-lock-comment-face) 1638 1686 (fontified t) 1686 1692 (fontified t) 1692 1730 (fontified t) 1730 1741 (fontified t face font-lock-builtin-face) 1741 1742 (fontified t) 1742 1755 (fontified t face font-lock-string-face) 1755 1765 (fontified t) 1765 1768 (fontified t face font-lock-comment-delimiter-face) 1768 1858 (fontified t face font-lock-comment-face) 1858 1864 (fontified t) 1864 1867 (fontified t face font-lock-comment-delimiter-face) 1867 1951 (fontified t face font-lock-comment-face) 1951 1957 (fontified t) 1957 1960 (fontified t face font-lock-comment-delimiter-face) 1960 2043 (fontified t face font-lock-comment-face) 2043 2094 (fontified t face font-lock-comment-face) 2094 2100 (fontified t) 2100 2103 (fontified t face font-lock-comment-delimiter-face) 2103 2138 (fontified t face font-lock-comment-face) 2138 2198 (fontified t face font-lock-comment-face) 2198 2204 (fontified t) 2204 2207 (fontified t face font-lock-comment-delimiter-face) 2207 2313 (fontified t face font-lock-comment-face) 2313 2319 (fontified t) 2319 2322 (fontified t face font-lock-comment-delimiter-face) 2322 2417 (fontified t face font-lock-comment-face) 2417 2465 (fontified t) 2465 2471 (fontified t) 2471 2509 (fontified t) 2509 2520 (fontified t face font-lock-builtin-face) 2520 2521 (fontified t) 2521 2532 (fontified t face font-lock-string-face) 2532 2542 (fontified t) 2542 2545 (fontified t face font-lock-comment-delimiter-face) 2545 2594 (fontified t face font-lock-comment-face) 2594 2632 (fontified t face font-lock-comment-face) 2632 2638 (fontified t) 2638 2641 (fontified t face font-lock-comment-delimiter-face) 2641 2698 (fontified t face font-lock-comment-face) 2698 2736 (fontified t face font-lock-comment-face) 2736 2743 (fontified t) 2743 2746 (fontified t face font-lock-comment-delimiter-face) 2746 2837 (fontified t face font-lock-comment-face) 2837 2843 (fontified t) 2843 2846 (fontified t face font-lock-comment-delimiter-face) 2846 2931 (fontified t face font-lock-comment-face) 2931 2937 (fontified t) 2937 2940 (fontified t face font-lock-comment-delimiter-face) 2940 3036 (fontified t face font-lock-comment-face) 3036 3042 (fontified t) 3042 3045 (fontified t face font-lock-comment-delimiter-face) 3045 3132 (fontified t face font-lock-comment-face) 3132 3141 (fontified t face font-lock-comment-face) 11341 11352 (face font-lock-keyword-face) 11353 11361 (face font-lock-constant-face) 11364 11369 (face font-lock-builtin-face) 11461 11465 (face font-lock-keyword-face) 11494 11497 (face font-lock-comment-delimiter-face) 11497 11528 (face font-lock-comment-face) 11530 11533 (face font-lock-comment-delimiter-face) 11533 11571 (face font-lock-comment-face) 11576 11579 (face font-lock-comment-delimiter-face) 11579 11608 (face font-lock-comment-face) 11608 11611 (face font-lock-comment-delimiter-face) 11611 11642 (face font-lock-comment-face) 11642 11645 (face font-lock-comment-delimiter-face) 11645 11676 (face font-lock-comment-face) 11676 11679 (face font-lock-comment-delimiter-face) 11679 11710 (face font-lock-comment-face) 11773 11777 (face font-lock-keyword-face) 11814 11818 (face font-lock-keyword-face) 11849 11853 (face font-lock-keyword-face) 11887 11890 (face font-lock-comment-delimiter-face) 11890 11914 (face font-lock-comment-face) 11915 11922 (face font-lock-keyword-face) 11924 11936 (face font-lock-constant-face) 11938 11941 (face font-lock-comment-delimiter-face) 11941 11966 (face font-lock-comment-face) 12015 12018 (face font-lock-comment-delimiter-face)) . 9625) (undo-tree-id32 . -12018) (undo-tree-id33 . -12015) (undo-tree-id34 . -12018) (undo-tree-id35 . -12018) (undo-tree-id36 . -11340) (undo-tree-id37 . -12018) (undo-tree-id38 . -12018) (undo-tree-id39 . -6021) (undo-tree-id40 . -6021) (undo-tree-id41 . -11573) (undo-tree-id42 . -11573) (undo-tree-id43 . -11571) (undo-tree-id44 . -11571) (undo-tree-id45 . -11528) (undo-tree-id46 . -11528) (undo-tree-id47 . -11492) (undo-tree-id48 . -11492) (undo-tree-id49 . -11458) (undo-tree-id50 . -11458) (undo-tree-id51 . -11414) (undo-tree-id52 . -11414) (undo-tree-id53 . -11370) (undo-tree-id54 . -11370) (undo-tree-id55 . -11362) (undo-tree-id56 . -11362) (undo-tree-id57 . -11340) (undo-tree-id58 . -11340) (undo-tree-id59 . -12015) (undo-tree-id60 . -12015) (undo-tree-id61 . -11966) (undo-tree-id62 . -11966) (undo-tree-id63 . -11938) (undo-tree-id64 . -11938) (undo-tree-id65 . -11914) (undo-tree-id66 . -11914) (undo-tree-id67 . -11887) (undo-tree-id68 . -11887)) (24638 59014 383827 0) 0 nil]) ((9625 . 21643) (#(":background))
(setq original-foreground (face-attribute 'default :foreground))

;; (add-hook 'evil-normal-state-entry-hook (lambda () (set-background-color \"gray\")))
;; (add-hook 'evil-normal-state-entry-hook (lambda () (face-remap-add-relative 'default :background \"lightgray\")))
;; (add-hook 'evil-normal-state-entry-hook (lambda () (set-foreground-color \"black\")))
(add-hook 'evil-normal-state-entry-hook (lambda () (set-foreground-color original-foreground)))


(if (display-graphic-p)
    (progn
    ;; if graphic (GUI)
      (add-hook 'evil-normal-state-entry-hook (lambda () (face-remap-add-relative 'default :background \"lightgray\")))
      (add-hook 'evil-normal-state-entry-hook (lambda () (hl-line-mode 1) (face-remap-add-relative 'hl-line nil :background \"gray\")))
      ;; (add-hook 'evil-normal-state-entry-hook (lambda () (set-background-color \"lightgray\")))
      (add-hook 'evil-operator-state-entry-hook (lambda () (face-remap-add-relative 'default :background \"lightgray\")))
      (add-hook 'evil-normal-state-exit-hook (lambda () (hl-line-mode 0)))
      (add-hook 'evil-normal-state-exit-hook (lambda () (face-remap-add-relative 'default :background original-background)))
      ;; (add-hook 'evil-normal-state-entry-hook (lambda () (hl-line-mode 1) (set-face-attribute hl-line-face nil :background \"lightgray\")))
      ;; (add-hook 'evil-normal-state-exit-hook (lambda () (set-background-color original-background)))
      ;; (add-hook 'evil-normal-state-exit-hook (lambda () (set-foreground-color original-foreground)))

      ;; (add-hook 'evil-operator-state-entry-hook (lambda () (set-background-color \"gray\")))

      (add-hook 'evil-insert-state-entry-hook (lambda () (face-remap-add-relative 'default :background \"lightyellow\")))
      ;; (add-hook 'evil-insert-state-entry-hook (lambda () (set-background-color \"lightyellow\")))
      ;; (add-hook 'evil-insert-state-entry-hook (lambda () (set-foreground-color \"black\")))
      ;; (add-hook 'evil-insert-state-entry-hook (lambda () (hl-line-mode 1) (set-face-attribute hl-line-face nil :background \"lightyellow\")))
      ;; (add-hook 'evil-insert-state-exit-hook (lambda () (set-background-color original-background)))
      ;; (add-hook 'evil-insert-state-exit-hook (lambda () (set-face-attribute hl-line-face nil :weight 'normal)))
      ;; (add-hook 'evil-insert-state-exit-hook (lambda () (set-foreground-color original-foreground)))

      (add-hook 'evil-visual-state-entry-hook (lambda () (face-remap-add-relative 'default :background \"lightgray\")))
      ;; (add-hook 'evil-visual-state-entry-hook (lambda () (set-background-color \"darkgray\")))
      ;; (add-hook 'evil-visual-state-exit-hook (lambda () (set-background-color original-background)))

      ;; (add-hook 'evil-replace-state-entry-hook (lambda () (set-background-color \"lightyellow\")))
      ;; (add-hook 'evil-replace-state-entry-hook (lambda () (set-foreground-color \"black\")))
      ;; (add-hook 'evil-replace-state-exit-hook (lambda () (set-background-color original-background)))
      ;; (add-hook 'evil-replace-state-exit-hook (lambda () (set-foreground-color original-foreground)))
      (add-hook 'evil-emacs-state-entry-hook (lambda () (face-remap-add-relative 'default :background original-background)))
      (add-hook 'evil-emacs-state-entry-hook (lambda () (face-remap-add-relative 'default :foreground original-foreground)))
    )
    ;; else (optional - terminal mode)
    (add-hook 'evil-normal-state-entry-hook (lambda () (hl-line-mode 1) (set-face-attribute hl-line-face nil :underline t :background original-background)))
    (add-hook 'evil-insert-state-entry-hook (lambda () (hl-line-mode 1) (set-face-attribute hl-line-face nil :underline t :overline 't :background \"black\")))
    (add-hook 'evil-emacs-state-entry-hook (lambda () (set-background-color original-background)))
    (add-hook 'evil-emacs-state-entry-hook (lambda () (set-foreground-color original-foreground)))
    (add-hook 'evil-emacs-state-entry-hook (lambda () (hl-line-mode 0)))
)


;; [For Reference] GUI detection ~ more readable :)
;;
;; (when (display-graphic-p)
;;     (your)
;;     (code))
;;
;; https://stackoverflow.com/questions/5795451/how-to-detect-that-emacs-is-in-terminal-mode
;; 2021-02-10


;; (defun highlight-selected-window ()
;;   \"Highlight selected window with a different background color.\"
;;   (walk-windows (lambda (w)
;;                   (unless (eq w (selected-window))
;;                     (with-current-buffer (window-buffer w)
;;                       (buffer-face-set '(:background \"white\"))))))
;;   (buffer-face-set 'default))
;; (add-hook 'buffer-list-update-hook 'highlight-selected-window)


;; https://emacs.stackexchange.com/questions/34251/change-modeline-background-when-in-normal-evil-mode
;;
;; (setq original-modeline-background (face-attribute 'mode-line :background))
;; (setq normal-state-background \"red\")
;; (add-hook 'evil-normal-state-entry-hook (lambda () (set-face-attribute 'mode-line nil :background normal-state-background)))
;; (add-hook 'evil-normal-state-exit-hook  (lambda () (set-face-attribute 'mode-line nil :background original-modeline-background)))


;; evil cursor in modes 2021-02-06
;; https://github.com/hlissner/doom-emacs/issues/1848
;; http://fnwiya.hatenablog.com/entry/2016/01/12/213149 
;; (setq evil-normal-state-cursor '(box \"black\")
;;       evil-insert-state-cursor '(bar \"black\")
;;       evil-visual-state-cursor '(hollow \"black\")
;;       evil-emacs-state-cursor '(box \"black\"))

;; https://emacs.stackexchange.com/questions/30582/how-do-i-change-the-mode-indicators-for-evil-mode-in-the-spaceline-mode-line-pac
(setq evil-normal-state-tag \"NORMAL\")
(setq evil-insert-state-tag \"INSERT\")
(setq evil-visual-state-tag \"VISUAL\")
(setq evil-replace-state-tag \"REPLACE\")

;; Color the evil tag - colors taken from spaceline
;; https://github.com/Malabarba/smart-mode-line/issues/195
(setq evil-normal-state-tag   (propertize \" NORMAL \" 'face '((:background \"black\"          :foreground \"white\")))
      evil-emacs-state-tag    (propertize \" <E> \" 'face '((:background original-background :foreground foreground-color)))
      evil-insert-state-tag   (propertize \" INSERT \" 'face '((:background \"lightyellow\"    :foreground \"black\")))
      evil-replace-state-tag  (propertize \" REPLACE \" 'face '((:background \"chocolate\"     :foreground \"black\")))
      evil-motion-state-tag   (propertize \" <Motion> \" 'face '((:background \"plum3\"             :foreground \"black\")))
      evil-visual-state-tag   (propertize \" VISUAL \" 'face '((:background \"darkgray\"       :foreground \"black\")))
      evil-operator-state-tag (propertize \" <Operator> \" 'face '((:background \"sandy brown\"       :foreground \"black\"))))

;; evil key binding
(define-key evil-normal-state-map (kbd \"SPC\") 'evil-ex)
(define-key evil-normal-state-map (kbd \"j\") 'evil-next-visual-line)
(define-key evil-normal-state-map (kbd \"k\") 'evil-previous-visual-line)
(define-key evil-normal-state-map (kbd \"C-u\") 'evil-scroll-up)
(define-key evil-visual-state-map (kbd \"C-u\") 'evil-scroll-up)

;; forward-sentence is based on the sentence-end variable
;; https://stackoverflow.com/questions/20257022/evil-emacs-mode-sentence-motions-and-other-questions
(setq sentence-end \"[\\\\.\\\\?\\\\!] +\") ;; . or ? or ! followed by spaces.
(define-key evil-normal-state-map \")\" 'forward-sentence)


;; evil undo 2021-02-06
;; https://emacs.stackexchange.com/questions/3358/how-can-i-get-undo-behavior-in-evil-similar-to-vims
(setq evil-want-fine-undo 't)
(setq evil-want-fine-undo 'fine)
;; (setq evil-undo-system 'undo-tree) ;; not working tested 2021-02-07

;; evil-surround package 2021-01-29
(global-evil-surround-mode 1)

;; evil-surround add pairs 2021-02-08
;; https://github.com/emacs-evil/evil-surround
;; this macro was copied from here: https://stackoverflow.com/a/22418983/4921402
(defmacro define-and-bind-quoted-text-object (name key start-regex end-regex)
  (let ((inner-name (make-symbol (concat \"evil-inner-\" name)))
        (outer-name (make-symbol (concat \"evil-a-\" name))))
    `(progn
       (evil-define-text-object ,inner-name (count &optional beg end type)
         (evil-select-paren ,start-regex ,end-regex beg end type count nil))
       (evil-define-text-object ,outer-name (count &optional beg end type)
         (evil-select-paren ,start-regex ,end-regex beg end type count t))
       (define-key evil-inner-text-objects-map ,key #',inner-name)
       (define-key evil-outer-text-objects-map ,key #',outer-name))))

(define-and-bind-quoted-text-object \"pipe\" \"|\" \"|\" \"|\")
(define-and-bind-quoted-text-object \"slash\" \"/\" \"/\" \"/\")
(define-and-bind-quoted-text-object \"underscore\" \"_\" \"_\" \"_\")
(define-and-bind-quoted-text-object \"code\" \"~\" \"~\" \"~\")
(define-and-bind-quoted-text-object \"verbatim\" \"=\" \"=\" \"=\")
(define-and-bind-quoted-text-object \"strike_through\" \"+\" \"+\" \"+\")
(define-and-bind-quoted-text-object \"asterisk\" \"*\" \"*\" \"*\")
(define-and-bind-quoted-text-object \"dollar\" \"$\" \"\\\\$\" \"\\\\$\") ;; sometimes your have to escape the regex



;;----------------------------------------------------------------
;; ACE JUMP MODE
;;----------------------------------------------------------------
;; ace jump mode major function
;; 
;; (add-to-list 'load-path \"/Users/osickwon/.emacs.d/ace-jump-mode/\")
;; (autoload
;;   'ace-jump-mode
;;   \"ace-jump-mode\"
;;   \"Emacs quick move minor mode\"
;;   t)

;; you can select the key you prefer to
;; (define-key global-map (kbd \"C-c SPC\") 'ace-jump-mode)
;; (define-key global-map (kbd \"C-c SPC\") 'ace-jump-char-mode)
;;
;; conflict org-mode: C-c SPC => org-table-blank-field

;; `C-u C-c SPC` was not worked properly, so Used `C-c C-c` 2021-01-17
;; (define-key global-map (kbd \"C-c C-c SPC\") 'ace-jump-char-mode)


;; When org-mode starts it (org-mode-map) overrides the ace-jump-mode.
;; (https://github.com/winterTTr/ace-jump-mode/issues/47)
;; (add-hook 'org-mode-hook
;;           (lambda ()
;;             ;; (local-set-key (kbd \"\\C-c SPC\") 'ace-jump-mode)))
;;             (local-set-key (kbd \"\\C-c SPC\") 'ace-jump-char-mode)))
 
;; 
;; enable a more powerful jump back function from ace jump mode
;;
;; (autoload
;;   'ace-jump-mode-pop-mark
;;   \"ace-jump-mode\"
;;   \"Ace jump back:-)\"
;;   t)
;; (eval-after-load \"ace-jump-mode\"
;;   '(ace-jump-mode-enable-mark-sync))
;; (define-key global-map (kbd \"C-x SPC\") 'ace-jump-mode-pop-mark)

;;If you use viper mode :
;(define-key viper-vi-global-user-map (kbd \"SPC\") 'ace-jump-mode)
;;If you use evil
;(define-key evil-normal-state-map (kbd \"SPC\") 'ace-jump-mode)
;; ----------------------------------------------------------------

;; projectile package 2021-01-29
;; -----------------------------
(projectile-mode +1)
(define-key projectile-mode-map (kbd \"s-p\") 'projectile-command-map)
(define-key projectile-mode-map (kbd \"C-c p\") 'projectile-command-map)

;; use 'helm-projectile-ag' inseted of C-c p s s, which stands for ag serching in projectile
;; once install package of 'helm-projectile', you can also use 'helm-projectile-ag'
;; or install 'helm-ag' package to use same function
;; however, required intall '(sudo) port install the_silver_searcher' first (the_silver_searcher = ag)


;; Olivetti 2021-02-11
;; -------------------
;; to remove boundry -> '(fringe-mode 0 nil (fringe)) in `(custom-set-variables` lines in front of this file. 
(use-package olivetti
  :init
  (add-hook 'prog-mode-hook 'olivetti-mode)
  (add-hook 'text-mode-hook 'olivetti-mode)
  (setq olivetti-body-width 0.99)
  ;; (setq olivetti-body-width 100)
  ;; (setq olivetti-minimum-body-width 80)
)



;; Undo-Tree Package 2021-02-13
;; ------------------------------
;; prevent accidents :: Redo(C-?)
;; ------------------------------
(global-undo-tree-mode)                                      
(setq undo-tree-visualizer-timestamps t)
(setq undo-tree-visualizer-diff t)
(setq undo-tree-auto-save-history t)


;; org-downloda 2021-03-01
(require 'org-download)
;; Drag-and-drop to `dired`
(add-hook 'dired-mode-hook 'org-download-enable)
;; " 0 11 (fontified t face font-lock-builtin-face) 11 14 (fontified t) 14 15 (fontified t) 15 19 (fontified t face font-lock-keyword-face) 19 65 (fontified t) 65 76 (fontified t face font-lock-builtin-face) 76 80 (fontified t) 80 83 (fontified t face font-lock-comment-delimiter-face) 83 108 (fontified t face font-lock-comment-face) 108 166 (fontified t face font-lock-comment-face) 166 169 (fontified t face font-lock-comment-delimiter-face) 169 181 (fontified t face font-lock-comment-face) 181 281 (fontified t face font-lock-comment-face) 281 284 (fontified t face font-lock-comment-delimiter-face) 284 368 (fontified t face font-lock-comment-face) 368 409 (fontified t) 409 415 (fontified t face font-lock-keyword-face) 415 449 (fontified t) 449 458 (fontified t) 458 464 (fontified t) 464 467 (fontified t) 467 469 (fontified t face font-lock-keyword-face) 469 495 (fontified t) 495 500 (fontified t face font-lock-keyword-face) 500 501 (fontified t) 501 505 (fontified t) 505 508 (fontified t face font-lock-comment-delimiter-face) 508 514 (fontified t face font-lock-comment-face) 514 525 (fontified t face font-lock-comment-face) 525 572 (fontified t) 572 578 (fontified t face font-lock-keyword-face) 578 616 (fontified t) 616 627 (fontified t face font-lock-builtin-face) 627 628 (fontified t) 628 639 (fontified t face font-lock-string-face) 639 666 (fontified t) 666 690 (fontified t) 690 696 (fontified t face font-lock-keyword-face) 696 755 (fontified t) 755 766 (fontified t face font-lock-builtin-face) 766 767 (fontified t) 767 773 (fontified t face font-lock-string-face) 773 777 (fontified t) 777 781 (fontified t) 781 783 (fontified t) 783 786 (fontified t face font-lock-comment-delimiter-face) 786 874 (fontified t face font-lock-comment-face) 874 923 (fontified t) 923 929 (fontified t face font-lock-keyword-face) 929 964 (fontified t) 964 967 (fontified t) 967 978 (fontified t face font-lock-builtin-face) 978 979 (fontified t) 979 990 (fontified t face font-lock-string-face) 990 994 (fontified t) 1040 1046 (face font-lock-keyword-face) 1115 1121 (face font-lock-keyword-face) 1159 1170 (face font-lock-builtin-face) 1200 1203 (face font-lock-comment-delimiter-face) 1203 1277 (face font-lock-comment-face) 1277 1335 (face font-lock-comment-face) 1341 1344 (face font-lock-comment-delimiter-face) 1344 1439 (face font-lock-comment-face) 1445 1448 (face font-lock-comment-delimiter-face) 1448 1494 (face font-lock-comment-face) 1494 1543 (face font-lock-comment-face) 1550 1553 (face font-lock-comment-delimiter-face) 1553 1569 (face font-lock-comment-face) 1569 1638 (face font-lock-comment-face) 1686 1692 (face font-lock-keyword-face) 1730 1741 (face font-lock-builtin-face) 1742 1755 (face font-lock-string-face) 1765 1768 (face font-lock-comment-delimiter-face) 1768 1858 (face font-lock-comment-face) 1864 1867 (face font-lock-comment-delimiter-face) 1867 1951 (face font-lock-comment-face) 1957 1960 (face font-lock-comment-delimiter-face) 1960 2094 (face font-lock-comment-face) 2100 2103 (face font-lock-comment-delimiter-face) 2103 2138 (face font-lock-comment-face) 2138 2198 (face font-lock-comment-face) 2204 2207 (face font-lock-comment-delimiter-face) 2207 2313 (face font-lock-comment-face) 2319 2322 (face font-lock-comment-delimiter-face) 2322 2417 (face font-lock-comment-face) 2465 2471 (face font-lock-keyword-face) 2509 2520 (face font-lock-builtin-face) 2521 2532 (face font-lock-string-face) 2542 2545 (face font-lock-comment-delimiter-face) 2545 2632 (face font-lock-comment-face) 2638 2641 (face font-lock-comment-delimiter-face) 2641 2698 (face font-lock-comment-face) 2698 2736 (face font-lock-comment-face) 11341 11352 (face font-lock-keyword-face) 11353 11361 (face font-lock-constant-face) 11364 11369 (face font-lock-builtin-face) 11461 11465 (face font-lock-keyword-face) 11494 11497 (face font-lock-comment-delimiter-face) 11497 11528 (face font-lock-comment-face) 11530 11533 (face font-lock-comment-delimiter-face) 11533 11571 (face font-lock-comment-face) 11576 11579 (face font-lock-comment-delimiter-face) 11579 11608 (face font-lock-comment-face) 11608 11611 (face font-lock-comment-delimiter-face) 11611 11642 (face font-lock-comment-face) 11642 11645 (face font-lock-comment-delimiter-face) 11645 11676 (face font-lock-comment-face) 11676 11679 (face font-lock-comment-delimiter-face) 11679 11710 (face font-lock-comment-face) 11773 11777 (face font-lock-keyword-face) 11814 11818 (face font-lock-keyword-face) 11849 11853 (face font-lock-keyword-face) 11887 11890 (face font-lock-comment-delimiter-face) 11890 11914 (face font-lock-comment-face) 11915 11922 (face font-lock-keyword-face) 11924 11936 (face font-lock-constant-face) 11938 11941 (face font-lock-comment-delimiter-face) 11941 11966 (face font-lock-comment-face) 12015 12018 (face font-lock-comment-delimiter-face)) . 9625) (t 24638 58976 0 0)) ((9625 . 21643) (#(":BACKGROUND))
(SETQ ORIGINAL-FOREGROUND (FACE-ATTRIBUTE 'DEFAULT :FOREGROUND))

;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"GRAY\")))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
(ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))


(IF (DISPLAY-GRAPHIC-P)
    (PROGN
    ;; IF GRAPHIC (GUI)
      (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (FACE-REMAP-ADD-RELATIVE 'HL-LINE NIL :BACKGROUND \"GRAY\")))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-OPERATOR-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (HL-LINE-MODE 0)))
      (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :BACKGROUND \"LIGHTGRAY\")))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))

      ;; (ADD-HOOK 'EVIL-OPERATOR-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"GRAY\")))

      (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :BACKGROUND \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :WEIGHT 'NORMAL)))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))

      (ADD-HOOK 'EVIL-VISUAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      ;; (ADD-HOOK 'EVIL-VISUAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"DARKGRAY\")))
      ;; (ADD-HOOK 'EVIL-VISUAL-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))

      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))
      (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND ORIGINAL-BACKGROUND)))
      (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :FOREGROUND ORIGINAL-FOREGROUND)))
    )
    ;; ELSE (OPTIONAL - TERMINAL MODE)
    (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :UNDERLINE T :BACKGROUND ORIGINAL-BACKGROUND)))
    (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :UNDERLINE T :OVERLINE 'T :BACKGROUND \"BLACK\")))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 0)))
)


;; [FOR REFERENCE] GUI DETECTION ~ MORE READABLE :)
;;
;; (WHEN (DISPLAY-GRAPHIC-P)
;;     (YOUR)
;;     (CODE))
;;
;; HTTPS://STACKOVERFLOW.COM/QUESTIONS/5795451/HOW-TO-DETECT-THAT-EMACS-IS-IN-TERMINAL-MODE
;; 2021-02-10


;; (DEFUN HIGHLIGHT-SELECTED-WINDOW ()
;;   \"HIGHLIGHT SELECTED WINDOW WITH A DIFFERENT BACKGROUND COLOR.\"
;;   (WALK-WINDOWS (LAMBDA (W)
;;                   (UNLESS (EQ W (SELECTED-WINDOW))
;;                     (WITH-CURRENT-BUFFER (WINDOW-BUFFER W)
;;                       (BUFFER-FACE-SET '(:BACKGROUND \"WHITE\"))))))
;;   (BUFFER-FACE-SET 'DEFAULT))
;; (ADD-HOOK 'BUFFER-LIST-UPDATE-HOOK 'HIGHLIGHT-SELECTED-WINDOW)


;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/34251/CHANGE-MODELINE-BACKGROUND-WHEN-IN-NORMAL-EVIL-MODE
;;
;; (SETQ ORIGINAL-MODELINE-BACKGROUND (FACE-ATTRIBUTE 'MODE-LINE :BACKGROUND))
;; (SETQ NORMAL-STATE-BACKGROUND \"RED\")
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FACE-ATTRIBUTE 'MODE-LINE NIL :BACKGROUND NORMAL-STATE-BACKGROUND)))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK  (LAMBDA () (SET-FACE-ATTRIBUTE 'MODE-LINE NIL :BACKGROUND ORIGINAL-MODELINE-BACKGROUND)))


;; EVIL CURSOR IN MODES 2021-02-06
;; HTTPS://GITHUB.COM/HLISSNER/DOOM-EMACS/ISSUES/1848
;; HTTP://FNWIYA.HATENABLOG.COM/ENTRY/2016/01/12/213149 
;; (SETQ EVIL-NORMAL-STATE-CURSOR '(BOX \"BLACK\")
;;       EVIL-INSERT-STATE-CURSOR '(BAR \"BLACK\")
;;       EVIL-VISUAL-STATE-CURSOR '(HOLLOW \"BLACK\")
;;       EVIL-EMACS-STATE-CURSOR '(BOX \"BLACK\"))

;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/30582/HOW-DO-I-CHANGE-THE-MODE-INDICATORS-FOR-EVIL-MODE-IN-THE-SPACELINE-MODE-LINE-PAC
(SETQ EVIL-NORMAL-STATE-TAG \"NORMAL\")
(SETQ EVIL-INSERT-STATE-TAG \"INSERT\")
(SETQ EVIL-VISUAL-STATE-TAG \"VISUAL\")
(SETQ EVIL-REPLACE-STATE-TAG \"REPLACE\")

;; COLOR THE EVIL TAG - COLORS TAKEN FROM SPACELINE
;; HTTPS://GITHUB.COM/MALABARBA/SMART-MODE-LINE/ISSUES/195
(SETQ EVIL-NORMAL-STATE-TAG   (PROPERTIZE \" NORMAL \" 'FACE '((:BACKGROUND \"BLACK\"          :FOREGROUND \"WHITE\")))
      EVIL-EMACS-STATE-TAG    (PROPERTIZE \" <E> \" 'FACE '((:BACKGROUND ORIGINAL-BACKGROUND :FOREGROUND FOREGROUND-COLOR)))
      EVIL-INSERT-STATE-TAG   (PROPERTIZE \" INSERT \" 'FACE '((:BACKGROUND \"LIGHTYELLOW\"    :FOREGROUND \"BLACK\")))
      EVIL-REPLACE-STATE-TAG  (PROPERTIZE \" REPLACE \" 'FACE '((:BACKGROUND \"CHOCOLATE\"     :FOREGROUND \"BLACK\")))
      EVIL-MOTION-STATE-TAG   (PROPERTIZE \" <MOTION> \" 'FACE '((:BACKGROUND \"PLUM3\"             :FOREGROUND \"BLACK\")))
      EVIL-VISUAL-STATE-TAG   (PROPERTIZE \" VISUAL \" 'FACE '((:BACKGROUND \"DARKGRAY\"       :FOREGROUND \"BLACK\")))
      EVIL-OPERATOR-STATE-TAG (PROPERTIZE \" <OPERATOR> \" 'FACE '((:BACKGROUND \"SANDY BROWN\"       :FOREGROUND \"BLACK\"))))

;; EVIL KEY BINDING
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"SPC\") 'EVIL-EX)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"J\") 'EVIL-NEXT-VISUAL-LINE)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"K\") 'EVIL-PREVIOUS-VISUAL-LINE)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"C-U\") 'EVIL-SCROLL-UP)
(DEFINE-KEY EVIL-VISUAL-STATE-MAP (KBD \"C-U\") 'EVIL-SCROLL-UP)

;; FORWARD-SENTENCE IS BASED ON THE SENTENCE-END VARIABLE
;; HTTPS://STACKOVERFLOW.COM/QUESTIONS/20257022/EVIL-EMACS-MODE-SENTENCE-MOTIONS-AND-OTHER-QUESTIONS
(SETQ SENTENCE-END \"[\\\\.\\\\?\\\\!] +\") ;; . OR ? OR ! FOLLOWED BY SPACES.
(DEFINE-KEY EVIL-NORMAL-STATE-MAP \")\" 'FORWARD-SENTENCE)


;; EVIL UNDO 2021-02-06
;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/3358/HOW-CAN-I-GET-UNDO-BEHAVIOR-IN-EVIL-SIMILAR-TO-VIMS
(SETQ EVIL-WANT-FINE-UNDO 'T)
(SETQ EVIL-WANT-FINE-UNDO 'FINE)
;; (SETQ EVIL-UNDO-SYSTEM 'UNDO-TREE) ;; NOT WORKING TESTED 2021-02-07

;; EVIL-SURROUND PACKAGE 2021-01-29
(GLOBAL-EVIL-SURROUND-MODE 1)

;; EVIL-SURROUND ADD PAIRS 2021-02-08
;; HTTPS://GITHUB.COM/EMACS-EVIL/EVIL-SURROUND
;; THIS MACRO WAS COPIED FROM HERE: HTTPS://STACKOVERFLOW.COM/A/22418983/4921402
(DEFMACRO DEFINE-AND-BIND-QUOTED-TEXT-OBJECT (NAME KEY START-REGEX END-REGEX)
  (LET ((INNER-NAME (MAKE-SYMBOL (CONCAT \"EVIL-INNER-\" NAME)))
        (OUTER-NAME (MAKE-SYMBOL (CONCAT \"EVIL-A-\" NAME))))
    `(PROGN
       (EVIL-DEFINE-TEXT-OBJECT ,INNER-NAME (COUNT &OPTIONAL BEG END TYPE)
         (EVIL-SELECT-PAREN ,START-REGEX ,END-REGEX BEG END TYPE COUNT NIL))
       (EVIL-DEFINE-TEXT-OBJECT ,OUTER-NAME (COUNT &OPTIONAL BEG END TYPE)
         (EVIL-SELECT-PAREN ,START-REGEX ,END-REGEX BEG END TYPE COUNT T))
       (DEFINE-KEY EVIL-INNER-TEXT-OBJECTS-MAP ,KEY #',INNER-NAME)
       (DEFINE-KEY EVIL-OUTER-TEXT-OBJECTS-MAP ,KEY #',OUTER-NAME))))

(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"PIPE\" \"|\" \"|\" \"|\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"SLASH\" \"/\" \"/\" \"/\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"UNDERSCORE\" \"_\" \"_\" \"_\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"CODE\" \"~\" \"~\" \"~\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"VERBATIM\" \"=\" \"=\" \"=\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"STRIKE_THROUGH\" \"+\" \"+\" \"+\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"ASTERISK\" \"*\" \"*\" \"*\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"DOLLAR\" \"$\" \"\\\\$\" \"\\\\$\") ;; SOMETIMES YOUR HAVE TO ESCAPE THE REGEX



;;----------------------------------------------------------------
;; ACE JUMP MODE
;;----------------------------------------------------------------
;; ACE JUMP MODE MAJOR FUNCTION
;; 
;; (ADD-TO-LIST 'LOAD-PATH \"/USERS/OSICKWON/.EMACS.D/ACE-JUMP-MODE/\")
;; (AUTOLOAD
;;   'ACE-JUMP-MODE
;;   \"ACE-JUMP-MODE\"
;;   \"EMACS QUICK MOVE MINOR MODE\"
;;   T)

;; YOU CAN SELECT THE KEY YOU PREFER TO
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C SPC\") 'ACE-JUMP-MODE)
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C SPC\") 'ACE-JUMP-CHAR-MODE)
;;
;; CONFLICT ORG-MODE: C-C SPC => ORG-TABLE-BLANK-FIELD

;; `C-U C-C SPC` WAS NOT WORKED PROPERLY, SO USED `C-C C-C` 2021-01-17
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C C-C SPC\") 'ACE-JUMP-CHAR-MODE)


;; WHEN ORG-MODE STARTS IT (ORG-MODE-MAP) OVERRIDES THE ACE-JUMP-MODE.
;; (HTTPS://GITHUB.COM/WINTERTTR/ACE-JUMP-MODE/ISSUES/47)
;; (ADD-HOOK 'ORG-MODE-HOOK
;;           (LAMBDA ()
;;             ;; (LOCAL-SET-KEY (KBD \"\\C-C SPC\") 'ACE-JUMP-MODE)))
;;             (LOCAL-SET-KEY (KBD \"\\C-C SPC\") 'ACE-JUMP-CHAR-MODE)))
 
;; 
;; ENABLE A MORE POWERFUL JUMP BACK FUNCTION FROM ACE JUMP MODE
;;
;; (AUTOLOAD
;;   'ACE-JUMP-MODE-POP-MARK
;;   \"ACE-JUMP-MODE\"
;;   \"ACE JUMP BACK:-)\"
;;   T)
;; (EVAL-AFTER-LOAD \"ACE-JUMP-MODE\"
;;   '(ACE-JUMP-MODE-ENABLE-MARK-SYNC))
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-X SPC\") 'ACE-JUMP-MODE-POP-MARK)

;;IF YOU USE VIPER MODE :
;(DEFINE-KEY VIPER-VI-GLOBAL-USER-MAP (KBD \"SPC\") 'ACE-JUMP-MODE)
;;IF YOU USE EVIL
;(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"SPC\") 'ACE-JUMP-MODE)
;; ----------------------------------------------------------------

;; PROJECTILE PACKAGE 2021-01-29
;; -----------------------------
(PROJECTILE-MODE +1)
(DEFINE-KEY PROJECTILE-MODE-MAP (KBD \"S-P\") 'PROJECTILE-COMMAND-MAP)
(DEFINE-KEY PROJECTILE-MODE-MAP (KBD \"C-C P\") 'PROJECTILE-COMMAND-MAP)

;; USE 'HELM-PROJECTILE-AG' INSETED OF C-C P S S, WHICH STANDS FOR AG SERCHING IN PROJECTILE
;; ONCE INSTALL PACKAGE OF 'HELM-PROJECTILE', YOU CAN ALSO USE 'HELM-PROJECTILE-AG'
;; OR INSTALL 'HELM-AG' PACKAGE TO USE SAME FUNCTION
;; HOWEVER, REQUIRED INTALL '(SUDO) PORT INSTALL THE_SILVER_SEARCHER' FIRST (THE_SILVER_SEARCHER = AG)


;; OLIVETTI 2021-02-11
;; -------------------
;; TO REMOVE BOUNDRY -> '(FRINGE-MODE 0 NIL (FRINGE)) IN `(CUSTOM-SET-VARIABLES` LINES IN FRONT OF THIS FILE. 
(USE-PACKAGE OLIVETTI
  :INIT
  (ADD-HOOK 'PROG-MODE-HOOK 'OLIVETTI-MODE)
  (ADD-HOOK 'TEXT-MODE-HOOK 'OLIVETTI-MODE)
  (SETQ OLIVETTI-BODY-WIDTH 0.99)
  ;; (SETQ OLIVETTI-BODY-WIDTH 100)
  ;; (SETQ OLIVETTI-MINIMUM-BODY-WIDTH 80)
)



;; UNDO-TREE PACKAGE 2021-02-13
;; ------------------------------
;; PREVENT ACCIDENTS :: REDO(C-?)
;; ------------------------------
(GLOBAL-UNDO-TREE-MODE)                                      
(SETQ UNDO-TREE-VISUALIZER-TIMESTAMPS T)
(SETQ UNDO-TREE-VISUALIZER-DIFF T)
(SETQ UNDO-TREE-AUTO-SAVE-HISTORY T)


;; ORG-DOWNLODA 2021-03-01
(REQUIRE 'ORG-DOWNLOAD)
;; DRAG-AND-DROP TO `DIRED`
(ADD-HOOK 'DIRED-MODE-HOOK 'ORG-DOWNLOAD-ENABLE)
;; " 0 11 (fontified t face font-lock-builtin-face) 11 14 (fontified t) 14 15 (fontified t) 15 19 (fontified t) 19 65 (fontified t) 65 76 (fontified t face font-lock-builtin-face) 76 80 (fontified t) 80 83 (fontified t face font-lock-comment-delimiter-face) 83 108 (fontified t face font-lock-comment-face) 108 166 (fontified t face font-lock-comment-face) 166 169 (fontified t face font-lock-comment-delimiter-face) 169 181 (fontified t face font-lock-comment-face) 181 281 (fontified t face font-lock-comment-face) 281 284 (fontified t face font-lock-comment-delimiter-face) 284 368 (fontified t face font-lock-comment-face) 368 409 (fontified t) 409 415 (fontified t) 415 449 (fontified t) 449 458 (fontified t) 458 464 (fontified t) 464 467 (fontified t) 467 469 (fontified t) 469 495 (fontified t) 495 500 (fontified t) 500 501 (fontified t) 501 505 (fontified t) 505 508 (fontified t face font-lock-comment-delimiter-face) 508 514 (fontified t face font-lock-comment-face) 514 525 (fontified t face font-lock-comment-face) 525 572 (fontified t) 572 578 (fontified t) 578 616 (fontified t) 616 627 (fontified t face font-lock-builtin-face) 627 628 (fontified t) 628 639 (fontified t face font-lock-string-face) 639 666 (fontified t) 666 690 (fontified t) 690 696 (fontified t) 696 755 (fontified t) 755 766 (fontified t face font-lock-builtin-face) 766 767 (fontified t) 767 773 (fontified t face font-lock-string-face) 773 777 (fontified t) 777 781 (fontified t) 781 783 (fontified t) 783 786 (fontified t face font-lock-comment-delimiter-face) 786 874 (fontified t face font-lock-comment-face) 874 923 (fontified t) 923 929 (fontified t) 929 964 (fontified t) 964 967 (fontified t) 967 978 (fontified t face font-lock-builtin-face) 978 979 (fontified t) 979 990 (fontified t face font-lock-string-face) 990 994 (fontified t) 994 1025 (fontified nil) 1025 1040 (fontified nil) 1040 1046 (fontified nil) 1046 1069 (fontified nil) 1069 1115 (fontified nil) 1115 1121 (fontified nil) 1121 1159 (fontified nil) 1159 1170 (fontified nil face font-lock-builtin-face) 1170 1200 (fontified nil) 1200 1203 (fontified nil face font-lock-comment-delimiter-face) 1203 1277 (fontified nil face font-lock-comment-face) 1277 1335 (fontified nil face font-lock-comment-face) 1335 1341 (fontified nil) 1341 1344 (fontified nil face font-lock-comment-delimiter-face) 1344 1439 (fontified nil face font-lock-comment-face) 1439 1445 (fontified nil) 1445 1448 (fontified nil face font-lock-comment-delimiter-face) 1448 1494 (fontified nil face font-lock-comment-face) 1494 1543 (fontified nil face font-lock-comment-face) 1543 1550 (fontified nil) 1550 1553 (fontified nil face font-lock-comment-delimiter-face) 1553 1569 (fontified nil face font-lock-comment-face) 1569 1638 (fontified nil face font-lock-comment-face) 1638 1686 (fontified nil) 1686 1692 (fontified nil) 1692 1730 (fontified nil) 1730 1741 (fontified nil face font-lock-builtin-face) 1741 1742 (fontified nil) 1742 1755 (fontified nil face font-lock-string-face) 1755 1765 (fontified nil) 1765 1768 (fontified nil face font-lock-comment-delimiter-face) 1768 1858 (fontified nil face font-lock-comment-face) 1858 1864 (fontified nil) 1864 1867 (fontified nil face font-lock-comment-delimiter-face) 1867 1951 (fontified nil face font-lock-comment-face) 1951 1957 (fontified nil) 1957 1960 (fontified nil face font-lock-comment-delimiter-face) 1960 2043 (fontified nil face font-lock-comment-face) 2043 2094 (fontified nil face font-lock-comment-face) 2094 2100 (fontified nil) 2100 2103 (fontified nil face font-lock-comment-delimiter-face) 2103 2138 (fontified nil face font-lock-comment-face) 2138 2198 (fontified nil face font-lock-comment-face) 2198 2204 (fontified nil) 2204 2207 (fontified nil face font-lock-comment-delimiter-face) 2207 2313 (fontified nil face font-lock-comment-face) 2313 2319 (fontified nil) 2319 2322 (fontified nil face font-lock-comment-delimiter-face) 2322 2417 (fontified nil face font-lock-comment-face) 2417 2465 (fontified nil) 2465 2471 (fontified nil) 2471 2509 (fontified nil) 2509 2520 (fontified nil face font-lock-builtin-face) 2520 2521 (fontified nil) 2521 2532 (fontified nil face font-lock-string-face) 2532 2542 (fontified nil) 2542 2545 (fontified nil face font-lock-comment-delimiter-face) 2545 2594 (fontified nil face font-lock-comment-face) 2594 2632 (fontified nil face font-lock-comment-face) 2632 2638 (fontified nil) 2638 2641 (fontified nil face font-lock-comment-delimiter-face) 2641 2698 (fontified nil face font-lock-comment-face) 2698 2736 (fontified nil face font-lock-comment-face) 2736 2743 (fontified nil) 2743 2746 (fontified nil face font-lock-comment-delimiter-face) 2746 2837 (fontified nil face font-lock-comment-face) 2837 2843 (fontified nil) 2843 2846 (fontified nil face font-lock-comment-delimiter-face) 2846 2931 (fontified nil face font-lock-comment-face) 2931 2937 (fontified nil) 2937 2940 (fontified nil face font-lock-comment-delimiter-face) 2940 3036 (fontified nil face font-lock-comment-face) 3036 3042 (fontified nil) 3042 3045 (fontified nil face font-lock-comment-delimiter-face) 3045 3132 (fontified nil face font-lock-comment-face) 3132 3141 (fontified nil face font-lock-comment-face) 3141 11340 (fontified nil) 11340 11341 (fontified nil) 11341 11352 (face font-lock-keyword-face fontified nil) 11352 11353 (fontified nil) 11353 11361 (face font-lock-constant-face fontified nil) 11361 11364 (fontified nil) 11364 11369 (face font-lock-builtin-face fontified nil) 11369 11461 (fontified nil) 11461 11465 (face font-lock-keyword-face fontified nil) 11465 11494 (fontified nil) 11494 11497 (face font-lock-comment-delimiter-face fontified nil) 11497 11528 (face font-lock-comment-face fontified nil) 11528 11530 (fontified nil) 11530 11533 (face font-lock-comment-delimiter-face fontified nil) 11533 11571 (face font-lock-comment-face fontified nil) 11571 11576 (fontified nil) 11576 11579 (face font-lock-comment-delimiter-face fontified nil) 11579 11608 (face font-lock-comment-face fontified nil) 11608 11611 (face font-lock-comment-delimiter-face fontified nil) 11611 11642 (face font-lock-comment-face fontified nil) 11642 11645 (face font-lock-comment-delimiter-face fontified nil) 11645 11676 (face font-lock-comment-face fontified nil) 11676 11679 (face font-lock-comment-delimiter-face fontified nil) 11679 11710 (face font-lock-comment-face fontified nil) 11710 11773 (fontified nil) 11773 11777 (face font-lock-keyword-face fontified nil) 11777 11814 (fontified nil) 11814 11818 (face font-lock-keyword-face fontified nil) 11818 11840 (fontified nil) 11840 11848 (fontified nil) 11848 11849 (fontified nil) 11849 11853 (face font-lock-keyword-face fontified nil) 11853 11887 (fontified nil) 11887 11890 (face font-lock-comment-delimiter-face fontified nil) 11890 11914 (face font-lock-comment-face fontified nil) 11914 11915 (fontified nil) 11915 11922 (face font-lock-keyword-face fontified nil) 11922 11924 (fontified nil) 11924 11936 (face font-lock-constant-face fontified nil) 11936 11938 (fontified nil) 11938 11941 (face font-lock-comment-delimiter-face fontified nil) 11941 11966 (face font-lock-comment-face fontified nil) 11966 12015 (fontified nil) 12015 12018 (face font-lock-comment-delimiter-face fontified nil)) . 9625)) (24638 59017 551693 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 9625) (#("t" 0 1 (fontified t)) . 9625) (#("l" 0 1 (fontified t)) . 9625) (#("u" 0 1 (fontified t)) . 9625) (#("a" 0 1 (fontified t)) . 9625) (#("f" 0 1 (fontified t)) . 9625) (#("e" 0 1 (fontified t)) . 9625) (#("d" 0 1 (fontified t)) . 9625) (#("'" 0 1 (fontified t)) . 9625) (undo-tree-id30 . -1) (undo-tree-id31 . -1)) ((9625 . 9626) (9625 . 9626) (9625 . 9626) (9625 . 9626) (9625 . 9626) (9625 . 9626) (9625 . 9626) (9625 . 9626) (9625 . 9626) (t 24638 58976 0 0)) (24638 59018 39963 0) 0 nil] [nil nil ((#(" " 0 1 (fontified nil)) . 9626) (#("t" 0 1 (fontified nil)) . 9626) (#("l" 0 1 (fontified nil)) . 9626) (#("u" 0 1 (fontified nil)) . 9626) (#("a" 0 1 (fontified nil)) . 9626) (#("f" 0 1 (fontified nil)) . 9626) (#("e" 0 1 (fontified nil)) . 9626) (#("d" 0 1 (fontified nil)) . 9626)) ((9626 . 9627) (9626 . 9627) (9626 . 9627) (9626 . 9627) (9626 . 9627) (9626 . 9627) (9626 . 9627) (9626 . 9627) (t 24638 58929 0 0)) (24638 58955 728683 0) 0 nil]) ((21649 . 21652)) ((#(";; " 0 3 (face font-lock-comment-delimiter-face)) . 21649) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3)) (24638 59018 415689 0) 0 nil]) ((#("/foo" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face) 2 3 (fontified nil face font-lock-string-face) 3 4 (fontified nil face font-lock-string-face)) . 21697)) ((21697 . 21701)) (24638 58954 128309 0) 0 nil]) ((nil rear-nonsticky nil 21702 . 21703) (nil fontified nil 21649 . 21703) (21649 . 21703) (t 24637 45838 0 0)) nil (24638 57255 861932 0) 0 nil]) ((#(" (set-window-buffer nil (current-buffer)) ; Use them now." 0 42 (fontified t) 42 44 (face font-lock-comment-delimiter-face fontified t) 44 56 (face font-lock-comment-face fontified t) 56 57 (face font-lock-comment-face fontified t rear-nonsticky t)) . 194) (undo-tree-id224 . -57)) nil (24637 45838 150167 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 194) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1)) nil (24637 45838 150178 0) 0 nil]) ((#(" (setq-default left-margin-width 2 right-margin-width 2) ; Define new widths." 0 2 (fontified t) 2 14 (face font-lock-keyword-face fontified t) 14 57 (fontified t) 57 59 (face font-lock-comment-delimiter-face fontified t) 59 77 (face font-lock-comment-face fontified t)) . 194) (undo-tree-id228 . -34) (undo-tree-id229 . -34) (undo-tree-id230 . -77) (t 24637 45733 0 0)) nil (24637 45838 150188 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 194) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#("
" 0 1 (fontified t)) . 194) (undo-tree-id215 . -1) (undo-tree-id216 . -1)) nil (24637 45733 697790 0) 0 nil]) ((181 . 192)) nil (24637 45733 697796 0) 0 nil]) ((177 . 181)) nil (24637 45733 697798 0) 0 nil]) ((#("v" 0 1 (face font-lock-comment-face fontified t)) . -177) (undo-tree-id217 . -1) (undo-tree-id218 . -1) 178) nil (24637 45733 697804 0) 0 nil]) ((169 . 178)) nil (24637 45733 697807 0) 0 nil]) ((168 . 169)) nil (24637 45733 697816 0) 0 nil]) ((167 . 170)) nil (24637 45733 697818 0) 0 nil]) ((#("0" 0 1 (fontified t)) . -203) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) 204 (t 24637 45650 0 0)) nil (24637 45733 697831 0) 0 nil]) ((203 . 204) (t 24637 45583 0 0)) nil (24637 45650 802264 0) 0 nil]) ((223 . 224)) nil (24637 45583 129397 0) 0 nil]) ((#("1" 0 1 (fontified t)) . -223) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("0" 0 1 (fontified t)) . -224) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("0" 0 1 (fontified t)) . -225) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 226) nil (24637 45583 129426 0) 0 nil]) ((202 . 203)) nil (24637 45583 129430 0) 0 nil]) ((#("1" 0 1 (fontified t)) . -202) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("0" 0 1 (fontified t)) . -203) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("0" 0 1 (fontified t)) . -204) (undo-tree-id208 . -1) (undo-tree-id209 . -1) 205 (t 24637 45542 0 0)) nil (24637 45583 129444 0) 0 nil]) ((226 . 228)) nil (24637 45542 19850 0) 0 nil]) ((225 . 226)) nil (24637 45542 19856 0) 0 nil]) ((#("8" 0 1 (fontified t)) . -225) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 226) nil (24637 45542 19875 0) 0 nil]) ((204 . 205)) nil (24637 45542 19878 0) 0 nil]) ((nil rear-nonsticky nil 304 . 305) (nil fontified nil 169 . 305) (169 . 305)) nil (24637 45542 19880 0) 0 nil]) ((#("

(lambda () (progn
  (setq left-margin-width 200)
  (setq right-margin-width 200)
  (set-window-buffer nil (current-buffer))))






" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 9 (face font-lock-keyword-face fontified t) 9 14 (fontified t) 14 19 (face font-lock-keyword-face fontified t) 19 20 (fontified t) 20 23 (fontified t) 23 27 (face font-lock-keyword-face fontified t) 27 51 (fontified t) 51 54 (fontified t) 54 58 (face font-lock-keyword-face fontified t) 58 83 (fontified t) 83 126 (fontified t) 126 127 (fontified t rear-nonsticky t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t)) . -169) (undo-tree-id168 . -134) (undo-tree-id169 . -2) (undo-tree-id170 . -134) (undo-tree-id171 . -134) (undo-tree-id172 . -133) (undo-tree-id173 . -133) (undo-tree-id174 . -132) (undo-tree-id175 . -132) (undo-tree-id176 . -131) (undo-tree-id177 . -131) (undo-tree-id178 . -130) (undo-tree-id179 . -130) (undo-tree-id180 . -129) (undo-tree-id181 . -129) (undo-tree-id182 . -128) (undo-tree-id183 . -128) (undo-tree-id184 . -83) (undo-tree-id185 . -83) (undo-tree-id186 . -51) (undo-tree-id187 . -51) (undo-tree-id188 . -20) (undo-tree-id189 . -20) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -2) (undo-tree-id195 . -134) (undo-tree-id196 . -134) (undo-tree-id197 . -134) 303 (t 24637 45477 0 0)) nil (24637 45542 19936 0) 0 nil]) ((248 . 250)) nil (24637 45477 604846 0) 0 nil]) ((216 . 218) (t 24637 45429 0 0)) nil (24637 45477 604852 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 294) (undo-tree-id163 . 1) (undo-tree-id164 . 1) (#("
" 0 1 (fontified t)) . 294) (undo-tree-id165 . 1)) nil (24637 45429 421036 0) 0 nil]) ((nil rear-nonsticky nil 291 . 292) (nil fontified nil 171 . 292) (171 . 292)) nil (24637 45429 421042 0) 0 nil]) ((167 . 182) (t 24637 44756 0 0)) nil (24637 45429 421045 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 21620) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1)) nil (24637 44756 796421 0) 0 nil]) ((#("(setq org-download-screenshot-method \"screencapture -i %s\")" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 37 (fontified t) 37 58 (face font-lock-string-face fontified t) 58 59 (rear-nonsticky t fontified t)) . 21620) (undo-tree-id162 . -59) (t 24637 44681 0 0)) nil (24637 44756 796428 0) 0 nil]) ((21621 . 21626) (t 24637 44557 0 0)) nil (24637 44681 79674 0) 0 nil]) ((nil rear-nonsticky nil 21673 . 21674) (nil fontified nil 21620 . 21674) (21620 . 21674)) nil (24637 44557 313523 0) 0 nil]) ((21620 . 21622)) nil (24637 44557 313529 0) 0 nil] [nil ([nil ([nil ([nil ([nil nil ((21519 . 21762) (#("
(use-package org-download
  :ensure t 
  :config
  (require 'org-download)
  ;; Drag and drop to Dired
  (add-hook 'dired-mode-hook 'org-download-enable)
  (setq org-download-method 'directory)
  (setq-default org-download-image-dir \"./img\")
" 0 1 (fontified nil) 1 2 (fontified nil) 2 13 (face font-lock-keyword-face fontified nil) 13 14 (fontified nil) 14 26 (face font-lock-constant-face fontified nil) 26 29 (fontified nil) 29 36 (face font-lock-builtin-face fontified nil) 36 42 (fontified nil) 42 49 (face font-lock-builtin-face fontified nil) 49 53 (fontified nil) 53 60 (face font-lock-keyword-face fontified nil) 60 62 (fontified nil) 62 74 (face font-lock-constant-face fontified nil) 74 78 (fontified nil) 78 81 (face font-lock-comment-delimiter-face fontified nil) 81 104 (face font-lock-comment-face fontified nil) 104 158 (fontified nil) 158 162 (face font-lock-keyword-face fontified nil) 162 198 (fontified nil) 198 210 (face font-lock-keyword-face fontified nil) 210 234 (fontified nil) 234 241 (face font-lock-string-face fontified nil) 241 243 (fontified nil)) . 21519) (t 24637 44341 0 0)) ((21519 . 21762) (#("
(USE-PACKAGE ORG-DOWNLOAD
  :ENSURE T 
  :CONFIG
  (REQUIRE 'ORG-DOWNLOAD)
  ;; DRAG AND DROP TO DIRED
  (ADD-HOOK 'DIRED-MODE-HOOK 'ORG-DOWNLOAD-ENABLE)
  (SETQ ORG-DOWNLOAD-METHOD 'DIRECTORY)
  (SETQ-DEFAULT ORG-DOWNLOAD-IMAGE-DIR \"./IMG\")
" 0 1 (fontified t) 1 2 (fontified t) 2 13 (fontified t) 13 14 (fontified t) 14 26 (fontified t) 26 29 (fontified t) 29 36 (face font-lock-builtin-face fontified t) 36 42 (fontified t) 42 49 (face font-lock-builtin-face fontified t) 49 53 (fontified t) 53 60 (fontified t) 60 62 (fontified t) 62 74 (fontified t) 74 78 (fontified t) 78 81 (face font-lock-comment-delimiter-face fontified t) 81 104 (face font-lock-comment-face fontified t) 104 158 (fontified t) 158 162 (fontified t) 162 198 (fontified t) 198 210 (fontified t) 210 234 (fontified t) 234 241 (face font-lock-string-face fontified t) 241 243 (fontified t)) . 21519) (undo-tree-id37 . -1) (undo-tree-id38 . -243) (undo-tree-id39 . -243) (undo-tree-id40 . -195) (undo-tree-id41 . -195) (undo-tree-id42 . -155) (undo-tree-id43 . -155) (undo-tree-id44 . -104) (undo-tree-id45 . -104) (undo-tree-id46 . -76) (undo-tree-id47 . -76) (undo-tree-id48 . -50) (undo-tree-id49 . -50) (undo-tree-id50 . -40) (undo-tree-id51 . -40) (undo-tree-id52 . -27) (undo-tree-id53 . -27) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -243) (undo-tree-id57 . -243) (undo-tree-id58 . -243) (undo-tree-id59 . -243)) (24637 44521 174324 0) 0 nil]) ((#(" " 0 1 (fontified nil)) . 21875) (#(" " 0 1 (fontified nil)) . 21875)) ((21875 . 21876) (21875 . 21876) (t 24637 44341 0 0)) (24637 44523 840291 0) 0 nil]) ((#("(require 'org-download)
;; Drag-and-drop to `dired`
(add-hook 'dired-mode-hook 'org-download-enable)
" 0 1 (fontified nil) 1 8 (face font-lock-keyword-face fontified nil) 8 10 (fontified nil) 10 22 (face font-lock-constant-face fontified nil) 22 24 (fontified nil) 24 27 (face font-lock-comment-delimiter-face fontified nil) 27 52 (face font-lock-comment-face fontified nil) 52 99 (fontified nil) 99 100 (fontified nil rear-nonsticky t) 100 101 (fontified nil)) . 21519)) ((21519 . 21620)) (24637 44532 93423 0) 0 nil]) ((nil rear-nonsticky nil 21978 . 21979) (21621 . 21979)) ((#("(use-package org-download
  :ensure t 
  :config
  (require 'org-download)
  ;; Drag and drop to Dired
  (add-hook 'dired-mode-hook 'org-download-enable)
  (setq org-download-method 'directory)
  (setq-default org-download-image-dir \"./img\")
  (setq org-download-screenshot-method \"screencapture -i\")
  (setq org-download-screenshot-file \"./img/tmp.png\")
  )" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 25 (face font-lock-constant-face fontified t) 25 26 (fontified t) 26 28 (fontified t) 28 35 (face font-lock-builtin-face fontified t) 35 39 (fontified t) 39 41 (fontified t) 41 48 (face font-lock-builtin-face fontified t) 48 49 (fontified t) 49 52 (fontified t) 52 59 (face font-lock-keyword-face fontified t) 59 61 (fontified t) 61 73 (face font-lock-constant-face fontified t) 73 75 (fontified t) 75 77 (fontified t) 77 80 (face font-lock-comment-delimiter-face fontified t) 80 103 (face font-lock-comment-face fontified t) 103 157 (fontified t) 157 161 (face font-lock-keyword-face fontified t) 161 194 (fontified t) 194 197 (fontified t) 197 209 (face font-lock-keyword-face fontified t) 209 233 (fontified t) 233 240 (face font-lock-string-face fontified t) 240 242 (fontified t) 242 245 (fontified t) 245 249 (face font-lock-keyword-face fontified t) 249 281 (fontified t) 281 295 (face font-lock-string-face fontified t) 295 299 (face font-lock-string-face fontified t) 299 301 (fontified t) 301 304 (fontified t) 304 308 (face font-lock-keyword-face fontified t) 308 338 (fontified t) 338 353 (face font-lock-string-face fontified t) 353 355 (fontified t) 355 356 (fontified nil) 356 357 (fontified nil) 357 358 (fontified nil rear-nonsticky nil)) . 21621) (undo-tree-id111 . -355) (undo-tree-id112 . -355) (undo-tree-id113 . -301) (undo-tree-id114 . -301) (nil rear-nonsticky t 21978 . 21979)) (24637 44532 765542 0) 0 nil]) ((21620 . 21624)) ((#("



" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 21620) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1)) (24637 44535 509378 0) 0 nil]) ((nil rear-nonsticky nil 21517 . 21518) (21508 . 21518)) ((#("2021-03-01" 0 9 (face font-lock-comment-face fontified nil) 9 10 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 21508) (nil rear-nonsticky t 21517 . 21518)) (24637 44535 981933 0) 0 nil]) ((#(";" 0 1 (face font-lock-comment-face fontified nil)) . 21508)) ((21508 . 21509)) (24637 44530 157443 0) 0 nil]) ((21501 . 21509)) nil (24637 42547 264186 0) 0 nil]) ((#("n" 0 1 (face font-lock-comment-face fontified t)) . -21501) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 21502) nil (24637 42547 264193 0) 0 nil]) ((21492 . 21502)) nil (24637 42547 264195 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 21517)) nil (24637 42547 264197 0) 0 nil]) ((21490 . 21492)) nil (24637 42547 264199 0) 0 nil]) ((nil rear-nonsticky nil 21591 . 21592) (nil fontified nil 21491 . 21592) (21491 . 21592)) nil (24637 42547 264201 0) 0 nil]) ((21490 . 21491) (t 24637 42131 0 0)) nil (24637 42547 264203 0) 0 nil]) ((4479 . 5694) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 948 (fontified nil)) . -4479) (4475 . 4477) (#("
" 0 1 (fontified nil)) . -4475) (3859 . 4476) (#(" " 0 1 (fontified nil)) . 3859) (3829 . 3860) (3804 . 3807) (3767 . 3770) (3732 . 3735) (3682 . 3685) (#("
" 0 1 (fontified nil)) . -3817) (3793 . 3795) (3759 . 3761) (3727 . 3729) (3680 . 3682) (3809 . 3810) (3786 . 3787) (#("
" 0 1 (fontified nil)) . 3786) (3786 . 3787) (#(" " 0 1 (fontified nil)) . -3786) (3754 . 3755) (#("
" 0 1 (fontified nil)) . 3754) (3754 . 3755) (#(" " 0 1 (fontified nil)) . -3754) (3724 . 3725) (#("
" 0 1 (fontified nil)) . 3724) (3724 . 3725) (#(" " 0 1 (fontified nil)) . -3724) (3679 . 3680) (#("
" 0 1 (fontified nil)) . 3679) (3679 . 3680) (#(" " 0 1 (fontified nil)) . -3679) (3639 . 3809) (#(" " 0 1 (fontified nil)) . 3639) (3373 . 3640) (3342 . 3345) (3272 . 3275) (#("
" 0 1 (fontified nil)) . -3367) (3337 . 3339) (3270 . 3272) (3363 . 3364) (3334 . 3335) (#(" " 0 1 (fontified nil)) . -3334) (3269 . 3270) (#("
" 0 1 (fontified nil)) . 3269) (3269 . 3270) (#(" " 0 1 (fontified nil)) . -3269) (3236 . 3363) (#(" " 0 1 (fontified nil)) . 3236) (3211 . 3237) (#("
" 0 1 (fontified nil)) . -3211) (3009 . 3212) (#(" " 0 1 (fontified nil)) . 3009) (2865 . 3010) (#("
" 0 1 (fontified nil)) . -2865) (2780 . 2866) (#(" " 0 1 (fontified nil)) . 2780) (2509 . 2781) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1955 (fontified nil)) . -2509) (t 24637 32303 0 0)) nil (24637 42131 938713 0) 0 nil]) ((#(" '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
" 0 18 (fontified t) 18 29 (face font-lock-builtin-face fontified t) 29 30 (fontified t) 30 39 (face font-lock-string-face fontified t) 39 40 (fontified t) 40 47 (face font-lock-builtin-face fontified t) 47 83 (fontified t) 83 93 (face font-lock-builtin-face fontified t) 93 94 (fontified t) 94 103 (face font-lock-string-face fontified t) 103 104 (fontified t) 104 115 (face font-lock-builtin-face fontified t) 115 116 (fontified t) 116 125 (face font-lock-string-face fontified t) 125 126 (fontified t) 126 137 (face font-lock-builtin-face fontified t) 137 138 (fontified t) 138 147 (face font-lock-string-face fontified t) 147 148 (fontified t) 148 155 (face font-lock-builtin-face fontified t) 155 189 (fontified t) 189 198 (face font-lock-builtin-face fontified t) 198 199 (fontified t) 199 208 (face font-lock-string-face fontified t) 208 209 (fontified t) 209 220 (face font-lock-builtin-face fontified t) 220 221 (fontified t) 221 230 (face font-lock-string-face fontified t) 230 231 (fontified t) 231 242 (face font-lock-builtin-face fontified t) 242 243 (fontified t) 243 252 (face font-lock-string-face fontified t) 252 253 (fontified t) 253 260 (face font-lock-builtin-face fontified t) 260 267 (fontified t)) . -5055) (undo-tree-id0 . -267) (undo-tree-id1 . -267) (undo-tree-id2 . -267) (undo-tree-id3 . -267) 5322 (t 24637 166 0 0)) nil (24637 32303 445867 0) 0 nil]) ((4466 . 5681) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4466) (4462 . 4464) (#("
" 0 1 (fontified nil)) . -4462) (3859 . 4463) (#(" " 0 1 (fontified nil)) . 3859) (3829 . 3860) (3804 . 3807) (3767 . 3770) (3732 . 3735) (3682 . 3685) (#("
" 0 1 (fontified nil)) . -3817) (3793 . 3795) (3759 . 3761) (3727 . 3729) (3680 . 3682) (3809 . 3810) (3786 . 3787) (#("
" 0 1 (fontified nil)) . 3786) (3786 . 3787) (#(" " 0 1 (fontified nil)) . -3786) (3754 . 3755) (#("
" 0 1 (fontified nil)) . 3754) (3754 . 3755) (#(" " 0 1 (fontified nil)) . -3754) (3724 . 3725) (#("
" 0 1 (fontified nil)) . 3724) (3724 . 3725) (#(" " 0 1 (fontified nil)) . -3724) (3679 . 3680) (#("
" 0 1 (fontified nil)) . 3679) (3679 . 3680) (#(" " 0 1 (fontified nil)) . -3679) (3639 . 3809) (#(" " 0 1 (fontified nil)) . 3639) (3373 . 3640) (3342 . 3345) (3272 . 3275) (#("
" 0 1 (fontified nil)) . -3367) (3337 . 3339) (3270 . 3272) (3363 . 3364) (3334 . 3335) (#(" " 0 1 (fontified nil)) . -3334) (3269 . 3270) (#("
" 0 1 (fontified nil)) . 3269) (3269 . 3270) (#(" " 0 1 (fontified nil)) . -3269) (3236 . 3363) (#(" " 0 1 (fontified nil)) . 3236) (3211 . 3237) (#("
" 0 1 (fontified nil)) . -3211) (3009 . 3212) (#(" " 0 1 (fontified nil)) . 3009) (2865 . 3010) (#("
" 0 1 (fontified nil)) . -2865) (2780 . 2866) (#(" " 0 1 (fontified nil)) . 2780) (2509 . 2781) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(google-translate org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1972 (fontified nil)) . -2509) (t 24637 142 0 0)) nil (24637 166 520498 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 8865) (#("
" 0 1 (fontified t)) . 8865) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("
" 0 1 (fontified t)) . 8865) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (24637 142 870290 0) 0 nil]) ((#("(setq google-translate-backend-method 'curl)" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 44 (fontified t)) . 8865) (t 24637 27 0 0)) nil (24637 142 870296 0) 0 nil]) ((8865 . 9173)) nil (24637 142 870298 0) 0 nil]) ((#("


;; PLUG-IN: deft -> do not use: Korean issue, change filename forcely 2020-12-08
;(require 'deft)
;(setq deft-extensions '(\"txt\" \"tex\" \"org\" \"md\"))
;(setq deft-directory \"~/Documents/nvALT/\")
;;(setq deft-directory \"~/Documents/test/\")
;(setq deft-recursive t)" 0 1 (fontified t) 1 3 (fontified t) 3 6 (face font-lock-comment-delimiter-face fontified t) 6 84 (face font-lock-comment-face fontified t) 84 85 (face font-lock-comment-delimiter-face fontified t) 85 101 (face font-lock-comment-face fontified t) 101 102 (face font-lock-comment-delimiter-face fontified t) 102 151 (face font-lock-comment-face fontified t) 151 152 (face font-lock-comment-delimiter-face fontified t) 152 195 (face font-lock-comment-face fontified t) 195 197 (face font-lock-comment-delimiter-face fontified t) 197 239 (face font-lock-comment-face fontified t) 239 240 (face font-lock-comment-delimiter-face fontified t) 240 263 (face font-lock-comment-face fontified t)) . 8864)) nil (24637 142 870300 0) 0 nil]) ((#("
(setq google-translate-backend-method 'curl)" 0 1 (fontified t) 1 2 (fontified t) 2 6 (face font-lock-keyword-face fontified t) 6 45 (fontified t)) . 8864) (t 24637 27 0 0)) nil (24637 142 870302 0) 0 nil]) ((8865 . 9173)) nil (24637 142 870304 0) 0 nil]) ((#("


;; PLUG-IN: deft -> do not use: Korean issue, change filename forcely 2020-12-08
;(require 'deft)
;(setq deft-extensions '(\"txt\" \"tex\" \"org\" \"md\"))
;(setq deft-directory \"~/Documents/nvALT/\")
;;(setq deft-directory \"~/Documents/test/\")
;(setq deft-recursive t)" 0 1 (rear-nonsticky t fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 6 (face font-lock-comment-delimiter-face fontified t) 6 84 (face font-lock-comment-face fontified t) 84 85 (face font-lock-comment-delimiter-face fontified t) 85 101 (face font-lock-comment-face fontified t) 101 102 (face font-lock-comment-delimiter-face fontified t) 102 151 (face font-lock-comment-face fontified t) 151 152 (face font-lock-comment-delimiter-face fontified t) 152 195 (face font-lock-comment-face fontified t) 195 197 (face font-lock-comment-delimiter-face fontified t) 197 239 (face font-lock-comment-face fontified t) 239 240 (face font-lock-comment-delimiter-face fontified t) 240 263 (face font-lock-comment-face fontified t)) . 8864)) nil (24637 142 870305 0) 0 nil]) ((#("d(setq google-translate-backend-method 'curl)" 0 1 (fontified t) 1 2 (fontified t) 2 6 (face font-lock-keyword-face fontified t) 6 45 (fontified t)) . 8864) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) nil (24637 142 870313 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -8864) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 8865) nil (24637 142 870319 0) 0 nil]) ((8865 . 8866) (t 24637 27 0 0)) nil (24637 142 870321 0) 0 nil]) ((nil rear-nonsticky nil 8909 . 8910) (nil fontified nil 8865 . 8910) (8865 . 8910)) nil (24637 27 769283 0) 0 nil]) ((8864 . 8866) (t 24636 65259 0 0)) nil (24637 27 769290 0) 0 nil]) ((4483 . 5698) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4483) (4479 . 4481) (#("
" 0 1 (fontified nil)) . -4479) (3859 . 4480) (#(" " 0 1 (fontified nil)) . 3859) (3829 . 3860) (3804 . 3807) (3767 . 3770) (3732 . 3735) (3682 . 3685) (#("
" 0 1 (fontified nil)) . -3817) (3793 . 3795) (3759 . 3761) (3727 . 3729) (3680 . 3682) (3809 . 3810) (3786 . 3787) (#("
" 0 1 (fontified nil)) . 3786) (3786 . 3787) (#(" " 0 1 (fontified nil)) . -3786) (3754 . 3755) (#("
" 0 1 (fontified nil)) . 3754) (3754 . 3755) (#(" " 0 1 (fontified nil)) . -3754) (3724 . 3725) (#("
" 0 1 (fontified nil)) . 3724) (3724 . 3725) (#(" " 0 1 (fontified nil)) . -3724) (3679 . 3680) (#("
" 0 1 (fontified nil)) . 3679) (3679 . 3680) (#(" " 0 1 (fontified nil)) . -3679) (3639 . 3809) (#(" " 0 1 (fontified nil)) . 3639) (3373 . 3640) (3342 . 3345) (3272 . 3275) (#("
" 0 1 (fontified nil)) . -3367) (3337 . 3339) (3270 . 3272) (3363 . 3364) (3334 . 3335) (#(" " 0 1 (fontified nil)) . -3334) (3269 . 3270) (#("
" 0 1 (fontified nil)) . 3269) (3269 . 3270) (#(" " 0 1 (fontified nil)) . -3269) (3236 . 3363) (#(" " 0 1 (fontified nil)) . 3236) (3211 . 3237) (#("
" 0 1 (fontified nil)) . -3211) (3009 . 3212) (#(" " 0 1 (fontified nil)) . 3009) (2865 . 3010) (#("
" 0 1 (fontified nil)) . -2865) (2780 . 2866) (#(" " 0 1 (fontified nil)) . 2780) (2509 . 2781) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(org-superstar org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1955 (fontified nil)) . -2509) (t 24636 64167 0 0)) nil (24636 65259 417014 0) 0 nil]) ((4466 . 5681) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1215 (fontified nil)) . -4466) (4462 . 4464) (#("
" 0 1 (fontified nil)) . -4462) (3859 . 4463) (#(" " 0 1 (fontified nil)) . 3859) (3829 . 3860) (3804 . 3807) (3767 . 3770) (3732 . 3735) (3682 . 3685) (#("
" 0 1 (fontified nil)) . -3817) (3793 . 3795) (3759 . 3761) (3727 . 3729) (3680 . 3682) (3809 . 3810) (3786 . 3787) (#("
" 0 1 (fontified nil)) . 3786) (3786 . 3787) (#(" " 0 1 (fontified nil)) . -3786) (3754 . 3755) (#("
" 0 1 (fontified nil)) . 3754) (3754 . 3755) (#(" " 0 1 (fontified nil)) . -3754) (3724 . 3725) (#("
" 0 1 (fontified nil)) . 3724) (3724 . 3725) (#(" " 0 1 (fontified nil)) . -3724) (3679 . 3680) (#("
" 0 1 (fontified nil)) . 3679) (3679 . 3680) (#(" " 0 1 (fontified nil)) . -3679) (3639 . 3809) (#(" " 0 1 (fontified nil)) . 3639) (3373 . 3640) (3342 . 3345) (3272 . 3275) (#("
" 0 1 (fontified nil)) . -3367) (3337 . 3339) (3270 . 3272) (3363 . 3364) (3334 . 3335) (#(" " 0 1 (fontified nil)) . -3334) (3269 . 3270) (#("
" 0 1 (fontified nil)) . 3269) (3269 . 3270) (#(" " 0 1 (fontified nil)) . -3269) (3236 . 3363) (#(" " 0 1 (fontified nil)) . 3236) (3211 . 3237) (#("
" 0 1 (fontified nil)) . -3211) (3009 . 3212) (#(" " 0 1 (fontified nil)) . 3009) (2865 . 3010) (#("
" 0 1 (fontified nil)) . -2865) (2780 . 2866) (#(" " 0 1 (fontified nil)) . 2780) (2509 . 2781) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(org-tree-slide org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1941 (fontified nil)) . -2509) (t 24636 63829 0 0)) nil (24636 64167 681817 0) 0 nil]) ((4452 . 5667) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 ;; -------------------------------------------------------------------------------------------------  
 ;; Elegant Modeline :: white / 2021-02-28
 ;; https://www.reddit.com/r/emacs/comments/fc8hc2/binder_modes_for_structuring_a_multifile_writing/
 ;; https://github.com/rnkn/dotfiles/blob/74dff2b1eadf3134c01e376cf8f42b24a0d1cc05/emacs/settings.el#L416-L417
  '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
 ;; ------------------------------------------------------------------------------------------------- 
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1678 (fontified nil)) . -4452) (4448 . 4450) (#("
" 0 1 (fontified nil)) . -4448) (3859 . 4449) (#(" " 0 1 (fontified nil)) . 3859) (3829 . 3860) (3804 . 3807) (3767 . 3770) (3732 . 3735) (3682 . 3685) (#("
" 0 1 (fontified nil)) . -3817) (3793 . 3795) (3759 . 3761) (3727 . 3729) (3680 . 3682) (3809 . 3810) (3786 . 3787) (#("
" 0 1 (fontified nil)) . 3786) (3786 . 3787) (#(" " 0 1 (fontified nil)) . -3786) (3754 . 3755) (#("
" 0 1 (fontified nil)) . 3754) (3754 . 3755) (#(" " 0 1 (fontified nil)) . -3754) (3724 . 3725) (#("
" 0 1 (fontified nil)) . 3724) (3724 . 3725) (#(" " 0 1 (fontified nil)) . -3724) (3679 . 3680) (#("
" 0 1 (fontified nil)) . 3679) (3679 . 3680) (#(" " 0 1 (fontified nil)) . -3679) (3639 . 3809) (#(" " 0 1 (fontified nil)) . 3639) (3373 . 3640) (3342 . 3345) (3272 . 3275) (#("
" 0 1 (fontified nil)) . -3367) (3337 . 3339) (3270 . 3272) (3363 . 3364) (3334 . 3335) (#(" " 0 1 (fontified nil)) . -3334) (3269 . 3270) (#("
" 0 1 (fontified nil)) . 3269) (3269 . 3270) (#(" " 0 1 (fontified nil)) . -3269) (3236 . 3363) (#(" " 0 1 (fontified nil)) . 3236) (3211 . 3237) (#("
" 0 1 (fontified nil)) . -3211) (3009 . 3212) (#(" " 0 1 (fontified nil)) . 3009) (2865 . 3010) (#("
" 0 1 (fontified nil)) . -2865) (2780 . 2866) (#(" " 0 1 (fontified nil)) . 2780) (2509 . 2781) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1926 (fontified nil)) . -2509) (t 24636 26144 0 0)) nil (24636 63829 735084 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 5483)) nil (24636 26144 227838 0) 0 nil]) ((#("g" 0 1 (fontified t)) . -5483) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("g" 0 1 (fontified t)) . -5484) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 5485) nil (24636 26144 227891 0) 0 nil]) ((5483 . 5485) (t 24636 25342 0 0)) nil (24636 26144 227896 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 5483) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (24636 25342 414116 0) 0 nil]) ((#(";; https://github.com/rnkn/dotfiles/blob/74dff2b1eadf3134c01e376cf8f42b24a0d1cc05/emacs/settings.el#L32" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 103 (face font-lock-comment-face fontified t)) . 5483) (undo-tree-id4 . -103)) nil (24636 25342 414123 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 5699) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (24636 25342 414132 0) 0 nil]) ((#(";; '(default-frame-alist '((width . 80) (height . 45) (internal-border-width . 25)))" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 84 (face font-lock-comment-face fontified t)) . 5699) (undo-tree-id8 . -84) (t 24636 25193 0 0)) nil (24636 25342 414137 0) 0 nil]) ((5699 . 5702) (t 24636 25158 0 0)) nil (24636 25193 458386 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 5699) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5699) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5699) (t 24636 25117 0 0)) nil (24636 25158 825943 0) 0 nil]) ((5699 . 5702) (t 24636 22946 0 0)) nil (24636 25117 451219 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 5866) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5866) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5866)) nil (24636 22946 521129 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 5782) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5782) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5782)) nil (24636 22946 521136 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 5699) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5699) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 5699) (t 24636 22570 0 0)) nil (24636 22946 521140 0) 0 nil]) ((nil rear-nonsticky nil 5379 . 5380) (nil fontified nil 5370 . 5380) (5370 . 5380)) nil (24636 22570 168843 0) 0 nil]) ((#(";" 0 1 (face font-lock-comment-face fontified t)) . -5370) (undo-tree-id0 . -1) 5371) nil (24636 22570 168872 0) 0 nil]) ((5368 . 5371)) nil (24636 22570 168876 0) 0 nil]) ((5367 . 5368) (t 24636 20761 0 0)) nil (24636 22570 168878 0) 0 nil]) ((21698 . 21699)) nil (24636 20760 942176 0) 0 nil]) ((#("8" 0 1 (fontified t)) . -21698) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 21699 (t 24636 20635 0 0)) nil (24636 20760 942205 0) 0 nil]) ((5920 . 5921)) nil (24636 20634 955474 0) 0 nil]) ((5685 . 5686)) nil (24636 20634 955479 0) 0 nil]) ((5770 . 5771)) nil (24636 20634 955482 0) 0 nil]) ((5856 . 5857)) nil (24636 20634 955483 0) 0 nil]) ((5856 . 5858)) nil (24636 20634 955485 0) 0 nil]) ((5770 . 5772)) nil (24636 20634 955486 0) 0 nil]) ((5685 . 5687) (t 24636 17579 0 0)) nil (24636 20634 955488 0) 0 nil]) ((21626 . 21630)) nil (24636 17579 265401 0) 0 nil]) ((#("g" 0 1 (fontified t)) . 21626)) nil (24636 17579 265407 0) 0 nil]) ((#("o" 0 1 (fontified t)) . 21626)) nil (24636 17579 265410 0) 0 nil]) ((#("r" 0 1 (fontified t)) . 21626)) nil (24636 17579 265412 0) 0 nil]) ((#("p" 0 1 (fontified t)) . 21626)) nil (24636 17579 265413 0) 0 nil]) ((nil rear-nonsticky nil 21614 . 21615) (#("
" 0 1 (fontified nil)) . -21656) (21612 . 21657) 21569 (t 24636 17419 0 0)) nil (24636 17579 265416 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 21726) (undo-tree-id229 . 1) (#(" " 0 1 (fontified t)) . 21726) (undo-tree-id230 . 1) (#("
" 0 1 (fontified t)) . 21726) (undo-tree-id231 . 1)) nil (24636 17418 996511 0) 0 nil]) ((21683 . 21685)) nil (24636 17418 996516 0) 0 nil]) ((21647 . 21649)) nil (24636 17418 996519 0) 0 nil]) ((21613 . 21615)) nil (24636 17418 996520 0) 0 nil]) ((nil rear-nonsticky nil 21719 . 21720) (nil fontified nil 21719 . 21720) (nil fontified nil 21718 . 21719) (nil fontified nil 21709 . 21718) (nil fontified nil 21687 . 21709) (nil fontified nil 21683 . 21687) (nil fontified nil 21682 . 21683) (nil fontified nil 21679 . 21682) (nil fontified nil 21678 . 21679) (nil fontified nil 21677 . 21678) (nil fontified nil 21653 . 21677) (nil fontified nil 21649 . 21653) (nil fontified nil 21648 . 21649) (nil fontified nil 21645 . 21648) (nil fontified nil 21644 . 21645) (nil fontified nil 21643 . 21644) (nil fontified nil 21618 . 21643) (nil fontified nil 21614 . 21618) (nil fontified nil 21613 . 21614) (21613 . 21720)) nil (24636 17418 996527 0) 0 nil]) ((#("(setq olivetti-body-width 0.98)
;; (setq olivetti-body-width 100)
;; (setq olivetti-minimum-body-width 80)
" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 30 (fontified t) 30 31 (fontified t) 31 32 (rear-nonsticky t fontified t) 32 35 (fontified t face font-lock-comment-delimiter-face) 35 36 (fontified t face font-lock-comment-face) 36 40 (fontified t face font-lock-comment-face) 40 64 (fontified t face font-lock-comment-face) 64 65 (fontified t face font-lock-comment-face) 65 66 (fontified t face font-lock-comment-face) 66 69 (fontified t face font-lock-comment-delimiter-face) 69 70 (fontified t face font-lock-comment-face) 70 74 (fontified t face font-lock-comment-face) 74 96 (fontified t face font-lock-comment-face) 96 105 (fontified t face font-lock-comment-face) 105 106 (fontified t face font-lock-comment-face) 106 107 (fontified t face font-lock-comment-face)) . 21619) (undo-tree-id232 . -26) (undo-tree-id233 . 107) (undo-tree-id234 . -103) (undo-tree-id235 . -107) (undo-tree-id236 . -26) (undo-tree-id237 . -26) (undo-tree-id238 . -26) (undo-tree-id239 . -107) (undo-tree-id240 . -66) (undo-tree-id241 . -66) (undo-tree-id242 . -32) (undo-tree-id243 . -32) (undo-tree-id244 . -107) (undo-tree-id245 . -107) (undo-tree-id246 . -107) (undo-tree-id247 . -107) 21726) nil (24636 17418 996560 0) 0 nil]) ((21614 . 21616) (#("  " 0 2 (fontified nil)) . 21613) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (21612 . 21616)) nil (24636 17418 996568 0) 0 nil]) ((21641 . 21645)) nil (24636 17418 996570 0) 0 nil]) ((#("3" 0 1 (fontified t)) . -21641) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("0" 0 1 (fontified t)) . -21642) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#("0" 0 1 (fontified t)) . -21643) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 21644 (t 24636 17373 0 0)) nil (24636 17418 996583 0) 0 nil]) ((21641 . 21644)) nil (24636 17373 323726 0) 0 nil]) ((#("9" 0 1 (fontified t)) . 21641) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#("." 0 1 (fontified t)) . 21641) (#("0" 0 1 (fontified t)) . 21641) (t 24636 17343 0 0)) nil (24636 17373 323750 0) 0 nil]) ((#("8" 0 1 (fontified t)) . 21644) (undo-tree-id225 . -1) (t 24636 17305 0 0)) nil (24636 17343 372293 0) 0 nil]) ((21552 . 21553)) nil (24636 17305 222133 0) 0 nil]) ((#("O" 0 1 (fontified t)) . 21552) (t 24636 17275 0 0)) nil (24636 17305 222140 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 21614) (undo-tree-id208 . 1) (undo-tree-id209 . 1) (#("
" 0 1 (fontified t)) . 21614) (undo-tree-id210 . 1)) nil (24636 17275 144031 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 21539) (undo-tree-id211 . -1) (undo-tree-id212 . 1) (undo-tree-id213 . 1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1)) nil (24636 17275 144048 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 21539) (undo-tree-id217 . -1) (undo-tree-id218 . 1) (undo-tree-id219 . -1)) nil (24636 17275 144057 0) 0 nil]) ((#("(add-hook 'prog-mode-hook 'olivetti-mode)1" 0 40 (fontified t) 40 41 (fontified t rear-nonsticky t) 41 42 (fontified t rear-nonsticky t) 42 43 (fontified t)) . 21539) (undo-tree-id220 . -41) (undo-tree-id221 . -41) (undo-tree-id222 . -41) (undo-tree-id223 . -41) (undo-tree-id224 . -43)) nil (24636 17275 144071 0) 0 nil]) ((21581 . 21582) (nil rear-nonsticky nil 21580 . 21581) (nil fontified nil 21580 . 21581) (21580 . 21581) (nil rear-nonsticky nil 21655 . 21656) (nil fontified nil 21582 . 21656) (21582 . 21656) (21581 . 21585) (21580 . 21581) (t 24636 17204 0 0) 21539) nil (24636 17275 144076 0) 0 nil]) ((nil rear-nonsticky nil 21579 . 21580) (nil fontified nil 21539 . 21580) (21539 . 21580)) nil (24636 17204 442440 0) 0 nil]) ((#("(olivetti-mode 1)" 0 1 (fontified t) 1 17 (fontified t)) . 21539) (undo-tree-id179 . -12) (undo-tree-id180 . -12) (undo-tree-id181 . 1) (undo-tree-id182 . -1) (undo-tree-id183 . -15) (undo-tree-id184 . -15) (undo-tree-id185 . -15) (undo-tree-id186 . -15) (undo-tree-id187 . -15) (undo-tree-id188 . -15) (t 24636 16953 0 0)) nil (24636 17204 442479 0) 0 nil]) ((21539 . 21557) (#("t" 0 1 (fontified nil rear-nonsticky nil)) . 21539) (nil rear-nonsticky t 21539 . 21540)) nil (24636 17204 442483 0) 0 nil]) ((nil rear-nonsticky nil 21539 . 21540) (nil fontified nil 21539 . 21540) (21539 . 21540) 21557 (#("(olivetti-mode 1)
" 0 1 (fontified t) 1 17 (fontified t) 17 18 (fontified t)) . 21539) (undo-tree-id189 . -18) (undo-tree-id190 . -18) (undo-tree-id191 . -12) (undo-tree-id192 . -12) (undo-tree-id193 . 2) (undo-tree-id194 . -1) (undo-tree-id195 . -15) (undo-tree-id196 . -15) (undo-tree-id197 . -18) (undo-tree-id198 . -18) (undo-tree-id199 . -15) (undo-tree-id200 . -15) (undo-tree-id201 . -15) (undo-tree-id202 . -15) (undo-tree-id203 . -12) (undo-tree-id204 . -18) (undo-tree-id205 . -12) (undo-tree-id206 . -12) (undo-tree-id207 . -18) 21557 (t 24636 16953 0 0)) nil (24636 17204 442524 0) 0 nil]) ((21554 . 21555)) nil (24636 16953 377885 0) 0 nil]) ((#("t" 0 1 (fontified t)) . 21554)) nil (24636 16953 377891 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 21540)) nil (24636 16953 377895 0) 0 nil]) ((#("q" 0 1 (fontified t)) . 21540)) nil (24636 16953 377897 0) 0 nil]) ((#("t" 0 1 (fontified t)) . 21540)) nil (24636 16953 377899 0) 0 nil]) ((#("e" 0 1 (fontified t)) . 21540)) nil (24636 16953 377901 0) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-keyword-face)) . 21540) (t 24636 16889 0 0)) nil (24636 16953 377903 0) 0 nil]) ((21591 . 21592) (#("7" 0 1 (fontified t)) . 21591) (t 24636 16791 0 0)) nil (24636 16889 194057 0) 0 nil]) ((21591 . 21592) (#("9" 0 1 (fontified t)) . -21591) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 21592 (t 24636 16693 0 0)) nil (24636 16791 870067 0) 0 nil]) ((21540 . 21545) (t 24636 16651 0 0)) nil (24636 16693 627398 0) 0 nil]) ((21553 . 21556)) nil (24636 16651 863077 0) 0 nil]) ((21540 . 21553) (#("oli" 0 3 (fontified t)) . -21540) (undo-tree-id167 . -3) (undo-tree-id168 . 3) (undo-tree-id169 . -3) 21543) nil (24636 16651 863102 0) 0 nil]) ((21542 . 21543)) nil (24636 16651 863105 0) 0 nil]) ((#("i" 0 1 (fontified t)) . -21542) (undo-tree-id170 . -1) (#("m" 0 1 (fontified t)) . -21543) (undo-tree-id171 . -1) 21544) nil (24636 16651 863112 0) 0 nil]) ((21543 . 21544)) nil (24636 16651 863114 0) 0 nil]) ((21542 . 21543)) nil (24636 16651 863116 0) 0 nil]) ((#("i" 0 1 (fontified t)) . -21542) (undo-tree-id172 . -1) (#("-" 0 1 (fontified t)) . -21543) (undo-tree-id173 . -1) 21544) nil (24636 16651 863122 0) 0 nil]) ((21539 . 21544)) nil (24636 16651 863125 0) 0 nil]) ((21539 . 21540) 21568) nil (24636 16651 863127 0) 0 nil]) ((21567 . 21569) (#("5" 0 1 (fontified t)) . -21567) (undo-tree-id174 . -1) 21568 (#(" " 0 1 (fontified t)) . 21539) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21539) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21539) (#("x" 0 1 (fontified t)) . -21539) (undo-tree-id175 . -1) (#("x" 0 1 (fontified t)) . -21540) (undo-tree-id176 . -1) 21541 (21539 . 21541) (21573 . 21576) (t 24636 16512 0 0)) nil (24636 16651 863138 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 21573) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21573) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21573) (21539 . 21542) (t 24636 16430 0 0)) nil (24636 16512 774717 0) 0 nil]) (21567) nil (24636 16512 774724 0) 0 nil]) ((#("9" 0 1 (fontified t)) . 21567)) nil (24636 16430 615099 0) 0 nil]) ((21571 . 21574) (t 24636 16313 0 0)) nil (24636 16430 615106 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 21571)) nil (24636 16313 453627 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21571)) nil (24636 16313 453633 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21571)) nil (24636 16313 453635 0) 0 nil]) ((#("(setq olivetti-maximum-body-width 80)
" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t)) . 21646) (undo-tree-id158 . -37) (undo-tree-id159 . -38) (undo-tree-id160 . -37) (undo-tree-id161 . 16) (undo-tree-id162 . -21) (undo-tree-id163 . -21) (undo-tree-id164 . -21) (undo-tree-id165 . -21) (undo-tree-id166 . -21) 21667 (t 24636 16267 0 0)) nil (24636 16313 453667 0) 0 nil]) ((21661 . 21668) (#("minimum" 0 7 (fontified t)) . 21661) (undo-tree-id149 . -1) 21662) nil (24636 16267 877457 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 21646)) nil (24636 16267 877462 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21646)) nil (24636 16267 877465 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21646)) nil (24636 16267 877466 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 21688) (undo-tree-id150 . -1)) nil (24636 16267 877471 0) 0 nil]) ((21688 . 21689) (21687 . 21688) 21687) nil (24636 16267 877474 0) 0 nil]) ((21686 . 21687) 21646) nil (24636 16267 877476 0) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 21646) (undo-tree-id151 . -1) (undo-tree-id152 . -1)) nil (24636 16267 877482 0) 0 nil]) ((nil rear-nonsticky nil 21646 . 21647) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -21687) (21646 . 21688)) nil (24636 16267 877484 0) 0 nil]) ((#("(setdd
" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t)) . 21646) (undo-tree-id153 . -7) (undo-tree-id154 . 1) (undo-tree-id155 . -5) 21651) nil (24636 16267 877493 0) 0 nil]) ((21650 . 21652) (21647 . 21650) (#("se" 0 2 (fontified t)) . -21647) (undo-tree-id156 . -2) 21649 (21646 . 21649) (#("s" 0 1 (fontified t)) . -21646) (undo-tree-id157 . -1) 21647 (21646 . 21647) (t 24636 16225 0 0)) nil (24636 16267 877501 0) 0 nil]) ((21642 . 21643) (#("0" 0 1 (fontified t face font-lock-comment-face)) . 21642) (undo-tree-id145 . 1) (#("x" 0 1 (fontified t face font-lock-comment-face)) . -21642) (undo-tree-id146 . -1) (undo-tree-id147 . -1) 21643 (21642 . 21643) (#("1" 0 1 (fontified t face font-lock-comment-face)) . 21642) (undo-tree-id148 . -1)) nil (24636 16225 731294 0) 0 nil]) ((21605 . 21608) (t 24636 16145 0 0)) nil (24636 16225 731300 0) 0 nil]) (21633) nil (24636 16225 731302 0) 0 nil]) ((21567 . 21568) (#(" " 0 1 (fontified t)) . 21539) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21539) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21539)) nil (24636 16144 951043 0) 0 nil]) (21539) nil (24636 16144 951050 0) 0 nil]) ((21573 . 21576)) nil (24636 16144 951053 0) 0 nil]) ((21638 . 21641) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -21638) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -21639) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -21640) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("8" 0 1 (fontified t face font-lock-string-face)) . -21641) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -21642) (undo-tree-id144 . -1) 21643 (t 24636 15971 0 0)) nil (24636 16144 951086 0) 0 nil]) ((21642 . 21643) (21638 . 21639) (t 24636 15901 0 0)) nil (24636 15971 64892 0) 0 nil]) ((21640 . 21641) (#("9" 0 1 (fontified t)) . -21640) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 21641 (21638 . 21641) (#("30" 0 1 (fontified t) 1 2 (fontified t)) . 21638) (t 24636 15844 0 0)) nil (24636 15901 144672 0) 0 nil]) ((21638 . 21639) (#("8" 0 1 (fontified t)) . 21638)) nil (24636 15844 121185 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 21604)) nil (24636 15844 121192 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21604) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1)) nil (24636 15844 121215 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21604) (t 24636 15782 0 0)) nil (24636 15844 121219 0) 0 nil]) ((21604 . 21607)) nil (24636 15782 604148 0) 0 nil]) (21638) nil (24636 15782 604154 0) 0 nil]) ((21599 . 21602) (#("95" 0 1 (fontified t) 1 2 (fontified t)) . 21599)) nil (24636 15782 604157 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 21603)) nil (24636 15782 604159 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21603)) nil (24636 15782 604161 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21603)) nil (24636 15782 604163 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 21573)) nil (24636 15782 604165 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21573)) nil (24636 15782 604167 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 21573)) nil (24636 15782 604169 0) 0 nil]) ((21539 . 21542) (t 24636 15466 0 0)) nil (24636 15782 604171 0) 0 nil]) ((21539 . 21567) (#(";;" 0 2 (fontified t face font-lock-comment-delimiter-face)) . 21539) (undo-tree-id127 . -1)) nil (24636 15782 604187 0) 0 nil]) ((21539 . 21541) (#("(setq olivetti-body-width 0." 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 28 (fontified t)) . 21539) (undo-tree-id128 . -26) (undo-tree-id129 . -28) (undo-tree-id130 . -28) (t 24636 15466 0 0)) nil (24636 15782 604197 0) 0 nil]) (21567) nil (24636 15782 604199 0) 0 nil]) ((21567 . 21568) (#("8" 0 1 (fontified t)) . 21567) (t 24636 15391 0 0)) nil (24636 15466 93676 0) 0 nil]) ((21565 . 21568)) nil (24636 15391 362649 0) 0 nil]) ((#("5" 0 1 (fontified t)) . 21565)) nil (24636 15391 362655 0) 0 nil]) ((#("9" 0 1 (fontified t)) . 21565)) nil (24636 15391 362657 0) 0 nil]) ((apply -6 21569 21643 undo--wrap-and-run-primitive-undo 21569 21643 ((21602 . 21605) (21569 . 21572) 21637))) nil (24636 15391 362659 0) 0 nil]) ((nil rear-nonsticky nil 21568 . 21569) (#("
" 0 1 (fontified nil)) . -21598) (21568 . 21599) 21565) nil (24636 15391 362663 0) 0 nil] [nil ([nil ([nil nil ((1 . 21570) (#(";; since 2020
;;    ___  ____ ___  ____ ___________
;;   / _ \\/ __ `__ \\/ __ `/ ___/ ___/
;; _/  __/ / / / / / /_/ / /__(__  ) 
;;(_)___/_/ /_/ /_/\\__,_/\\___/____/  

;;==================
;; Initial Setting
;;==================


(setq ns-pop-up-frames nil)                                  ;; only one frame use when openning a file 2021-01-28

(if (display-graphic-p)
    (progn
      (tool-bar-mode -1)
      (menu-bar-mode -1)
      (scroll-bar-mode -1)
      ;; (global-hl-line-mode t)
    )
 )

;; Spell Check 2021-02-14
(when (display-graphic-p)
      (progn
        (flyspell-mode +1)
        (add-hook 'text-mode-hook 'turn-on-flyspell)
        (add-hook 'org-mode-hook 'turn-on-flyspell)
        (add-hook 'markdown-mode-hook 'turn-on-flyspell)
        (add-hook 'latex-mode-hook 'turn-on-flyspell)
        (add-hook 'LaTeX-mode-hook 'turn-on-flyspell)  ;; for AUCTeX
      )
)


;; Focus on `Buffer List` window when it is opened - 2021-02-21
;; https://www.reddit.com/r/emacs/comments/qjkwf/is_there_a_way_to_make_emacs_switch_to_the_buffer/
(defun buffer-list-switch ()
  \"Switch to buffer list and activate the window\"
  (interactive)
  (list-buffers)
  (select-window (get-buffer-window \"*Buffer List*\" 0))
)

(global-set-key (kbd \"C-x C-b\") 'buffer-list-switch)

(indent-guide-global-mode) ;; indent-guide package 2021-02-24

;; Recent opened file history 2020-12-31
(require 'recentf)
(recentf-mode 1)
(global-set-key \"\\C-xf\" 'recentf-open-files)
(setq recentf-auto-cleanup 'never)

(setq backup-directory-alist `((\".\" . \"~/.saves/\")))         ;; Backup files relocated 2020-10-09
(setq inhibit-startup-screen t)                              ;; No welcome startup screen
(setq initial-scratch-message \"\")                            ;; No scratch message 2020-10-10
(add-to-list 'default-frame-alist '(fullscreen . maximized)) ;; Maximize GUI window

;; Interupted Working Process 2021-02-15
;; (setq auto-save-visited-mode t)                              ;; Auto Save   
;; (setq auto-save-visited-interval 1)                          ;; Auto Save - Interval
;; (setq auto-save-default t)
;; (setq auto-save-visited-file-name t)
;; (global-auto-revert-mode t)                                  ;; Auto Refresh

(global-visual-line-mode 1)                                  ;; Visual Line Mode On
;; (global-display-line-numbers-mode)                           ;; Display Line Numbers On

;; Bettery mode 2021-01-03
(display-battery-mode 1)

(setq ispell-program-name \"/opt/local/bin/ispell\")

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(org-noter org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 ;; -------------------------------------------------------------------------------------------------  
 ;; Elegant Modeline :: white
 ;; https://www.reddit.com/r/emacs/comments/fc8hc2/binder_modes_for_structuring_a_multifile_writing/
 ;; https://github.com/rnkn/dotfiles/blob/74dff2b1eadf3134c01e376cf8f42b24a0d1cc05/emacs/settings.el#L32
 ;; https://github.com/rnkn/dotfiles/blob/74dff2b1eadf3134c01e376cf8f42b24a0d1cc05/emacs/settings.el#L416-L417
 '(default-frame-alist '((width . 80) (height . 45) (internal-border-width . 25)))
 '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))
;; ------------------------------------------------------------------------------------------------- 
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))


;;==========
;; WINDOW
;;==========

;; `buffer-move` package 2020-12-22
;; (global-set-key (kbd \"<C-S-up>\")     'buf-move-up)
;; (global-set-key (kbd \"<C-S-down>\")   'buf-move-down)
;; (global-set-key (kbd \"<C-S-left>\")   'buf-move-left)
;; (global-set-key (kbd \"<C-S-right>\")  'buf-move-right)

;; resizing windows (SHIFT+CONTRL) - conflicted to org-mode 2021-02-28
;; (global-set-key (kbd \"S-C-<left>\")  'shrink-window-horizontally)
;; (global-set-key (kbd \"S-C-<right>\") 'enlarge-window-horizontally)
;; (global-set-key (kbd \"S-C-<down>\")  'shrink-window)
;; (global-set-key (kbd \"S-C-<up>\")    'enlarge-window)

;; Remove SHIFT to avoid confilct with Org-Mode
(global-set-key (kbd \"M-C-<left>\")  'shrink-window-horizontally)
(global-set-key (kbd \"M-C-<right>\") 'enlarge-window-horizontally)
(global-set-key (kbd \"M-C-<down>\")  'shrink-window)
(global-set-key (kbd \"M-C-<up>\")    'enlarge-window)


;; ace-window 2021-02-23
(global-set-key (kbd \"M-o\") 'ace-window)


;; display date in modeline 2020-12-07
;; (setq display-time-day-and-date t)
;; (display-time)
(setq display-time-format \"[%Y-%m-%d %H:%M]\")
(display-time-mode 1)


;; display file size in modeline 2021-01-05
(size-indication-mode t)

;; pdflatex -> path \"/Library/Tex/texbin\" 2020-12-07
(setq latex-run-command \"pdflatex\")


;;===============================================================
;; PACKAGES
;;===============================================================

;; MELPA 2020-12-08
(require 'package)
(add-to-list 'package-archives '(\"melpa\" . \"https://melpa.org/packages/\") t)
;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`
;; and `package-pinned-packages`. Most users will not need or want to do this.
;;(add-to-list 'package-archives '(\"melpa-stable\" . \"https://stable.melpa.org/packages/\") t)
;; -- Unnecessary call -- see Line #6 in this file
(package-initialize)
;; (package-refresh-contents)
;; (package-install 'use-package)

;; (use-package elpy
;;   :ensure t
;;   :init
;;   (elpy-enable))

;; ignore byte-compile warnings
;; 2021-01-16
;; http://tsengf.blogspot.com/2011/06/disable-byte-compile-warning-in-emacs.html
(setq byte-compile-warnings '(not nresolved
                                  free-vars
                                  callargs
                                  redefine
                                  obsolete
                                  noruntime
                                  cl-functions
                                  interactive-only
                                  ))


;; company mode 2021-01-24
;; I think it's a kind of auto-completion
(add-hook 'after-init-hook 'global-company-mode)


;; auto complete 2021-01-16
;; https://www.youtube.com/watch?v=HTUE03LnaXA
(require 'auto-complete)
(require 'auto-complete-config)
(ac-config-default)


;; yasnippet 2021-01-16
;; https://www.youtube.com/watch?v=HTUE03LnaXA
;; (require 'yasnippet)
;; (yas-global-mode 1)


;; PLUG-IN: exec-path-from-shell 2020-12-08
(when (memq window-system '(mac ns x))
  (exec-path-from-shell-initialize))


;; which-keys
(which-key-mode)                        ;; which-key package 2021-01-28


;; PLUG-IN: deft -> do not use: Korean issue, change filename forcely 2020-12-08
;(require 'deft)
;(setq deft-extensions '(\"txt\" \"tex\" \"org\" \"md\"))
;(setq deft-directory \"~/Documents/nvALT/\")
;;(setq deft-directory \"~/Documents/test/\")
;(setq deft-recursive t)


;;------------------------
;; Enable Evil 2020-12-30
;;------------------------
;; (require 'evil)
(evil-mode 1)
(setq-default evil-default-state 'emacs)
;; Change color of which-func when entering and leaving Evil visual state
;;  - Resolves the \"white on white\" issue :: 2021-01-17
;; https://www.reddit.com/r/emacs/comments/6tdqt0/how_can_i_change_the_background_color_when/
;; https://evil.readthedocs.io/en/latest/hooks.html
(setq original-background (face-attribute 'default :background))
(setq original-foreground (face-attribute 'default :foreground))

;; (add-hook 'evil-normal-state-entry-hook (lambda () (set-background-color \"gray\")))
;; (add-hook 'evil-normal-state-entry-hook (lambda () (face-remap-add-relative 'default :background \"lightgray\")))
;; (add-hook 'evil-normal-state-entry-hook (lambda () (set-foreground-color \"black\")))
(add-hook 'evil-normal-state-entry-hook (lambda () (set-foreground-color original-foreground)))


(if (display-graphic-p)
    (progn
    ;; if graphic (GUI)
      (add-hook 'evil-normal-state-entry-hook (lambda () (face-remap-add-relative 'default :background \"lightgray\")))
      (add-hook 'evil-normal-state-entry-hook (lambda () (hl-line-mode 1) (face-remap-add-relative 'hl-line nil :background \"gray\")))
      ;; (add-hook 'evil-normal-state-entry-hook (lambda () (set-background-color \"lightgray\")))
      (add-hook 'evil-operator-state-entry-hook (lambda () (face-remap-add-relative 'default :background \"lightgray\")))
      (add-hook 'evil-normal-state-exit-hook (lambda () (hl-line-mode 0)))
      (add-hook 'evil-normal-state-exit-hook (lambda () (face-remap-add-relative 'default :background original-background)))
      ;; (add-hook 'evil-normal-state-entry-hook (lambda () (hl-line-mode 1) (set-face-attribute hl-line-face nil :background \"lightgray\")))
      ;; (add-hook 'evil-normal-state-exit-hook (lambda () (set-background-color original-background)))
      ;; (add-hook 'evil-normal-state-exit-hook (lambda () (set-foreground-color original-foreground)))

      ;; (add-hook 'evil-operator-state-entry-hook (lambda () (set-background-color \"gray\")))

      (add-hook 'evil-insert-state-entry-hook (lambda () (face-remap-add-relative 'default :background \"lightyellow\")))
      ;; (add-hook 'evil-insert-state-entry-hook (lambda () (set-background-color \"lightyellow\")))
      ;; (add-hook 'evil-insert-state-entry-hook (lambda () (set-foreground-color \"black\")))
      ;; (add-hook 'evil-insert-state-entry-hook (lambda () (hl-line-mode 1) (set-face-attribute hl-line-face nil :background \"lightyellow\")))
      ;; (add-hook 'evil-insert-state-exit-hook (lambda () (set-background-color original-background)))
      ;; (add-hook 'evil-insert-state-exit-hook (lambda () (set-face-attribute hl-line-face nil :weight 'normal)))
      ;; (add-hook 'evil-insert-state-exit-hook (lambda () (set-foreground-color original-foreground)))

      (add-hook 'evil-visual-state-entry-hook (lambda () (face-remap-add-relative 'default :background \"lightgray\")))
      ;; (add-hook 'evil-visual-state-entry-hook (lambda () (set-background-color \"darkgray\")))
      ;; (add-hook 'evil-visual-state-exit-hook (lambda () (set-background-color original-background)))

      ;; (add-hook 'evil-replace-state-entry-hook (lambda () (set-background-color \"lightyellow\")))
      ;; (add-hook 'evil-replace-state-entry-hook (lambda () (set-foreground-color \"black\")))
      ;; (add-hook 'evil-replace-state-exit-hook (lambda () (set-background-color original-background)))
      ;; (add-hook 'evil-replace-state-exit-hook (lambda () (set-foreground-color original-foreground)))
      (add-hook 'evil-emacs-state-entry-hook (lambda () (face-remap-add-relative 'default :background original-background)))
      (add-hook 'evil-emacs-state-entry-hook (lambda () (face-remap-add-relative 'default :foreground original-foreground)))
    )
    ;; else (optional - terminal mode)
    (add-hook 'evil-normal-state-entry-hook (lambda () (hl-line-mode 1) (set-face-attribute hl-line-face nil :underline t :background original-background)))
    (add-hook 'evil-insert-state-entry-hook (lambda () (hl-line-mode 1) (set-face-attribute hl-line-face nil :underline t :overline 't :background \"black\")))
    (add-hook 'evil-emacs-state-entry-hook (lambda () (set-background-color original-background)))
    (add-hook 'evil-emacs-state-entry-hook (lambda () (set-foreground-color original-foreground)))
    (add-hook 'evil-emacs-state-entry-hook (lambda () (hl-line-mode 0)))
)


;; [For Reference] GUI detection ~ more readable :)
;;
;; (when (display-graphic-p)
;;     (your)
;;     (code))
;;
;; https://stackoverflow.com/questions/5795451/how-to-detect-that-emacs-is-in-terminal-mode
;; 2021-02-10


;; (defun highlight-selected-window ()
;;   \"Highlight selected window with a different background color.\"
;;   (walk-windows (lambda (w)
;;                   (unless (eq w (selected-window))
;;                     (with-current-buffer (window-buffer w)
;;                       (buffer-face-set '(:background \"white\"))))))
;;   (buffer-face-set 'default))
;; (add-hook 'buffer-list-update-hook 'highlight-selected-window)


;; https://emacs.stackexchange.com/questions/34251/change-modeline-background-when-in-normal-evil-mode
;;
;; (setq original-modeline-background (face-attribute 'mode-line :background))
;; (setq normal-state-background \"red\")
;; (add-hook 'evil-normal-state-entry-hook (lambda () (set-face-attribute 'mode-line nil :background normal-state-background)))
;; (add-hook 'evil-normal-state-exit-hook  (lambda () (set-face-attribute 'mode-line nil :background original-modeline-background)))


;; evil cursor in modes 2021-02-06
;; https://github.com/hlissner/doom-emacs/issues/1848
;; http://fnwiya.hatenablog.com/entry/2016/01/12/213149 
;; (setq evil-normal-state-cursor '(box \"black\")
;;       evil-insert-state-cursor '(bar \"black\")
;;       evil-visual-state-cursor '(hollow \"black\")
;;       evil-emacs-state-cursor '(box \"black\"))

;; https://emacs.stackexchange.com/questions/30582/how-do-i-change-the-mode-indicators-for-evil-mode-in-the-spaceline-mode-line-pac
(setq evil-normal-state-tag \"NORMAL\")
(setq evil-insert-state-tag \"INSERT\")
(setq evil-visual-state-tag \"VISUAL\")
(setq evil-replace-state-tag \"REPLACE\")

;; Color the evil tag - colors taken from spaceline
;; https://github.com/Malabarba/smart-mode-line/issues/195
(setq evil-normal-state-tag   (propertize \" NORMAL \" 'face '((:background \"black\"          :foreground \"white\")))
      evil-emacs-state-tag    (propertize \" <E> \" 'face '((:background original-background :foreground foreground-color)))
      evil-insert-state-tag   (propertize \" INSERT \" 'face '((:background \"lightyellow\"    :foreground \"black\")))
      evil-replace-state-tag  (propertize \" REPLACE \" 'face '((:background \"chocolate\"     :foreground \"black\")))
      evil-motion-state-tag   (propertize \" <Motion> \" 'face '((:background \"plum3\"             :foreground \"black\")))
      evil-visual-state-tag   (propertize \" VISUAL \" 'face '((:background \"darkgray\"       :foreground \"black\")))
      evil-operator-state-tag (propertize \" <Operator> \" 'face '((:background \"sandy brown\"       :foreground \"black\"))))

;; evil key binding
(define-key evil-normal-state-map (kbd \"SPC\") 'evil-ex)
(define-key evil-normal-state-map (kbd \"j\") 'evil-next-visual-line)
(define-key evil-normal-state-map (kbd \"k\") 'evil-previous-visual-line)
(define-key evil-normal-state-map (kbd \"C-u\") 'evil-scroll-up)
(define-key evil-visual-state-map (kbd \"C-u\") 'evil-scroll-up)

;; forward-sentence is based on the sentence-end variable
;; https://stackoverflow.com/questions/20257022/evil-emacs-mode-sentence-motions-and-other-questions
(setq sentence-end \"[\\\\.\\\\?\\\\!] +\") ;; . or ? or ! followed by spaces.
(define-key evil-normal-state-map \")\" 'forward-sentence)


;; evil undo 2021-02-06
;; https://emacs.stackexchange.com/questions/3358/how-can-i-get-undo-behavior-in-evil-similar-to-vims
(setq evil-want-fine-undo 't)
(setq evil-want-fine-undo 'fine)
;; (setq evil-undo-system 'undo-tree) ;; not working tested 2021-02-07

;; evil-surround package 2021-01-29
(global-evil-surround-mode 1)

;; evil-surround add pairs 2021-02-08
;; https://github.com/emacs-evil/evil-surround
;; this macro was copied from here: https://stackoverflow.com/a/22418983/4921402
(defmacro define-and-bind-quoted-text-object (name key start-regex end-regex)
  (let ((inner-name (make-symbol (concat \"evil-inner-\" name)))
        (outer-name (make-symbol (concat \"evil-a-\" name))))
    `(progn
       (evil-define-text-object ,inner-name (count &optional beg end type)
         (evil-select-paren ,start-regex ,end-regex beg end type count nil))
       (evil-define-text-object ,outer-name (count &optional beg end type)
         (evil-select-paren ,start-regex ,end-regex beg end type count t))
       (define-key evil-inner-text-objects-map ,key #',inner-name)
       (define-key evil-outer-text-objects-map ,key #',outer-name))))

(define-and-bind-quoted-text-object \"pipe\" \"|\" \"|\" \"|\")
(define-and-bind-quoted-text-object \"slash\" \"/\" \"/\" \"/\")
(define-and-bind-quoted-text-object \"underscore\" \"_\" \"_\" \"_\")
(define-and-bind-quoted-text-object \"code\" \"~\" \"~\" \"~\")
(define-and-bind-quoted-text-object \"verbatim\" \"=\" \"=\" \"=\")
(define-and-bind-quoted-text-object \"strike_through\" \"+\" \"+\" \"+\")
(define-and-bind-quoted-text-object \"asterisk\" \"*\" \"*\" \"*\")
(define-and-bind-quoted-text-object \"dollar\" \"$\" \"\\\\$\" \"\\\\$\") ;; sometimes your have to escape the regex



;;----------------------------------------------------------------
;; ACE JUMP MODE
;;----------------------------------------------------------------
;; ace jump mode major function
;; 
;; (add-to-list 'load-path \"/Users/osickwon/.emacs.d/ace-jump-mode/\")
;; (autoload
;;   'ace-jump-mode
;;   \"ace-jump-mode\"
;;   \"Emacs quick move minor mode\"
;;   t)

;; you can select the key you prefer to
;; (define-key global-map (kbd \"C-c SPC\") 'ace-jump-mode)
;; (define-key global-map (kbd \"C-c SPC\") 'ace-jump-char-mode)
;;
;; conflict org-mode: C-c SPC => org-table-blank-field

;; `C-u C-c SPC` was not worked properly, so Used `C-c C-c` 2021-01-17
;; (define-key global-map (kbd \"C-c C-c SPC\") 'ace-jump-char-mode)


;; When org-mode starts it (org-mode-map) overrides the ace-jump-mode.
;; (https://github.com/winterTTr/ace-jump-mode/issues/47)
;; (add-hook 'org-mode-hook
;;           (lambda ()
;;             ;; (local-set-key (kbd \"\\C-c SPC\") 'ace-jump-mode)))
;;             (local-set-key (kbd \"\\C-c SPC\") 'ace-jump-char-mode)))
 
;; 
;; enable a more powerful jump back function from ace jump mode
;;
;; (autoload
;;   'ace-jump-mode-pop-mark
;;   \"ace-jump-mode\"
;;   \"Ace jump back:-)\"
;;   t)
;; (eval-after-load \"ace-jump-mode\"
;;   '(ace-jump-mode-enable-mark-sync))
;; (define-key global-map (kbd \"C-x SPC\") 'ace-jump-mode-pop-mark)

;;If you use viper mode :
;(define-key viper-vi-global-user-map (kbd \"SPC\") 'ace-jump-mode)
;;If you use evil
;(define-key evil-normal-state-map (kbd \"SPC\") 'ace-jump-mode)
;; ----------------------------------------------------------------

;; projectile package 2021-01-29
;; -----------------------------
(projectile-mode +1)
(define-key projectile-mode-map (kbd \"s-p\") 'projectile-command-map)
(define-key projectile-mode-map (kbd \"C-c p\") 'projectile-command-map)

;; use 'helm-projectile-ag' inseted of C-c p s s, which stands for ag serching in projectile
;; once install package of 'helm-projectile', you can also use 'helm-projectile-ag'
;; or install 'helm-ag' package to use same function
;; however, required intall '(sudo) port install the_silver_searcher' first (the_silver_searcher = ag)


;; Olivetti 2021-02-11
;; -------------------
;; to remove boundry -> '(fringe-mode 0 nil (fringe)) in `(custom-set-variables` lines in front of this file. 
(setq olivetti-body-width 0.5)
" 0 3 (fontified nil face font-lock-comment-delimiter-face) 3 14 (fontified nil face font-lock-comment-face) 14 20 (fontified nil face font-lock-comment-delimiter-face) 20 52 (fontified nil face font-lock-comment-face) 52 57 (fontified nil face font-lock-comment-delimiter-face) 57 90 (fontified nil face font-lock-comment-face) 90 93 (fontified nil face font-lock-comment-delimiter-face) 93 128 (fontified nil face font-lock-comment-face) 128 130 (fontified nil face font-lock-comment-delimiter-face) 130 166 (fontified nil face font-lock-comment-face) 166 167 (fontified nil) 167 169 (fontified nil face font-lock-comment-delimiter-face) 169 188 (fontified nil face font-lock-comment-face) 188 191 (fontified nil face font-lock-comment-delimiter-face) 191 207 (fontified nil face font-lock-comment-face) 207 209 (fontified nil face font-lock-comment-delimiter-face) 209 228 (fontified nil face font-lock-comment-face) 228 231 (fontified nil) 231 235 (fontified nil face font-lock-keyword-face) 235 291 (fontified nil) 291 294 (fontified nil face font-lock-comment-delimiter-face) 294 345 (fontified nil face font-lock-comment-face) 345 347 (fontified nil) 347 349 (fontified nil face font-lock-keyword-face) 349 375 (fontified nil) 375 380 (fontified nil face font-lock-keyword-face) 380 464 (fontified nil) 464 467 (fontified nil face font-lock-comment-delimiter-face) 467 491 (fontified nil face font-lock-comment-face) 491 500 (fontified nil) 500 501 (fontified nil) 501 504 (fontified nil face font-lock-comment-delimiter-face) 504 527 (fontified nil face font-lock-comment-face) 527 528 (fontified nil) 528 532 (fontified nil face font-lock-keyword-face) 532 560 (fontified nil) 560 565 (fontified nil face font-lock-keyword-face) 565 864 (fontified nil) 864 867 (fontified nil face font-lock-comment-delimiter-face) 867 878 (fontified nil face font-lock-comment-face) 878 890 (fontified nil) 890 893 (fontified nil face font-lock-comment-delimiter-face) 893 954 (fontified nil face font-lock-comment-face) 954 957 (fontified nil face font-lock-comment-delimiter-face) 957 1000 (fontified nil face font-lock-comment-face) 1000 1054 (fontified nil face font-lock-comment-face) 1054 1055 (fontified nil) 1055 1060 (fontified nil face font-lock-keyword-face) 1060 1061 (fontified nil) 1061 1079 (fontified nil face font-lock-function-name-face) 1079 1085 (fontified nil) 1085 1132 (fontified nil face font-lock-doc-face) 1132 1136 (fontified nil) 1136 1147 (fontified nil face font-lock-keyword-face) 1147 1202 (fontified nil) 1202 1217 (fontified nil face font-lock-string-face) 1217 1246 (fontified nil) 1246 1255 (fontified nil face font-lock-string-face) 1255 1306 (fontified nil) 1306 1309 (fontified nil face font-lock-comment-delimiter-face) 1309 1341 (fontified nil face font-lock-comment-face) 1341 1342 (fontified nil) 1342 1345 (fontified nil face font-lock-comment-delimiter-face) 1345 1383 (fontified nil face font-lock-comment-face) 1383 1384 (fontified nil) 1384 1391 (fontified nil face font-lock-keyword-face) 1391 1393 (fontified nil) 1393 1400 (fontified nil face font-lock-constant-face) 1400 1435 (fontified nil) 1435 1442 (fontified nil face font-lock-string-face) 1442 1465 (fontified nil) 1465 1469 (fontified nil face font-lock-keyword-face) 1469 1501 (fontified nil) 1501 1505 (fontified nil face font-lock-keyword-face) 1505 1532 (fontified nil) 1532 1535 (fontified nil face font-lock-string-face) 1535 1538 (fontified nil) 1538 1549 (fontified nil face font-lock-string-face) 1549 1554 (fontified nil) 1554 1561 (fontified nil) 1561 1564 (fontified nil face font-lock-comment-delimiter-face) 1564 1598 (fontified nil face font-lock-comment-face) 1598 2530 (fontified nil) 2530 2531 (fontified nil) 2531 2534 (fontified nil face font-lock-comment-delimiter-face) 2534 2576 (fontified nil face font-lock-comment-face) 2576 2577 (fontified nil) 2577 2580 (fontified nil face font-lock-comment-delimiter-face) 2580 2641 (fontified nil face font-lock-comment-face) 2641 2642 (fontified nil) 2642 2645 (fontified nil face font-lock-comment-delimiter-face) 2645 2699 (fontified nil face font-lock-comment-face) 2699 2700 (fontified nil) 2700 2703 (fontified nil face font-lock-comment-delimiter-face) 2703 2753 (fontified nil face font-lock-comment-face) 2753 2784 (fontified nil) 2784 2793 (fontified nil face font-lock-string-face) 2793 2794 (fontified nil) 2794 2803 (fontified nil face font-lock-string-face) 2803 2804 (fontified nil) 2804 2813 (fontified nil face font-lock-string-face) 2813 2814 (fontified nil) 2814 2823 (fontified nil face font-lock-string-face) 2823 2824 (fontified nil) 2824 2833 (fontified nil face font-lock-string-face) 2833 2834 (fontified nil) 2834 2843 (fontified nil face font-lock-string-face) 2843 2844 (fontified nil) 2844 2853 (fontified nil face font-lock-string-face) 2853 2854 (fontified nil) 2854 2863 (fontified nil face font-lock-string-face) 2863 3009 (fontified nil) 3009 3014 (fontified nil) 3014 3055 (fontified nil face font-lock-string-face) 3055 3056 (fontified nil) 3056 3095 (fontified nil face font-lock-string-face) 3095 3096 (fontified nil) 3096 3133 (fontified nil face font-lock-string-face) 3133 3134 (fontified nil) 3134 3175 (fontified nil face font-lock-string-face) 3175 3176 (fontified nil) 3176 3209 (fontified nil face font-lock-string-face) 3209 3344 (fontified nil) 3344 3352 (fontified nil face font-lock-string-face) 3352 3353 (fontified nil) 3353 3371 (fontified nil face font-lock-string-face) 3371 3509 (fontified nil) 3509 3537 (fontified nil) 3537 4037 (fontified nil) 4037 4435 (fontified nil) 4435 4455 (fontified nil) 4455 4458 (fontified nil face font-lock-comment-delimiter-face) 4458 4496 (fontified nil face font-lock-comment-face) 4496 4497 (fontified nil) 4497 4500 (fontified nil face font-lock-comment-delimiter-face) 4500 4561 (fontified nil face font-lock-comment-face) 4561 4562 (fontified nil) 4562 4565 (fontified nil face font-lock-comment-delimiter-face) 4565 4619 (fontified nil face font-lock-comment-face) 4619 4620 (fontified nil) 4620 4623 (fontified nil face font-lock-comment-delimiter-face) 4623 4673 (fontified nil face font-lock-comment-face) 4673 4689 (fontified nil) 4689 4697 (fontified nil face font-lock-builtin-face) 4697 4702 (fontified nil) 4702 4710 (fontified nil face font-lock-builtin-face) 4710 4715 (fontified nil) 4715 4729 (fontified nil face font-lock-builtin-face) 4729 4734 (fontified nil) 4734 4738 (fontified nil face font-lock-builtin-face) 4738 4743 (fontified nil) 4743 4758 (fontified nil face font-lock-builtin-face) 4758 4763 (fontified nil) 4763 4772 (fontified nil face font-lock-builtin-face) 4772 4777 (fontified nil) 4777 4787 (fontified nil face font-lock-builtin-face) 4787 4792 (fontified nil) 4792 4798 (fontified nil face font-lock-builtin-face) 4798 4806 (fontified nil) 4806 4813 (fontified nil face font-lock-builtin-face) 4813 4821 (fontified nil) 4821 4828 (fontified nil face font-lock-builtin-face) 4828 4833 (fontified nil) 4833 4839 (fontified nil face font-lock-builtin-face) 4839 4847 (fontified nil) 4847 4855 (fontified nil face font-lock-builtin-face) 4855 4856 (fontified nil) 4856 4861 (fontified nil face font-lock-string-face) 4861 4862 (fontified nil) 4862 4869 (fontified nil face font-lock-builtin-face) 4869 4870 (fontified nil) 4870 4877 (fontified nil face font-lock-string-face) 4877 4900 (fontified nil) 4900 4911 (fontified nil face font-lock-builtin-face) 4911 4912 (fontified nil) 4912 4921 (fontified nil face font-lock-string-face) 4921 4922 (fontified nil) 4922 4929 (fontified nil face font-lock-builtin-face) 4929 4935 (fontified nil) 4935 4936 (fontified nil) 4936 20575 (fontified nil) 20575 20576 (fontified nil) 20576 20578 (fontified nil face font-lock-comment-delimiter-face) 20578 20602 (fontified nil face font-lock-comment-face) 20602 20603 (fontified nil face font-lock-comment-delimiter-face) 20603 20668 (fontified nil face font-lock-comment-face) 20668 20670 (fontified nil face font-lock-comment-delimiter-face) 20670 20686 (fontified nil face font-lock-comment-face) 20686 20687 (fontified nil face font-lock-comment-delimiter-face) 20687 20749 (fontified nil face font-lock-comment-face) 20749 20752 (fontified nil face font-lock-comment-delimiter-face) 20752 20817 (fontified nil face font-lock-comment-face) 20817 20818 (fontified nil) 20818 20821 (fontified nil face font-lock-comment-delimiter-face) 20821 20851 (fontified nil face font-lock-comment-face) 20851 20854 (fontified nil face font-lock-comment-delimiter-face) 20854 20884 (fontified nil face font-lock-comment-face) 20884 20942 (fontified nil) 20942 20947 (fontified nil face font-lock-string-face) 20947 21011 (fontified nil) 21011 21018 (fontified nil face font-lock-string-face) 21018 21046 (fontified nil) 21046 21049 (fontified nil face font-lock-comment-delimiter-face) 21049 21075 (fontified nil face font-lock-comment-face) 21075 21139 (fontified nil face font-lock-comment-face) 21139 21142 (fontified nil face font-lock-comment-delimiter-face) 21142 21223 (fontified nil face font-lock-comment-face) 21223 21226 (fontified nil face font-lock-comment-delimiter-face) 21226 21276 (fontified nil face font-lock-comment-face) 21276 21279 (fontified nil face font-lock-comment-delimiter-face) 21279 21351 (fontified nil face font-lock-comment-face) 21351 21379 (fontified nil face font-lock-comment-face) 21379 21381 (fontified nil) 21381 21384 (fontified nil face font-lock-comment-delimiter-face) 21384 21404 (fontified nil face font-lock-comment-face) 21404 21407 (fontified nil face font-lock-comment-delimiter-face) 21407 21427 (fontified nil face font-lock-comment-face) 21427 21430 (fontified nil face font-lock-comment-delimiter-face) 21430 21538 (fontified nil face font-lock-comment-face) 21538 21539 (fontified nil) 21539 21543 (fontified nil face font-lock-keyword-face) 21543 21569 (fontified nil)) . 1) (t 24636 15120 0 0)) ((1 . 21570) (#(";; SINCE 2020
;;    ___  ____ ___  ____ ___________
;;   / _ \\/ __ `__ \\/ __ `/ ___/ ___/
;; _/  __/ / / / / / /_/ / /__(__  ) 
;;(_)___/_/ /_/ /_/\\__,_/\\___/____/  

;;==================
;; INITIAL SETTING
;;==================


(SETQ NS-POP-UP-FRAMES NIL)                                  ;; ONLY ONE FRAME USE WHEN OPENNING A FILE 2021-01-28

(IF (DISPLAY-GRAPHIC-P)
    (PROGN
      (TOOL-BAR-MODE -1)
      (MENU-BAR-MODE -1)
      (SCROLL-BAR-MODE -1)
      ;; (GLOBAL-HL-LINE-MODE T)
    )
 )

;; SPELL CHECK 2021-02-14
(WHEN (DISPLAY-GRAPHIC-P)
      (PROGN
        (FLYSPELL-MODE +1)
        (ADD-HOOK 'TEXT-MODE-HOOK 'TURN-ON-FLYSPELL)
        (ADD-HOOK 'ORG-MODE-HOOK 'TURN-ON-FLYSPELL)
        (ADD-HOOK 'MARKDOWN-MODE-HOOK 'TURN-ON-FLYSPELL)
        (ADD-HOOK 'LATEX-MODE-HOOK 'TURN-ON-FLYSPELL)
        (ADD-HOOK 'LATEX-MODE-HOOK 'TURN-ON-FLYSPELL)  ;; FOR AUCTEX
      )
)


;; FOCUS ON `BUFFER LIST` WINDOW WHEN IT IS OPENED - 2021-02-21
;; HTTPS://WWW.REDDIT.COM/R/EMACS/COMMENTS/QJKWF/IS_THERE_A_WAY_TO_MAKE_EMACS_SWITCH_TO_THE_BUFFER/
(DEFUN BUFFER-LIST-SWITCH ()
  \"SWITCH TO BUFFER LIST AND ACTIVATE THE WINDOW\"
  (INTERACTIVE)
  (LIST-BUFFERS)
  (SELECT-WINDOW (GET-BUFFER-WINDOW \"*BUFFER LIST*\" 0))
)

(GLOBAL-SET-KEY (KBD \"C-X C-B\") 'BUFFER-LIST-SWITCH)

(INDENT-GUIDE-GLOBAL-MODE) ;; INDENT-GUIDE PACKAGE 2021-02-24

;; RECENT OPENED FILE HISTORY 2020-12-31
(REQUIRE 'RECENTF)
(RECENTF-MODE 1)
(GLOBAL-SET-KEY \"\\C-XF\" 'RECENTF-OPEN-FILES)
(SETQ RECENTF-AUTO-CLEANUP 'NEVER)

(SETQ BACKUP-DIRECTORY-ALIST `((\".\" . \"~/.SAVES/\")))         ;; BACKUP FILES RELOCATED 2020-10-09
(SETQ INHIBIT-STARTUP-SCREEN T)                              ;; NO WELCOME STARTUP SCREEN
(SETQ INITIAL-SCRATCH-MESSAGE \"\")                            ;; NO SCRATCH MESSAGE 2020-10-10
(ADD-TO-LIST 'DEFAULT-FRAME-ALIST '(FULLSCREEN . MAXIMIZED)) ;; MAXIMIZE GUI WINDOW

;; INTERUPTED WORKING PROCESS 2021-02-15
;; (SETQ AUTO-SAVE-VISITED-MODE T)                              ;; AUTO SAVE   
;; (SETQ AUTO-SAVE-VISITED-INTERVAL 1)                          ;; AUTO SAVE - INTERVAL
;; (SETQ AUTO-SAVE-DEFAULT T)
;; (SETQ AUTO-SAVE-VISITED-FILE-NAME T)
;; (GLOBAL-AUTO-REVERT-MODE T)                                  ;; AUTO REFRESH

(GLOBAL-VISUAL-LINE-MODE 1)                                  ;; VISUAL LINE MODE ON
;; (GLOBAL-DISPLAY-LINE-NUMBERS-MODE)                           ;; DISPLAY LINE NUMBERS ON

;; BETTERY MODE 2021-01-03
(DISPLAY-BATTERY-MODE 1)

(SETQ ISPELL-PROGRAM-NAME \"/OPT/LOCAL/BIN/ISPELL\")

(CUSTOM-SET-VARIABLES
 ;; CUSTOM-SET-VARIABLES WAS ADDED BY CUSTOM.
 ;; IF YOU EDIT IT BY HAND, YOU COULD MESS IT UP, SO BE CAREFUL.
 ;; YOUR INIT FILE SHOULD CONTAIN ONLY ONE SUCH INSTANCE.
 ;; IF THERE IS MORE THAN ONE, THEY WON'T WORK RIGHT.
 '(ANSI-COLOR-NAMES-VECTOR
   [\"#212526\" \"#FF4B4B\" \"#B4FA70\" \"#FCE94F\" \"#729FCF\" \"#E090D7\" \"#8CC4FF\" \"#EEEEEC\"])
 '(CONFIRM-KILL-EMACS 'YES-OR-NO-P)
 '(CUSTOM-ENABLED-THEMES NIL)
 '(DOC-VIEW-CONTINUOUS T)
 '(FRINGE-MODE 0 NIL (FRINGE))
 '(ORG-AGENDA-FILES
   '(\"~/DOCUMENTS/NVALT/INFOX-NOTEX-JIWOO.TXT\" \"~/DOCUMENTS/NVALT/INBOX_TODO_2021.TXT\" \"~/DOCUMENTS/NVALT/PROJX-ELT_221.TXT\" \"~/DOCUMENTS/NVALT/PROJX-TORONTOLIFE.TXT\" \"~/DOCUMENTS/NVALT/PROJX-EIX.TXT\"))
 '(ORG-AGENDA-TIME-GRID
   '((DAILY TODAY REQUIRE-TIMED)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(ORG-AGENDA-USE-TIME-GRID T)
 '(ORG-CONFIRM-BABEL-EVALUATE NIL)
 '(ORG-EXPORT-BACKENDS '(ASCII BEAMER HTML ICALENDAR LATEX ODT))
 '(ORG-FONTIFY-DONE-HEADLINE T)
 '(ORG-FONTIFY-QUOTE-AND-VERSE-BLOCKS T)
 '(ORG-FONTIFY-WHOLE-HEADING-LINE T)
 '(ORG-LINK-FRAME-SETUP
   '((VM . VM-VISIT-FOLDER-OTHER-FRAME)
     (VM-IMAP . VM-VISIT-IMAP-FOLDER-OTHER-FRAME)
     (GNUS . ORG-GNUS-NO-NEW-NEWS)
     (FILE . FIND-FILE-OTHER-WINDOW)
     (WL . WL-OTHER-FRAME)))
 '(PACKAGE-SELECTED-PACKAGES
   '(ORG-NOTER ORG-BULLETS DEFINE-WORD SMART-MODE-LINE POWERTHESAURUS INDENT-GUIDE FOCUS ACE-WINDOW NEOTREE HELPFUL ORG-ROAM HTMLIZE OX-REVEAL TRANSPOSE-FRAME CENTERED-WINDOW UNDO-TREE OLIVETTI IVY MARKDOWN-PREVIEW-MODE RAINBOW-DELIMITERS PDF-TOOLS HELM-ACK HELM-AG ACK AG HELM-PROJECTILE PROJECTILE EVIL-SURROUND WHICH-KEY AUCTEX FLYMAKE JEDI AUTO-COMPLETE PYGEN PYTHON-MODE EIN COMPANY-JEDI OB-IPYTHON COMPANY EVIL ACE-JUMP-MODE ELPY USE-PACKAGE CSV-MODE PANDOC SMEX IDO-VERTICAL-MODE BUFFER-MOVE MARKDOWN-MODE MULTIPLE-CURSORS GIT-GUTTER HELM MAGIT EXEC-PATH-FROM-SHELL)))

(CUSTOM-SET-FACES
 ;; CUSTOM-SET-FACES WAS ADDED BY CUSTOM.
 ;; IF YOU EDIT IT BY HAND, YOU COULD MESS IT UP, SO BE CAREFUL.
 ;; YOUR INIT FILE SHOULD CONTAIN ONLY ONE SUCH INSTANCE.
 ;; IF THERE IS MORE THAN ONE, THEY WON'T WORK RIGHT.
 '(DEFAULT ((T (:INHERIT NIL :STIPPLE NIL :INVERSE-VIDEO NIL :BOX NIL :STRIKE-THROUGH NIL :OVERLINE NIL :UNDERLINE NIL :SLANT NORMAL :WEIGHT NORMAL :HEIGHT 140 :WIDTH NORMAL :FOUNDRY \"NIL\" :FAMILY \"MENLO\"))))
 '(ORG-BLOCK ((T (:BACKGROUND \"#EFF0F1\" :EXTEND T))))
 '(ORG-BLOCK-BEGIN-LINE ((T (:UNDERLINE \"#A7A6AA\" :FOREGROUND \"#008ED1\" :BACKGROUND \"#EAEAFF\" :EXTEND T))))
 '(ORG-BLOCK-END-LINE ((T (:OVERLINE \"#A7A6AA\" :FOREGROUND \"#008ED1\" :BACKGROUND \"#EAEAFF\" :EXTEND T))))
 '(ORG-DOCUMENT-TITLE ((T (:FOREGROUND \"MIDNIGHT BLUE\" :WEIGHT BOLD :HEIGHT 1.4))))
 ;; -------------------------------------------------------------------------------------------------  
 ;; ELEGANT MODELINE :: WHITE
 ;; HTTPS://WWW.REDDIT.COM/R/EMACS/COMMENTS/FC8HC2/BINDER_MODES_FOR_STRUCTURING_A_MULTIFILE_WRITING/
 ;; HTTPS://GITHUB.COM/RNKN/DOTFILES/BLOB/74DFF2B1EADF3134C01E376CF8F42B24A0D1CC05/EMACS/SETTINGS.EL#L32
 ;; HTTPS://GITHUB.COM/RNKN/DOTFILES/BLOB/74DFF2B1EADF3134C01E376CF8F42B24A0D1CC05/EMACS/SETTINGS.EL#L416-L417
 '(DEFAULT-FRAME-ALIST '((WIDTH . 80) (HEIGHT . 45) (INTERNAL-BORDER-WIDTH . 25)))
 '(MODE-LINE ((((TYPE X W32 NS)) (:OVERLINE T)) (((TYPE TTY)) (:INVERSE-VIDEO T))))
 '(MODE-LINE-INACTIVE ((T (:INHERIT (SHADOW MODE-LINE)))))
;; ------------------------------------------------------------------------------------------------- 
 '(ORG-LEVEL-1 ((T (:INHERIT OUTLINE-1 :HEIGHT 1.0))))
 '(ORG-LEVEL-2 ((T (:INHERIT OUTLINE-2 :HEIGHT 1.0))))
 '(ORG-LEVEL-3 ((T (:INHERIT OUTLINE-3 :HEIGHT 1.0))))
 '(ORG-LEVEL-4 ((T (:INHERIT OUTLINE-4 :HEIGHT 1.0))))
 '(ORG-LEVEL-5 ((T (:INHERIT OUTLINE-5 :HEIGHT 1.0)))))


;;==========
;; WINDOW
;;==========

;; `BUFFER-MOVE` PACKAGE 2020-12-22
;; (GLOBAL-SET-KEY (KBD \"<C-S-UP>\")     'BUF-MOVE-UP)
;; (GLOBAL-SET-KEY (KBD \"<C-S-DOWN>\")   'BUF-MOVE-DOWN)
;; (GLOBAL-SET-KEY (KBD \"<C-S-LEFT>\")   'BUF-MOVE-LEFT)
;; (GLOBAL-SET-KEY (KBD \"<C-S-RIGHT>\")  'BUF-MOVE-RIGHT)

;; RESIZING WINDOWS (SHIFT+CONTRL) - CONFLICTED TO ORG-MODE 2021-02-28
;; (GLOBAL-SET-KEY (KBD \"S-C-<LEFT>\")  'SHRINK-WINDOW-HORIZONTALLY)
;; (GLOBAL-SET-KEY (KBD \"S-C-<RIGHT>\") 'ENLARGE-WINDOW-HORIZONTALLY)
;; (GLOBAL-SET-KEY (KBD \"S-C-<DOWN>\")  'SHRINK-WINDOW)
;; (GLOBAL-SET-KEY (KBD \"S-C-<UP>\")    'ENLARGE-WINDOW)

;; REMOVE SHIFT TO AVOID CONFILCT WITH ORG-MODE
(GLOBAL-SET-KEY (KBD \"M-C-<LEFT>\")  'SHRINK-WINDOW-HORIZONTALLY)
(GLOBAL-SET-KEY (KBD \"M-C-<RIGHT>\") 'ENLARGE-WINDOW-HORIZONTALLY)
(GLOBAL-SET-KEY (KBD \"M-C-<DOWN>\")  'SHRINK-WINDOW)
(GLOBAL-SET-KEY (KBD \"M-C-<UP>\")    'ENLARGE-WINDOW)


;; ACE-WINDOW 2021-02-23
(GLOBAL-SET-KEY (KBD \"M-O\") 'ACE-WINDOW)


;; DISPLAY DATE IN MODELINE 2020-12-07
;; (SETQ DISPLAY-TIME-DAY-AND-DATE T)
;; (DISPLAY-TIME)
(SETQ DISPLAY-TIME-FORMAT \"[%Y-%M-%D %H:%M]\")
(DISPLAY-TIME-MODE 1)


;; DISPLAY FILE SIZE IN MODELINE 2021-01-05
(SIZE-INDICATION-MODE T)

;; PDFLATEX -> PATH \"/LIBRARY/TEX/TEXBIN\" 2020-12-07
(SETQ LATEX-RUN-COMMAND \"PDFLATEX\")


;;===============================================================
;; PACKAGES
;;===============================================================

;; MELPA 2020-12-08
(REQUIRE 'PACKAGE)
(ADD-TO-LIST 'PACKAGE-ARCHIVES '(\"MELPA\" . \"HTTPS://MELPA.ORG/PACKAGES/\") T)
;; COMMENT/UNCOMMENT THIS LINE TO ENABLE MELPA STABLE IF DESIRED.  SEE `PACKAGE-ARCHIVE-PRIORITIES`
;; AND `PACKAGE-PINNED-PACKAGES`. MOST USERS WILL NOT NEED OR WANT TO DO THIS.
;;(ADD-TO-LIST 'PACKAGE-ARCHIVES '(\"MELPA-STABLE\" . \"HTTPS://STABLE.MELPA.ORG/PACKAGES/\") T)
;; -- UNNECESSARY CALL -- SEE LINE #6 IN THIS FILE
(PACKAGE-INITIALIZE)
;; (PACKAGE-REFRESH-CONTENTS)
;; (PACKAGE-INSTALL 'USE-PACKAGE)

;; (USE-PACKAGE ELPY
;;   :ENSURE T
;;   :INIT
;;   (ELPY-ENABLE))

;; IGNORE BYTE-COMPILE WARNINGS
;; 2021-01-16
;; HTTP://TSENGF.BLOGSPOT.COM/2011/06/DISABLE-BYTE-COMPILE-WARNING-IN-EMACS.HTML
(SETQ BYTE-COMPILE-WARNINGS '(NOT NRESOLVED
                                  FREE-VARS
                                  CALLARGS
                                  REDEFINE
                                  OBSOLETE
                                  NORUNTIME
                                  CL-FUNCTIONS
                                  INTERACTIVE-ONLY
                                  ))


;; COMPANY MODE 2021-01-24
;; I THINK IT'S A KIND OF AUTO-COMPLETION
(ADD-HOOK 'AFTER-INIT-HOOK 'GLOBAL-COMPANY-MODE)


;; AUTO COMPLETE 2021-01-16
;; HTTPS://WWW.YOUTUBE.COM/WATCH?V=HTUE03LNAXA
(REQUIRE 'AUTO-COMPLETE)
(REQUIRE 'AUTO-COMPLETE-CONFIG)
(AC-CONFIG-DEFAULT)


;; YASNIPPET 2021-01-16
;; HTTPS://WWW.YOUTUBE.COM/WATCH?V=HTUE03LNAXA
;; (REQUIRE 'YASNIPPET)
;; (YAS-GLOBAL-MODE 1)


;; PLUG-IN: EXEC-PATH-FROM-SHELL 2020-12-08
(WHEN (MEMQ WINDOW-SYSTEM '(MAC NS X))
  (EXEC-PATH-FROM-SHELL-INITIALIZE))


;; WHICH-KEYS
(WHICH-KEY-MODE)                        ;; WHICH-KEY PACKAGE 2021-01-28


;; PLUG-IN: DEFT -> DO NOT USE: KOREAN ISSUE, CHANGE FILENAME FORCELY 2020-12-08
;(REQUIRE 'DEFT)
;(SETQ DEFT-EXTENSIONS '(\"TXT\" \"TEX\" \"ORG\" \"MD\"))
;(SETQ DEFT-DIRECTORY \"~/DOCUMENTS/NVALT/\")
;;(SETQ DEFT-DIRECTORY \"~/DOCUMENTS/TEST/\")
;(SETQ DEFT-RECURSIVE T)


;;------------------------
;; ENABLE EVIL 2020-12-30
;;------------------------
;; (REQUIRE 'EVIL)
(EVIL-MODE 1)
(SETQ-DEFAULT EVIL-DEFAULT-STATE 'EMACS)
;; CHANGE COLOR OF WHICH-FUNC WHEN ENTERING AND LEAVING EVIL VISUAL STATE
;;  - RESOLVES THE \"WHITE ON WHITE\" ISSUE :: 2021-01-17
;; HTTPS://WWW.REDDIT.COM/R/EMACS/COMMENTS/6TDQT0/HOW_CAN_I_CHANGE_THE_BACKGROUND_COLOR_WHEN/
;; HTTPS://EVIL.READTHEDOCS.IO/EN/LATEST/HOOKS.HTML
(SETQ ORIGINAL-BACKGROUND (FACE-ATTRIBUTE 'DEFAULT :BACKGROUND))
(SETQ ORIGINAL-FOREGROUND (FACE-ATTRIBUTE 'DEFAULT :FOREGROUND))

;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"GRAY\")))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
(ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))


(IF (DISPLAY-GRAPHIC-P)
    (PROGN
    ;; IF GRAPHIC (GUI)
      (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (FACE-REMAP-ADD-RELATIVE 'HL-LINE NIL :BACKGROUND \"GRAY\")))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-OPERATOR-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (HL-LINE-MODE 0)))
      (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :BACKGROUND \"LIGHTGRAY\")))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))

      ;; (ADD-HOOK 'EVIL-OPERATOR-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"GRAY\")))

      (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :BACKGROUND \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :WEIGHT 'NORMAL)))
      ;; (ADD-HOOK 'EVIL-INSERT-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))

      (ADD-HOOK 'EVIL-VISUAL-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND \"LIGHTGRAY\")))
      ;; (ADD-HOOK 'EVIL-VISUAL-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"DARKGRAY\")))
      ;; (ADD-HOOK 'EVIL-VISUAL-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))

      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR \"LIGHTYELLOW\")))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR \"BLACK\")))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-EXIT-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
      ;; (ADD-HOOK 'EVIL-REPLACE-STATE-EXIT-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))
      (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :BACKGROUND ORIGINAL-BACKGROUND)))
      (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (FACE-REMAP-ADD-RELATIVE 'DEFAULT :FOREGROUND ORIGINAL-FOREGROUND)))
    )
    ;; ELSE (OPTIONAL - TERMINAL MODE)
    (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :UNDERLINE T :BACKGROUND ORIGINAL-BACKGROUND)))
    (ADD-HOOK 'EVIL-INSERT-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 1) (SET-FACE-ATTRIBUTE HL-LINE-FACE NIL :UNDERLINE T :OVERLINE 'T :BACKGROUND \"BLACK\")))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (SET-BACKGROUND-COLOR ORIGINAL-BACKGROUND)))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (SET-FOREGROUND-COLOR ORIGINAL-FOREGROUND)))
    (ADD-HOOK 'EVIL-EMACS-STATE-ENTRY-HOOK (LAMBDA () (HL-LINE-MODE 0)))
)


;; [FOR REFERENCE] GUI DETECTION ~ MORE READABLE :)
;;
;; (WHEN (DISPLAY-GRAPHIC-P)
;;     (YOUR)
;;     (CODE))
;;
;; HTTPS://STACKOVERFLOW.COM/QUESTIONS/5795451/HOW-TO-DETECT-THAT-EMACS-IS-IN-TERMINAL-MODE
;; 2021-02-10


;; (DEFUN HIGHLIGHT-SELECTED-WINDOW ()
;;   \"HIGHLIGHT SELECTED WINDOW WITH A DIFFERENT BACKGROUND COLOR.\"
;;   (WALK-WINDOWS (LAMBDA (W)
;;                   (UNLESS (EQ W (SELECTED-WINDOW))
;;                     (WITH-CURRENT-BUFFER (WINDOW-BUFFER W)
;;                       (BUFFER-FACE-SET '(:BACKGROUND \"WHITE\"))))))
;;   (BUFFER-FACE-SET 'DEFAULT))
;; (ADD-HOOK 'BUFFER-LIST-UPDATE-HOOK 'HIGHLIGHT-SELECTED-WINDOW)


;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/34251/CHANGE-MODELINE-BACKGROUND-WHEN-IN-NORMAL-EVIL-MODE
;;
;; (SETQ ORIGINAL-MODELINE-BACKGROUND (FACE-ATTRIBUTE 'MODE-LINE :BACKGROUND))
;; (SETQ NORMAL-STATE-BACKGROUND \"RED\")
;; (ADD-HOOK 'EVIL-NORMAL-STATE-ENTRY-HOOK (LAMBDA () (SET-FACE-ATTRIBUTE 'MODE-LINE NIL :BACKGROUND NORMAL-STATE-BACKGROUND)))
;; (ADD-HOOK 'EVIL-NORMAL-STATE-EXIT-HOOK  (LAMBDA () (SET-FACE-ATTRIBUTE 'MODE-LINE NIL :BACKGROUND ORIGINAL-MODELINE-BACKGROUND)))


;; EVIL CURSOR IN MODES 2021-02-06
;; HTTPS://GITHUB.COM/HLISSNER/DOOM-EMACS/ISSUES/1848
;; HTTP://FNWIYA.HATENABLOG.COM/ENTRY/2016/01/12/213149 
;; (SETQ EVIL-NORMAL-STATE-CURSOR '(BOX \"BLACK\")
;;       EVIL-INSERT-STATE-CURSOR '(BAR \"BLACK\")
;;       EVIL-VISUAL-STATE-CURSOR '(HOLLOW \"BLACK\")
;;       EVIL-EMACS-STATE-CURSOR '(BOX \"BLACK\"))

;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/30582/HOW-DO-I-CHANGE-THE-MODE-INDICATORS-FOR-EVIL-MODE-IN-THE-SPACELINE-MODE-LINE-PAC
(SETQ EVIL-NORMAL-STATE-TAG \"NORMAL\")
(SETQ EVIL-INSERT-STATE-TAG \"INSERT\")
(SETQ EVIL-VISUAL-STATE-TAG \"VISUAL\")
(SETQ EVIL-REPLACE-STATE-TAG \"REPLACE\")

;; COLOR THE EVIL TAG - COLORS TAKEN FROM SPACELINE
;; HTTPS://GITHUB.COM/MALABARBA/SMART-MODE-LINE/ISSUES/195
(SETQ EVIL-NORMAL-STATE-TAG   (PROPERTIZE \" NORMAL \" 'FACE '((:BACKGROUND \"BLACK\"          :FOREGROUND \"WHITE\")))
      EVIL-EMACS-STATE-TAG    (PROPERTIZE \" <E> \" 'FACE '((:BACKGROUND ORIGINAL-BACKGROUND :FOREGROUND FOREGROUND-COLOR)))
      EVIL-INSERT-STATE-TAG   (PROPERTIZE \" INSERT \" 'FACE '((:BACKGROUND \"LIGHTYELLOW\"    :FOREGROUND \"BLACK\")))
      EVIL-REPLACE-STATE-TAG  (PROPERTIZE \" REPLACE \" 'FACE '((:BACKGROUND \"CHOCOLATE\"     :FOREGROUND \"BLACK\")))
      EVIL-MOTION-STATE-TAG   (PROPERTIZE \" <MOTION> \" 'FACE '((:BACKGROUND \"PLUM3\"             :FOREGROUND \"BLACK\")))
      EVIL-VISUAL-STATE-TAG   (PROPERTIZE \" VISUAL \" 'FACE '((:BACKGROUND \"DARKGRAY\"       :FOREGROUND \"BLACK\")))
      EVIL-OPERATOR-STATE-TAG (PROPERTIZE \" <OPERATOR> \" 'FACE '((:BACKGROUND \"SANDY BROWN\"       :FOREGROUND \"BLACK\"))))

;; EVIL KEY BINDING
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"SPC\") 'EVIL-EX)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"J\") 'EVIL-NEXT-VISUAL-LINE)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"K\") 'EVIL-PREVIOUS-VISUAL-LINE)
(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"C-U\") 'EVIL-SCROLL-UP)
(DEFINE-KEY EVIL-VISUAL-STATE-MAP (KBD \"C-U\") 'EVIL-SCROLL-UP)

;; FORWARD-SENTENCE IS BASED ON THE SENTENCE-END VARIABLE
;; HTTPS://STACKOVERFLOW.COM/QUESTIONS/20257022/EVIL-EMACS-MODE-SENTENCE-MOTIONS-AND-OTHER-QUESTIONS
(SETQ SENTENCE-END \"[\\\\.\\\\?\\\\!] +\") ;; . OR ? OR ! FOLLOWED BY SPACES.
(DEFINE-KEY EVIL-NORMAL-STATE-MAP \")\" 'FORWARD-SENTENCE)


;; EVIL UNDO 2021-02-06
;; HTTPS://EMACS.STACKEXCHANGE.COM/QUESTIONS/3358/HOW-CAN-I-GET-UNDO-BEHAVIOR-IN-EVIL-SIMILAR-TO-VIMS
(SETQ EVIL-WANT-FINE-UNDO 'T)
(SETQ EVIL-WANT-FINE-UNDO 'FINE)
;; (SETQ EVIL-UNDO-SYSTEM 'UNDO-TREE) ;; NOT WORKING TESTED 2021-02-07

;; EVIL-SURROUND PACKAGE 2021-01-29
(GLOBAL-EVIL-SURROUND-MODE 1)

;; EVIL-SURROUND ADD PAIRS 2021-02-08
;; HTTPS://GITHUB.COM/EMACS-EVIL/EVIL-SURROUND
;; THIS MACRO WAS COPIED FROM HERE: HTTPS://STACKOVERFLOW.COM/A/22418983/4921402
(DEFMACRO DEFINE-AND-BIND-QUOTED-TEXT-OBJECT (NAME KEY START-REGEX END-REGEX)
  (LET ((INNER-NAME (MAKE-SYMBOL (CONCAT \"EVIL-INNER-\" NAME)))
        (OUTER-NAME (MAKE-SYMBOL (CONCAT \"EVIL-A-\" NAME))))
    `(PROGN
       (EVIL-DEFINE-TEXT-OBJECT ,INNER-NAME (COUNT &OPTIONAL BEG END TYPE)
         (EVIL-SELECT-PAREN ,START-REGEX ,END-REGEX BEG END TYPE COUNT NIL))
       (EVIL-DEFINE-TEXT-OBJECT ,OUTER-NAME (COUNT &OPTIONAL BEG END TYPE)
         (EVIL-SELECT-PAREN ,START-REGEX ,END-REGEX BEG END TYPE COUNT T))
       (DEFINE-KEY EVIL-INNER-TEXT-OBJECTS-MAP ,KEY #',INNER-NAME)
       (DEFINE-KEY EVIL-OUTER-TEXT-OBJECTS-MAP ,KEY #',OUTER-NAME))))

(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"PIPE\" \"|\" \"|\" \"|\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"SLASH\" \"/\" \"/\" \"/\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"UNDERSCORE\" \"_\" \"_\" \"_\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"CODE\" \"~\" \"~\" \"~\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"VERBATIM\" \"=\" \"=\" \"=\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"STRIKE_THROUGH\" \"+\" \"+\" \"+\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"ASTERISK\" \"*\" \"*\" \"*\")
(DEFINE-AND-BIND-QUOTED-TEXT-OBJECT \"DOLLAR\" \"$\" \"\\\\$\" \"\\\\$\") ;; SOMETIMES YOUR HAVE TO ESCAPE THE REGEX



;;----------------------------------------------------------------
;; ACE JUMP MODE
;;----------------------------------------------------------------
;; ACE JUMP MODE MAJOR FUNCTION
;; 
;; (ADD-TO-LIST 'LOAD-PATH \"/USERS/OSICKWON/.EMACS.D/ACE-JUMP-MODE/\")
;; (AUTOLOAD
;;   'ACE-JUMP-MODE
;;   \"ACE-JUMP-MODE\"
;;   \"EMACS QUICK MOVE MINOR MODE\"
;;   T)

;; YOU CAN SELECT THE KEY YOU PREFER TO
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C SPC\") 'ACE-JUMP-MODE)
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C SPC\") 'ACE-JUMP-CHAR-MODE)
;;
;; CONFLICT ORG-MODE: C-C SPC => ORG-TABLE-BLANK-FIELD

;; `C-U C-C SPC` WAS NOT WORKED PROPERLY, SO USED `C-C C-C` 2021-01-17
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-C C-C SPC\") 'ACE-JUMP-CHAR-MODE)


;; WHEN ORG-MODE STARTS IT (ORG-MODE-MAP) OVERRIDES THE ACE-JUMP-MODE.
;; (HTTPS://GITHUB.COM/WINTERTTR/ACE-JUMP-MODE/ISSUES/47)
;; (ADD-HOOK 'ORG-MODE-HOOK
;;           (LAMBDA ()
;;             ;; (LOCAL-SET-KEY (KBD \"\\C-C SPC\") 'ACE-JUMP-MODE)))
;;             (LOCAL-SET-KEY (KBD \"\\C-C SPC\") 'ACE-JUMP-CHAR-MODE)))
 
;; 
;; ENABLE A MORE POWERFUL JUMP BACK FUNCTION FROM ACE JUMP MODE
;;
;; (AUTOLOAD
;;   'ACE-JUMP-MODE-POP-MARK
;;   \"ACE-JUMP-MODE\"
;;   \"ACE JUMP BACK:-)\"
;;   T)
;; (EVAL-AFTER-LOAD \"ACE-JUMP-MODE\"
;;   '(ACE-JUMP-MODE-ENABLE-MARK-SYNC))
;; (DEFINE-KEY GLOBAL-MAP (KBD \"C-X SPC\") 'ACE-JUMP-MODE-POP-MARK)

;;IF YOU USE VIPER MODE :
;(DEFINE-KEY VIPER-VI-GLOBAL-USER-MAP (KBD \"SPC\") 'ACE-JUMP-MODE)
;;IF YOU USE EVIL
;(DEFINE-KEY EVIL-NORMAL-STATE-MAP (KBD \"SPC\") 'ACE-JUMP-MODE)
;; ----------------------------------------------------------------

;; PROJECTILE PACKAGE 2021-01-29
;; -----------------------------
(PROJECTILE-MODE +1)
(DEFINE-KEY PROJECTILE-MODE-MAP (KBD \"S-P\") 'PROJECTILE-COMMAND-MAP)
(DEFINE-KEY PROJECTILE-MODE-MAP (KBD \"C-C P\") 'PROJECTILE-COMMAND-MAP)

;; USE 'HELM-PROJECTILE-AG' INSETED OF C-C P S S, WHICH STANDS FOR AG SERCHING IN PROJECTILE
;; ONCE INSTALL PACKAGE OF 'HELM-PROJECTILE', YOU CAN ALSO USE 'HELM-PROJECTILE-AG'
;; OR INSTALL 'HELM-AG' PACKAGE TO USE SAME FUNCTION
;; HOWEVER, REQUIRED INTALL '(SUDO) PORT INSTALL THE_SILVER_SEARCHER' FIRST (THE_SILVER_SEARCHER = AG)


;; OLIVETTI 2021-02-11
;; -------------------
;; TO REMOVE BOUNDRY -> '(FRINGE-MODE 0 NIL (FRINGE)) IN `(CUSTOM-SET-VARIABLES` LINES IN FRONT OF THIS FILE. 
(SETQ OLIVETTI-BODY-WIDTH 0.5)
" 0 3 (face font-lock-comment-delimiter-face) 3 14 (face font-lock-comment-face) 14 20 (face font-lock-comment-delimiter-face) 20 52 (face font-lock-comment-face) 52 57 (face font-lock-comment-delimiter-face) 57 90 (face font-lock-comment-face) 90 93 (face font-lock-comment-delimiter-face) 93 128 (face font-lock-comment-face) 128 130 (face font-lock-comment-delimiter-face) 130 166 (face font-lock-comment-face) 167 169 (face font-lock-comment-delimiter-face) 169 188 (face font-lock-comment-face) 188 191 (face font-lock-comment-delimiter-face) 191 207 (face font-lock-comment-face) 207 209 (face font-lock-comment-delimiter-face) 209 228 (face font-lock-comment-face) 231 235 (face font-lock-keyword-face) 291 294 (face font-lock-comment-delimiter-face) 294 345 (face font-lock-comment-face) 347 349 (face font-lock-keyword-face) 375 380 (face font-lock-keyword-face) 464 467 (face font-lock-comment-delimiter-face) 467 491 (face font-lock-comment-face) 501 504 (face font-lock-comment-delimiter-face) 504 527 (face font-lock-comment-face) 528 532 (face font-lock-keyword-face) 560 565 (face font-lock-keyword-face) 864 867 (face font-lock-comment-delimiter-face) 867 878 (face font-lock-comment-face) 890 893 (face font-lock-comment-delimiter-face) 893 954 (face font-lock-comment-face) 954 957 (face font-lock-comment-delimiter-face) 957 1000 (face font-lock-comment-face) 1000 1054 (face font-lock-comment-face) 1055 1060 (face font-lock-keyword-face) 1061 1079 (face font-lock-function-name-face) 1085 1132 (face font-lock-doc-face) 1136 1147 (face font-lock-keyword-face) 1202 1217 (face font-lock-string-face) 1246 1255 (face font-lock-string-face) 1306 1309 (face font-lock-comment-delimiter-face) 1309 1341 (face font-lock-comment-face) 1342 1345 (face font-lock-comment-delimiter-face) 1345 1383 (face font-lock-comment-face) 1384 1391 (face font-lock-keyword-face) 1393 1400 (face font-lock-constant-face) 1435 1442 (face font-lock-string-face) 1465 1469 (face font-lock-keyword-face) 1501 1505 (face font-lock-keyword-face) 1532 1535 (face font-lock-string-face) 1538 1549 (face font-lock-string-face) 1561 1564 (face font-lock-comment-delimiter-face) 1564 1598 (face font-lock-comment-face) 2531 2534 (face font-lock-comment-delimiter-face) 2534 2576 (face font-lock-comment-face) 2577 2580 (face font-lock-comment-delimiter-face) 2580 2641 (face font-lock-comment-face) 2642 2645 (face font-lock-comment-delimiter-face) 2645 2699 (face font-lock-comment-face) 2700 2703 (face font-lock-comment-delimiter-face) 2703 2753 (face font-lock-comment-face) 2784 2793 (face font-lock-string-face) 2794 2803 (face font-lock-string-face) 2804 2813 (face font-lock-string-face) 2814 2823 (face font-lock-string-face) 2824 2833 (face font-lock-string-face) 2834 2843 (face font-lock-string-face) 2844 2853 (face font-lock-string-face) 2854 2863 (face font-lock-string-face) 3014 3055 (face font-lock-string-face) 3056 3095 (face font-lock-string-face) 3096 3133 (face font-lock-string-face) 3134 3175 (face font-lock-string-face) 3176 3209 (face font-lock-string-face) 3344 3352 (face font-lock-string-face) 3353 3371 (face font-lock-string-face) 4455 4458 (face font-lock-comment-delimiter-face) 4458 4496 (face font-lock-comment-face) 4497 4500 (face font-lock-comment-delimiter-face) 4500 4561 (face font-lock-comment-face) 4562 4565 (face font-lock-comment-delimiter-face) 4565 4619 (face font-lock-comment-face) 4620 4623 (face font-lock-comment-delimiter-face) 4623 4673 (face font-lock-comment-face) 4689 4697 (face font-lock-builtin-face) 4702 4710 (face font-lock-builtin-face) 4715 4729 (face font-lock-builtin-face) 4734 4738 (face font-lock-builtin-face) 4743 4758 (face font-lock-builtin-face) 4763 4772 (face font-lock-builtin-face) 4777 4787 (face font-lock-builtin-face) 4792 4798 (face font-lock-builtin-face) 4806 4813 (face font-lock-builtin-face) 4821 4828 (face font-lock-builtin-face) 4833 4839 (face font-lock-builtin-face) 4847 4855 (face font-lock-builtin-face) 4856 4861 (face font-lock-string-face) 4862 4869 (face font-lock-builtin-face) 4870 4877 (face font-lock-string-face) 4900 4911 (face font-lock-builtin-face) 4912 4921 (face font-lock-string-face) 4922 4929 (face font-lock-builtin-face) 20576 20578 (face font-lock-comment-delimiter-face) 20578 20602 (face font-lock-comment-face) 20602 20603 (face font-lock-comment-delimiter-face) 20603 20668 (face font-lock-comment-face) 20668 20670 (face font-lock-comment-delimiter-face) 20670 20686 (face font-lock-comment-face) 20686 20687 (face font-lock-comment-delimiter-face) 20687 20749 (face font-lock-comment-face) 20749 20752 (face font-lock-comment-delimiter-face) 20752 20817 (face font-lock-comment-face) 20818 20821 (face font-lock-comment-delimiter-face) 20821 20851 (face font-lock-comment-face) 20851 20854 (face font-lock-comment-delimiter-face) 20854 20884 (face font-lock-comment-face) 20942 20947 (face font-lock-string-face) 21011 21018 (face font-lock-string-face) 21046 21049 (face font-lock-comment-delimiter-face) 21049 21075 (face font-lock-comment-face) 21075 21139 (face font-lock-comment-face) 21139 21142 (fontified t face font-lock-comment-delimiter-face) 21142 21223 (fontified t face font-lock-comment-face) 21223 21226 (fontified t face font-lock-comment-delimiter-face) 21226 21276 (fontified t face font-lock-comment-face) 21276 21279 (fontified t face font-lock-comment-delimiter-face) 21279 21351 (fontified t face font-lock-comment-face) 21351 21379 (fontified t face font-lock-comment-face) 21379 21381 (fontified t) 21381 21384 (fontified t face font-lock-comment-delimiter-face) 21384 21404 (fontified t face font-lock-comment-face) 21404 21407 (fontified t face font-lock-comment-delimiter-face) 21407 21427 (fontified t face font-lock-comment-face) 21427 21430 (fontified t face font-lock-comment-delimiter-face) 21430 21538 (fontified t face font-lock-comment-face) 21538 21539 (fontified t) 21539 21543 (fontified t) 21543 21569 (fontified t)) . 1) (undo-tree-id66 . -166) (undo-tree-id67 . -166) (undo-tree-id68 . -3859) (undo-tree-id69 . -3859) (undo-tree-id70 . -5910) (undo-tree-id71 . -5910) (undo-tree-id72 . -5851) (undo-tree-id73 . -5851) (undo-tree-id74 . -5767) (undo-tree-id75 . -5767) (undo-tree-id76 . -5684) (undo-tree-id77 . -5684) (undo-tree-id78 . -5573) (undo-tree-id79 . -5573) (undo-tree-id80 . -5468) (undo-tree-id81 . -5468) (undo-tree-id82 . -5367) (undo-tree-id83 . -5367) (undo-tree-id84 . -5337) (undo-tree-id85 . -5337) (undo-tree-id86 . -5233) (undo-tree-id87 . -5233) (undo-tree-id88 . -6303) (undo-tree-id89 . -6303) (undo-tree-id90 . -7138) (undo-tree-id91 . -7138) (undo-tree-id92 . -7086) (undo-tree-id93 . -7086) (undo-tree-id94 . -7020) (undo-tree-id95 . -7020) (undo-tree-id96 . -6955) (undo-tree-id97 . -6955) (undo-tree-id98 . -6907) (undo-tree-id99 . -6907) (undo-tree-id100 . -6906) (undo-tree-id101 . -6906) (undo-tree-id102 . -6850) (undo-tree-id103 . -6850) (undo-tree-id104 . -6795) (undo-tree-id105 . -6795) (undo-tree-id106 . -6726) (undo-tree-id107 . -6726) (undo-tree-id108 . -6658) (undo-tree-id109 . -6658) (undo-tree-id110 . -6587) (undo-tree-id111 . -6587) (undo-tree-id112 . -6586) (undo-tree-id113 . -6586) (undo-tree-id114 . -6529) (undo-tree-id115 . -6529) (undo-tree-id116 . -6473) (undo-tree-id117 . -6473) (undo-tree-id118 . -6417) (undo-tree-id119 . -6417) (undo-tree-id120 . -6363) (undo-tree-id121 . -6363) (undo-tree-id122 . -16219) (undo-tree-id123 . -16219) (undo-tree-id124 . -21538) (undo-tree-id125 . -21538) (undo-tree-id126 . -21139)) (24636 15358 41022 0) 0 nil]) ((21565 . 21568)) (("0.5" . 21565) (t 24636 15120 0 0)) (24636 15361 105887 0) 0 nil]) ((#("95" 0 1 (fontified nil) 1 2 (fontified nil)) . 21565)) ((21565 . 21567)) (24636 15367 657248 0) 0 nil]) ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified nil)) . 5577)) ((5577 . 5578)) (24636 15368 449157 0) 0 nil]) ((5574 . 5575)) nil (24636 14625 310410 0) 0 nil]) ((5574 . 5577)) nil (24636 14625 310412 0) 0 nil]) ((nil rear-nonsticky nil 5680 . 5681) (nil fontified nil 5575 . 5681) (5575 . 5681)) nil (24636 14625 310414 0) 0 nil]) ((5574 . 5575) (5469 . 5470) (5572 . 5573) (t 24636 14594 0 0)) nil (24636 14625 310417 0) 0 nil]) ((nil rear-nonsticky nil 5571 . 5572) (nil fontified nil 5472 . 5572) (5472 . 5572)) nil (24636 14594 983245 0) 0 nil]) ((5469 . 5472)) nil (24636 14594 983251 0) 0 nil]) ((#(" " 0 1 (face font-lock-comment-face fontified nil)) . 5469) (5469 . 5470) (5469 . 5470) (t 24636 14402 0 0)) nil (24636 14594 983255 0) 0 nil]) ((5359 . 5367)) nil (24636 14402 744888 0) 0 nil]) ((5341 . 5359)) nil (24636 14402 744894 0) 0 nil]) ((5234 . 5235)) nil (24636 14402 744896 0) 0 nil]) ((5337 . 5338)) nil (24636 14402 744898 0) 0 nil]) ((5337 . 5339)) nil (24636 14402 744899 0) 0 nil]) ((5338 . 5339) (#(" " 0 1 (fontified nil face font-lock-comment-face)) . 5337) (5337 . 5338) (5337 . 5338) (t 24636 14354 0 0)) nil (24636 14402 744902 0) 0 nil]) ((nil rear-nonsticky nil 5334 . 5335) (nil fontified nil 5237 . 5335) (nil fontified nil 5234 . 5237) (5234 . 5335)) nil (24636 14354 478398 0) 0 nil]) ((5233 . 5235)) nil (24636 14354 478404 0) 0 nil]) ((5644 . 5660)) nil (24636 14354 478406 0) 0 nil]) ((5623 . 5644)) nil (24636 14354 478408 0) 0 nil]) ((5602 . 5623)) nil (24636 14354 478409 0) 0 nil]) ((5581 . 5602)) nil (24636 14354 478411 0) 0 nil]) ((5560 . 5581)) nil (24636 14354 478412 0) 0 nil]) ((5559 . 5561)) nil (24636 14354 478414 0) 0 nil]) ((nil rear-nonsticky nil 5332 . 5333) (nil fontified nil 5237 . 5333) (5237 . 5333)) nil (24636 14354 478416 0) 0 nil]) ((5234 . 5237)) nil (24636 14354 478418 0) 0 nil]) ((#(" " 0 1 (fontified nil)) . 5234) (5234 . 5235) (5234 . 5235)) nil (24636 14354 478420 0) 0 nil]) ((15770 . 15786) (#("fore" 0 4 (fontified t)) . -15770) (undo-tree-id31 . -4) 15774) nil (24636 14354 478438 0) 0 nil]) ((15770 . 15774)) nil (24636 14354 478441 0) 0 nil]) ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 15770) (#("k" 0 1 (fontified t)) . 15770) (#("c" 0 1 (fontified t)) . 15770) (#("a" 0 1 (fontified t)) . 15770) (#("l" 0 1 (fontified t)) . 15770) (#("b" 0 1 (fontified t)) . 15770) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 15770) (t 24636 13960 0 0)) nil (24636 14354 478445 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757) (#(" " 0 1 (fontified t)) . 15757)) nil (24636 13960 636835 0) 0 nil]) ((15738 . 15757) (#("ori" 0 3 (fontified t)) . -15738) (undo-tree-id18 . -3) (undo-tree-id19 . 3) (undo-tree-id20 . -3) 15741) nil (24636 13960 636862 0) 0 nil]) ((15738 . 15741)) nil (24636 13960 636865 0) 0 nil]) ((#("o" 0 1 (fontified t)) . -15738) (undo-tree-id21 . -1) (#("r" 0 1 (fontified t)) . -15739) (undo-tree-id22 . -1) (#("g" 0 1 (fontified t)) . -15740) (undo-tree-id23 . -1) (#("i" 0 1 (fontified t)) . -15741) (undo-tree-id24 . -1) (#("n" 0 1 (fontified t)) . -15742) (undo-tree-id25 . -1) (#("a" 0 1 (fontified t)) . -15743) (undo-tree-id26 . -1) (#("l" 0 1 (fontified t)) . -15744) (undo-tree-id27 . -1) 15745) nil (24636 13960 636883 0) 0 nil]) ((15741 . 15745)) nil (24636 13960 636887 0) 0 nil]) ((#("o" 0 1 (fontified t)) . -15741) (undo-tree-id28 . -1) 15742) nil (24636 13960 636891 0) 0 nil]) ((15741 . 15742)) nil (24636 13960 636893 0) 0 nil]) ((#("o" 0 1 (fontified t)) . -15741) (undo-tree-id29 . -1) (#("m" 0 1 (fontified t)) . -15742) (undo-tree-id30 . -1) 15743) nil (24636 13960 636899 0) 0 nil]) ((15738 . 15743)) nil (24636 13960 636901 0) 0 nil]) ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 15738) (#("y" 0 1 (fontified t)) . 15738) (#("a" 0 1 (fontified t)) . 15738) (#("r" 0 1 (fontified t)) . 15738) (#("g" 0 1 (fontified t)) . 15738) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 15738) (t 24636 13680 0 0)) nil (24636 13960 636904 0) 0 nil]) ((nil rear-nonsticky nil 5315 . 5316) (nil fontified nil 5234 . 5316) (5234 . 5316)) nil (24636 13680 925335 0) 0 nil]) ((#(" " 0 1 (fontified nil)) . 5234) (5234 . 5235) (5234 . 5235)) nil (24636 13680 925342 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 5377) (undo-tree-id15 . 1)) nil (24636 13680 925360 0) 0 nil]) ((nil rear-nonsticky nil 5375 . 5376) (nil fontified nil 5234 . 5376) (5234 . 5376)) nil (24636 13680 925363 0) 0 nil]) ((5236 . 5237) (#(" " 0 1 (fontified nil)) . 5235) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (5236 . 5237) (#(" " 0 1 (fontified nil)) . 5234) (5234 . 5235) (5234 . 5235) (t 24636 13350 0 0)) nil (24636 13680 925371 0) 0 nil] [nil nil ((nil rear-nonsticky nil 5651 . 5652) (5510 . 5652) (t 24636 13350 0 0)) ((#(" '(mode-line ((((type x w32 ns)) (:overline t)) (((type tty)) (:inverse-video t))))
 '(mode-line-inactive ((t (:inherit (shadow mode-line)))))" 0 34 (fontified t) 34 35 (face font-lock-builtin-face fontified t) 35 43 (face font-lock-builtin-face fontified t) 43 63 (fontified t) 63 77 (face font-lock-builtin-face fontified t) 77 84 (fontified t) 84 111 (fontified nil) 111 119 (face font-lock-builtin-face fontified nil) 119 141 (fontified nil) 141 142 (fontified nil rear-nonsticky nil)) . 5510) (undo-tree-id13 . -84) (undo-tree-id14 . -142) (nil rear-nonsticky t 5651 . 5652)) (24636 13638 448000 0) 0 nil]) ((#("
" 0 1 (fontified nil)) . 168)) ((168 . 169) (t 24636 13350 0 0)) (24636 13640 607972 0) 0 nil]) ((#("
" 0 1 (fontified nil)) . 168)) ((168 . 169)) (24636 13636 656333 0) 0 nil]) ((#("(REQUIRE 'SANITY)" 0 1 (fontified t) 1 8 (fontified t) 8 10 (fontified t) 10 16 (fontified t) 16 17 (fontified t rear-nonsticky t)) . 168) (undo-tree-id101 . -17) (undo-tree-id102 . -17) (undo-tree-id103 . -17) (undo-tree-id104 . -17) (undo-tree-id105 . -17)) nil (24636 13350 579424 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 168) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1)) nil (24636 13350 579432 0) 0 nil]) ((#("(REQUIRE 'ELEGANCE)" 0 1 (fontified t) 1 8 (fontified t) 8 10 (fontified t) 10 18 (fontified t) 18 19 (fontified t)) . 168) (undo-tree-id109 . -19)) nil (24636 13350 579437 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 168) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1)) nil (24636 13350 579445 0) 0 nil]) ((#("(ADD-TO-LIST 'LOAD-PATH \"~/.EMACS.D/ELEGANT-EMACS\")" 0 24 (fontified t) 24 50 (fontified t face font-lock-string-face) 50 51 (fontified t)) . 168) (undo-tree-id113 . -51)) nil (24636 13350 579449 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 168) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1)) nil (24636 13350 579461 0) 0 nil]) ((169 . 258) (#("(add-to-list 'load-path \"~/.emacs.d/elegant-emacs\")
(require 'elegance)
(require 'sanity)" 0 24 (fontified t) 24 50 (fontified t face font-lock-string-face) 50 53 (fontified t) 53 60 (fontified t face font-lock-keyword-face) 60 62 (fontified t) 62 70 (fontified t face font-lock-constant-face) 70 73 (fontified t) 73 80 (fontified t face font-lock-keyword-face) 80 82 (fontified t) 82 88 (fontified t face font-lock-constant-face) 88 89 (fontified t rear-nonsticky t)) . -169) (t 24636 13001 0 0)) nil (24636 13350 579464 0) 0 nil]) ((nil rear-nonsticky nil 257 . 258) (nil fontified nil 169 . 258) (169 . 258)) nil (24636 13001 223846 0) 0 nil]) ((167 . 170) (t 24636 12878 0 0)) nil (24636 13001 223852 0) 0 nil]) ((167 . 168)) nil (24636 12878 386024 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 167) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (t 24636 12870 0 0)) nil (24636 12878 386051 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 168) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1)) nil (24636 12870 963707 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 168) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1)) nil (24636 12870 963719 0) 0 nil]) ((#(";; == Testing ==" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 16 (fontified t face font-lock-comment-face)) . 168) (undo-tree-id51 . -16)) nil (24636 12870 963724 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 186) (#("
" 0 1 (fontified t)) . 186) (undo-tree-id52 . -1) (undo-tree-id53 . -1)) nil (24636 12870 963731 0) 0 nil]) ((#("(quelpa
 '(quelpa-use-package
   :fetcher git
   :url \"https://github.com/quelpa/quelpa-use-package.git\"))
(require 'quelpa-use-package)


  (use-package elegance
     :quelpa (elegance :fetcher github :repo \"rougier/elegant-emacs\")
     :ensure t
     :config
   (require 'elegance)
   ;; depending on whether or not you want sanity.el 
   (require 'sanity))

;; == End of Testing ==

" 0 33 (fontified t) 33 41 (fontified t face font-lock-builtin-face) 41 49 (fontified t) 49 53 (fontified t face font-lock-builtin-face) 53 54 (fontified t) 54 104 (fontified t face font-lock-string-face) 104 107 (fontified t) 107 108 (fontified t) 108 115 (fontified t face font-lock-keyword-face) 115 117 (fontified t) 117 135 (fontified t face font-lock-constant-face) 135 136 (fontified t rear-nonsticky t) 136 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 142 (fontified t) 142 153 (fontified t face font-lock-keyword-face) 153 163 (fontified t) 163 168 (fontified t) 168 175 (fontified t face font-lock-builtin-face) 175 186 (fontified t) 186 194 (fontified t face font-lock-builtin-face) 194 202 (fontified t) 202 207 (fontified t face font-lock-builtin-face) 207 208 (fontified t) 208 231 (fontified t face font-lock-string-face) 231 238 (fontified t) 238 245 (fontified t face font-lock-builtin-face) 245 253 (fontified t) 253 260 (fontified t face font-lock-builtin-face) 260 265 (fontified t) 265 272 (fontified t face font-lock-keyword-face) 272 274 (fontified t) 274 282 (fontified t face font-lock-constant-face) 282 287 (fontified t) 287 290 (fontified t face font-lock-comment-delimiter-face) 290 338 (fontified t face font-lock-comment-face) 338 342 (fontified t) 342 349 (fontified t face font-lock-keyword-face) 349 351 (fontified t) 351 357 (fontified t face font-lock-constant-face) 357 358 (fontified t) 358 359 (rear-nonsticky t fontified t) 359 360 (fontified t) 360 361 (fontified t) 361 364 (fontified t face font-lock-comment-delimiter-face) 364 384 (fontified t face font-lock-comment-face) 384 385 (fontified t face font-lock-comment-face) 385 386 (fontified t)) . -186) (undo-tree-id54 . -386) (undo-tree-id55 . -139) (undo-tree-id56 . -386) (undo-tree-id57 . -386) (undo-tree-id58 . -385) (undo-tree-id59 . -385) (undo-tree-id60 . -361) (undo-tree-id61 . -361) (undo-tree-id62 . -360) (undo-tree-id63 . -360) (undo-tree-id64 . -338) (undo-tree-id65 . -338) (undo-tree-id66 . -284) (undo-tree-id67 . -284) (undo-tree-id68 . -261) (undo-tree-id69 . -261) (undo-tree-id70 . -248) (undo-tree-id71 . -248) (undo-tree-id72 . -233) (undo-tree-id73 . -233) (undo-tree-id74 . -163) (undo-tree-id75 . -163) (undo-tree-id76 . -139) (undo-tree-id77 . -139) (undo-tree-id78 . -138) (undo-tree-id79 . -138) (undo-tree-id80 . -137) (undo-tree-id81 . -137) (undo-tree-id82 . -107) (undo-tree-id83 . -107) (undo-tree-id84 . -46) (undo-tree-id85 . -46) (undo-tree-id86 . -30) (undo-tree-id87 . -30) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -386) (undo-tree-id91 . -386) (undo-tree-id92 . -386) 572 (t 24636 12852 0 0)) nil (24636 12870 963806 0) 0 nil]) ((322 . 323)) nil (24636 12852 155151 0) 0 nil]) ((nil rear-nonsticky nil 321 . 322) (nil fontified nil 186 . 322) (186 . 322)) nil (24636 12852 155158 0) 0 nil]) ((185 . 187) (t 24636 12796 0 0)) nil (24636 12852 155160 0) 0 nil]) ((432 . 434)) nil (24636 12796 165747 0) 0 nil]) ((#("












" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t)) . -433) (#("
" 0 1 (fontified t)) . 432) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 433) nil (24636 12796 165778 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 186) (undo-tree-id3 . -1) (undo-tree-id4 . -1)) nil (24636 12796 165786 0) 0 nil]) ((429 . 432)) nil (24636 12796 165788 0) 0 nil]) ((409 . 429)) nil (24636 12796 165790 0) 0 nil]) ((407 . 409)) nil (24636 12796 165791 0) 0 nil]) ((nil rear-nonsticky nil 406 . 407) (nil fontified nil 187 . 407) (187 . 407)) nil (24636 12796 165794 0) 0 nil]) ((184 . 187)) nil (24636 12796 165795 0) 0 nil]) ((175 . 184)) nil (24636 12796 165797 0) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -175) (undo-tree-id5 . -1) 176) nil (24636 12796 165801 0) 0 nil]) ((168 . 176)) nil (24636 12796 165803 0) 0 nil]) ((168 . 183) (#("                                   " 0 35 (fontified nil)) . -168) (167 . 168) (t 24636 12721 0 0)) nil (24636 12796 165805 0) 0 nil]) ((4472 . 5544) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4472) (4468 . 4470) (#("
" 0 1 (fontified nil)) . -4468) (3894 . 4469) (#(" " 0 1 (fontified nil)) . 3894) (3864 . 3895) (3839 . 3842) (3802 . 3805) (3767 . 3770) (3717 . 3720) (#("
" 0 1 (fontified nil)) . -3852) (3828 . 3830) (3794 . 3796) (3762 . 3764) (3715 . 3717) (3844 . 3845) (3821 . 3822) (#("
" 0 1 (fontified nil)) . 3821) (3821 . 3822) (#(" " 0 1 (fontified nil)) . -3821) (3789 . 3790) (#("
" 0 1 (fontified nil)) . 3789) (3789 . 3790) (#(" " 0 1 (fontified nil)) . -3789) (3759 . 3760) (#("
" 0 1 (fontified nil)) . 3759) (3759 . 3760) (#(" " 0 1 (fontified nil)) . -3759) (3714 . 3715) (#("
" 0 1 (fontified nil)) . 3714) (3714 . 3715) (#(" " 0 1 (fontified nil)) . -3714) (3674 . 3844) (#(" " 0 1 (fontified nil)) . 3674) (3408 . 3675) (3377 . 3380) (3307 . 3310) (#("
" 0 1 (fontified nil)) . -3402) (3372 . 3374) (3305 . 3307) (3398 . 3399) (3369 . 3370) (#(" " 0 1 (fontified nil)) . -3369) (3304 . 3305) (#("
" 0 1 (fontified nil)) . 3304) (3304 . 3305) (#(" " 0 1 (fontified nil)) . -3304) (3271 . 3398) (#(" " 0 1 (fontified nil)) . 3271) (3246 . 3272) (#("
" 0 1 (fontified nil)) . -3246) (3044 . 3247) (#(" " 0 1 (fontified nil)) . 3044) (2900 . 3045) (#("
" 0 1 (fontified nil)) . -2900) (2815 . 2901) (#(" " 0 1 (fontified nil)) . 2815) (2544 . 2816) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1916 (fontified nil)) . -2544) (t 24636 11869 0 0)) nil (24636 12721 622078 0) 0 nil]) ((4462 . 5534) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4462) (4458 . 4460) (#("
" 0 1 (fontified nil)) . -4458) (3894 . 4459) (#(" " 0 1 (fontified nil)) . 3894) (3864 . 3895) (3839 . 3842) (3802 . 3805) (3767 . 3770) (3717 . 3720) (#("
" 0 1 (fontified nil)) . -3852) (3828 . 3830) (3794 . 3796) (3762 . 3764) (3715 . 3717) (3844 . 3845) (3821 . 3822) (#("
" 0 1 (fontified nil)) . 3821) (3821 . 3822) (#(" " 0 1 (fontified nil)) . -3821) (3789 . 3790) (#("
" 0 1 (fontified nil)) . 3789) (3789 . 3790) (#(" " 0 1 (fontified nil)) . -3789) (3759 . 3760) (#("
" 0 1 (fontified nil)) . 3759) (3759 . 3760) (#(" " 0 1 (fontified nil)) . -3759) (3714 . 3715) (#("
" 0 1 (fontified nil)) . 3714) (3714 . 3715) (#(" " 0 1 (fontified nil)) . -3714) (3674 . 3844) (#(" " 0 1 (fontified nil)) . 3674) (3408 . 3675) (3377 . 3380) (3307 . 3310) (#("
" 0 1 (fontified nil)) . -3402) (3372 . 3374) (3305 . 3307) (3398 . 3399) (3369 . 3370) (#(" " 0 1 (fontified nil)) . -3369) (3304 . 3305) (#("
" 0 1 (fontified nil)) . 3304) (3304 . 3305) (#(" " 0 1 (fontified nil)) . -3304) (3271 . 3398) (#(" " 0 1 (fontified nil)) . 3271) (3246 . 3272) (#("
" 0 1 (fontified nil)) . -3246) (3044 . 3247) (#(" " 0 1 (fontified nil)) . 3044) (2900 . 3045) (#("
" 0 1 (fontified nil)) . -2900) (2815 . 2901) (#(" " 0 1 (fontified nil)) . 2815) (2544 . 2816) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(annotate org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1925 (fontified nil)) . -2544) (t 24636 11318 0 0)) nil (24636 11869 459390 0) 0 nil]) ((4471 . 5543) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4471) (4467 . 4469) (#("
" 0 1 (fontified nil)) . -4467) (3894 . 4468) (#(" " 0 1 (fontified nil)) . 3894) (3864 . 3895) (3839 . 3842) (3802 . 3805) (3767 . 3770) (3717 . 3720) (#("
" 0 1 (fontified nil)) . -3852) (3828 . 3830) (3794 . 3796) (3762 . 3764) (3715 . 3717) (3844 . 3845) (3821 . 3822) (#("
" 0 1 (fontified nil)) . 3821) (3821 . 3822) (#(" " 0 1 (fontified nil)) . -3821) (3789 . 3790) (#("
" 0 1 (fontified nil)) . 3789) (3789 . 3790) (#(" " 0 1 (fontified nil)) . -3789) (3759 . 3760) (#("
" 0 1 (fontified nil)) . 3759) (3759 . 3760) (#(" " 0 1 (fontified nil)) . -3759) (3714 . 3715) (#("
" 0 1 (fontified nil)) . 3714) (3714 . 3715) (#(" " 0 1 (fontified nil)) . -3714) (3674 . 3844) (#(" " 0 1 (fontified nil)) . 3674) (3408 . 3675) (3377 . 3380) (3307 . 3310) (#("
" 0 1 (fontified nil)) . -3402) (3372 . 3374) (3305 . 3307) (3398 . 3399) (3369 . 3370) (#(" " 0 1 (fontified nil)) . -3369) (3304 . 3305) (#("
" 0 1 (fontified nil)) . 3304) (3304 . 3305) (#(" " 0 1 (fontified nil)) . -3304) (3271 . 3398) (#(" " 0 1 (fontified nil)) . 3271) (3246 . 3272) (#("
" 0 1 (fontified nil)) . -3246) (3044 . 3247) (#(" " 0 1 (fontified nil)) . 3044) (2900 . 3045) (#("
" 0 1 (fontified nil)) . -2900) (2815 . 2901) (#(" " 0 1 (fontified nil)) . 2815) (2544 . 2816) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(org-bullets define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1916 (fontified nil)) . -2544) (t 24635 59915 0 0)) nil (24636 11318 932233 0) 0 nil]) ((21604 . 21605)) nil (24635 59915 524939 0) 0 nil]) ((#("4" 0 1 (fontified t face font-lock-string-face)) . -21604) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -21605) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 21606) nil (24635 59915 524971 0) 0 nil] [nil ([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 21600) (undo-tree-id6 . -1)) ((21600 . 21601)) (24635 59881 397788 0) 0 nil]) ((#("red4r" 0 5 (fontified t face font-lock-string-face)) . -21601) (undo-tree-id4 . -5) 21606) ((21601 . 21606)) (24635 59909 732699 0) 0 nil]) ((21605 . 21606) (t 24635 59808 0 0)) nil (24635 59910 380484 0) 0 nil]) ((21604 . 21605) (t 24635 51768 0 0)) nil (24635 59808 868165 0) 0 nil]) ((5553 . 5559) (#("window" 0 6 (fontified t face font-lock-comment-face)) . 5553) (t 24635 51755 0 0)) nil (24635 51768 865949 0) 0 nil]) ((6193 . 6201)) nil (24635 51755 396203 0) 0 nil]) ((6173 . 6193)) nil (24635 51755 396209 0) 0 nil]) ((#("v" 0 1 (fontified t face font-lock-comment-face)) . -6173) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 6174) nil (24635 51755 396236 0) 0 nil]) ((6157 . 6174) (t 24635 51682 0 0)) nil (24635 51755 396239 0) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 6365) (#("S" 0 1 (fontified t face font-lock-string-face)) . 6365)) nil (24635 51682 619370 0) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 6313) (#("S" 0 1 (fontified t face font-lock-string-face)) . 6313)) nil (24635 51682 619377 0) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 6247) (#("S" 0 1 (fontified t face font-lock-string-face)) . 6247)) nil (24635 51682 619381 0) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 6182) (#("S" 0 1 (fontified t face font-lock-string-face)) . 6182) (t 24635 51646 0 0)) nil (24635 51682 619383 0) 0 nil]) ((6369 . 6371)) nil (24635 51646 454347 0) 0 nil]) ((6315 . 6317)) nil (24635 51646 454353 0) 0 nil]) ((6247 . 6249)) nil (24635 51646 454356 0) 0 nil]) ((6180 . 6182)) nil (24635 51646 454358 0) 0 nil]) ((#("8" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("2" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("-" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("2" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("0" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("-" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("1" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("2" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("0" 0 1 (fontified t face font-lock-comment-face)) . 6157)) nil (24635 51646 454362 0) 0 nil]) ((#("2" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 6157) (#("e" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("d" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("o" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("m" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("-" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("g" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("r" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("o" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 6157) (#("o" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("t" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 6157) (#("d" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("e" 0 1 (fontified t face font-lock-comment-face)) . 6157)) nil (24635 51646 454370 0) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("c" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("l" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("f" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("n" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("o" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("c" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 6157) (#("-" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 6157) (#(")" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("L" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("R" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("T" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("N" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("O" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("C" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("+" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("T" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("F" 0 1 (fontified t face font-lock-comment-face)) . 6157)) nil (24635 51646 454380 0) 0 nil]) ((#("I" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("H" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("S" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 6157) (#("s" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("o" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("d" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("n" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 6157) (#("g" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("n" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("z" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("s" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("e" 0 1 (fontified t face font-lock-comment-face)) . 6157) (#("r" 0 1 (fontified t face font-lock-comment-face)) . 6157)) nil (24635 51646 454391 0) 0 nil]) ((apply 12 6225 6461 undo--wrap-and-run-primitive-undo 6225 6461 ((#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6408) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6356) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6290) (#(";; " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6225) 6473))) nil (24635 51646 454396 0) 0 nil]) ((6473 . 6474)) nil (24635 51646 454398 0) 0 nil]) ((nil rear-nonsticky nil 6472 . 6473) (nil fontified nil 6420 . 6473) (nil fontified nil 6417 . 6420) (nil fontified nil 6370 . 6417) (nil fontified nil 6365 . 6370) (nil fontified nil 6362 . 6365) (nil fontified nil 6296 . 6362) (nil fontified nil 6293 . 6296) (nil fontified nil 6228 . 6293) (nil fontified nil 6225 . 6228) (nil fontified nil 6157 . 6225) (nil fontified nil 6154 . 6157) (6154 . 6473) (t 24635 51158 0 0)) nil (24635 51646 454403 0) 0 nil]) ((nil rear-nonsticky nil 5903 . 5904) (nil fontified nil 5894 . 5904) (5894 . 5904) (#(";" 0 1 (face font-lock-comment-face fontified t)) . -5894) (undo-tree-id61 . -1) 5895 (5889 . 5895) (5868 . 5889)) nil (24635 51158 429271 0) 0 nil]) ((apply -12 5869 6117 undo--wrap-and-run-primitive-undo 5869 6117 ((6061 . 6064) (6006 . 6009) (5937 . 5940) (5869 . 5872) 6105))) nil (24635 51158 429276 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 6106) (undo-tree-id62 . 1) (undo-tree-id63 . 1) (undo-tree-id64 . -1)) nil (24635 51158 429284 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 6106) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . 1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1)) nil (24635 51158 429303 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 6106) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1)) nil (24635 51158 429314 0) 0 nil]) ((#("(setq dddorg-support-shift-select t)
" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 34 (fontified t) 34 35 (rear-nonsticky t fontified t) 35 36 (fontified t) 36 37 (fontified t)) . 6106) (undo-tree-id77 . -36) (undo-tree-id78 . -9) (undo-tree-id79 . -37) (undo-tree-id80 . -37) (undo-tree-id81 . -37) 6115) nil (24635 51158 429326 0) 0 nil]) ((6114 . 6115)) nil (24635 51158 429328 0) 0 nil]) ((6112 . 6114) (t 24635 51072 0 0)) nil (24635 51158 429331 0) 0 nil]) ((6107 . 6112) (t 24635 51052 0 0)) nil (24635 51072 789371 0) 0 nil]) ((6133 . 6134)) nil (24635 51052 873949 0) 0 nil]) ((nil rear-nonsticky nil 6132 . 6133) (nil fontified nil 6106 . 6133) (6106 . 6133)) nil (24635 51052 873955 0) 0 nil]) ((#("(define-key global-map (kbd \"S-C-<left>\")  'shrink-window-horizontally)
(define-key global-map (kbd \"S-C-<right>\") 'enlarge-window-horizontally)
(define-key global-map (kbd \"S-C-<down>\")  'shrink-window)
(define-key global-map (kbd \"S-C-<up>\")    'enlarge-window)
" 0 1 (fontified t) 1 28 (fontified t) 28 40 (face font-lock-string-face fontified t) 40 61 (fontified t) 61 71 (fontified t) 71 72 (fontified t) 72 100 (fontified t) 100 113 (face font-lock-string-face fontified t) 113 145 (fontified t) 145 173 (fontified t) 173 185 (face font-lock-string-face fontified t) 185 204 (fontified t) 204 232 (fontified t) 232 242 (face font-lock-string-face fontified t) 242 255 (fontified t) 255 263 (fontified t) 263 264 (fontified t)) . 6109) (undo-tree-id36 . -263) (undo-tree-id37 . -263) (undo-tree-id38 . -1) (undo-tree-id39 . -264) (undo-tree-id40 . -72) (undo-tree-id41 . -72) (undo-tree-id42 . -204) (undo-tree-id43 . -264) (undo-tree-id44 . -91) (undo-tree-id45 . -216) (undo-tree-id46 . -17) (undo-tree-id47 . -17) (undo-tree-id48 . -17) (undo-tree-id49 . -17) (undo-tree-id50 . -204) (undo-tree-id51 . -204) (undo-tree-id52 . -145) (undo-tree-id53 . -145) (undo-tree-id54 . -72) (undo-tree-id55 . -72) (undo-tree-id56 . -17) (undo-tree-id57 . -263) (undo-tree-id58 . -263) 6372) nil (24635 51052 874014 0) 0 nil]) ((#(" grlbal" 0 1 (rear-nonsticky nil fontified nil) 1 7 (fontified nil)) . 6106) (undo-tree-id59 . -1) (#(" grlbal" 0 1 (fontified t) 1 7 (fontified t)) . 6114) (#(" grlbal" 0 1 (fontified t) 1 7 (fontified t)) . 6122) (#("grlbal" 0 6 (fontified t)) . 6131) (undo-tree-id60 . -5) (nil rear-nonsticky t 6106 . 6107)) nil (24635 51052 874022 0) 0 nil]) ((nil rear-nonsticky nil 6106 . 6107) (6131 . 6137) (6122 . 6129) (6114 . 6121) (6106 . 6113)) nil (24635 51052 874026 0) 0 nil]) ((6106 . 6108) (6105 . 6106) (t 24635 50704 0 0) 6105) nil (24635 51052 874029 0) 0 nil]) ((6327 . 6328) (6326 . 6327) (6325 . 6326) (6324 . 6325) (6323 . 6324) (6322 . 6323) (6268 . 6269) (6267 . 6268) (6266 . 6267) (6265 . 6266) (6264 . 6265) (6263 . 6264) (6195 . 6196) (6194 . 6195) (6193 . 6194) (6192 . 6193) (6191 . 6192) (6190 . 6191) (6118 . 6124) (#("grlbal" 0 6 (fontified t)) . 6304) (undo-tree-id32 . -5) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (#("grlbal" 0 6 (fontified t)) . 6251) (#("grlbal" 0 6 (fontified t)) . 6184) (#("grlbal" 0 6 (fontified t)) . 6118) (undo-tree-id35 . -5) 6327 (t 24635 50694 0 0)) nil (24635 50704 86173 0) 0 nil]) ((6327 . 6328) (6326 . 6327) (6325 . 6326) (6324 . 6325) (6323 . 6324) (6322 . 6323) (6268 . 6269) (6267 . 6268) (6266 . 6267) (6265 . 6266) (6264 . 6265) (6263 . 6264) (6195 . 6196) (6194 . 6195) (6193 . 6194) (6192 . 6193) (6191 . 6192) (6190 . 6191) (6118 . 6124) (#("org-mode" 0 8 (fontified t)) . 6304) (undo-tree-id29 . -7) (undo-tree-id30 . -7) (undo-tree-id31 . -7) (#("org-mode" 0 8 (fontified t)) . 6251) (#("org-mode" 0 8 (fontified t)) . 6184) (#("org-mode" 0 8 (fontified t)) . 6118) 6335 (t 24635 50525 0 0)) nil (24635 50694 133415 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 5834) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (t 24635 50519 0 0)) nil (24635 50525 335300 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 6379) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) nil (24635 50519 408610 0) 0 nil]) ((#("
(define-key org-mode-map (kbd \"<S-down>\") 'the-command-you-want)
(define-key org-mode-map (kbd \"<S-up>\") 'the-command-you-want)
(define-key org-mode-map (kbd \"<S-left>\") 'the-command-you-want)
(define-key org-mode-map (kbd \"<S-right>\") 'the-command-you-want)
" 0 1 (fontified t) 1 31 (fontified t) 31 41 (face font-lock-string-face fontified t) 41 90 (fontified t) 90 96 (fontified t) 96 104 (face font-lock-string-face fontified t) 104 129 (fontified t) 129 159 (fontified t) 159 169 (face font-lock-string-face fontified t) 169 224 (fontified t) 224 235 (face font-lock-string-face fontified t) 235 258 (fontified t) 258 259 (fontified t rear-nonsticky t) 259 260 (fontified t)) . 6380) (undo-tree-id7 . -194) (undo-tree-id8 . -194) (undo-tree-id9 . -260) (undo-tree-id10 . -1) (undo-tree-id11 . -194) (undo-tree-id12 . -260) (undo-tree-id13 . -194) (undo-tree-id14 . -260) (undo-tree-id15 . -194) (undo-tree-id16 . -194) (undo-tree-id17 . -194) 6574) nil (24635 50519 408644 0) 0 nil]) ((#("
" 0 1 (rear-nonsticky t fontified t)) . 6107) (undo-tree-id18 . -1) (undo-tree-id19 . -1)) nil (24635 50519 408665 0) 0 nil]) ((6341 . 6342) (6340 . 6341) (6339 . 6340) (6338 . 6339) (6337 . 6338) (6336 . 6337) (6335 . 6336) (6334 . 6335) (6333 . 6334) (6332 . 6333) (6331 . 6332) (6330 . 6331) (6329 . 6330) (6328 . 6329) (6327 . 6328) (6326 . 6327) (6325 . 6326) (6324 . 6325) (6323 . 6324) (6322 . 6323) (6321 . 6322) (6320 . 6321) (6319 . 6320) (6280 . 6281) (6279 . 6280) (6278 . 6279) (6277 . 6278) (6276 . 6277) (6275 . 6276) (6274 . 6275) (6273 . 6274) (6272 . 6273) (6271 . 6272) (6270 . 6271) (6269 . 6270) (6268 . 6269) (6267 . 6268) (6266 . 6267) (6265 . 6266) (6264 . 6265) (6263 . 6264) (6262 . 6263) (6261 . 6262) (6260 . 6261) (6259 . 6260) (6258 . 6259) (6205 . 6206) (6204 . 6205) (6203 . 6204) (6202 . 6203) (6201 . 6202) (6200 . 6201) (6199 . 6200) (6198 . 6199) (6197 . 6198) (6196 . 6197) (6195 . 6196) (6194 . 6195) (6193 . 6194) (6192 . 6193) (6191 . 6192) (6190 . 6191) (6189 . 6190) (6188 . 6189) (6187 . 6188) (6186 . 6187) (6185 . 6186) (6184 . 6185) (6183 . 6184) (6130 . 6132) (6109 . 6130) (#("global-set-key" 0 14 (fontified t)) . 6250) (undo-tree-id20 . -13) (undo-tree-id21 . -13) (undo-tree-id22 . -13) (#("global-set-key" 0 14 (fontified t)) . 6212) (#("global-set-key" 0 14 (fontified t)) . 6160) (#("global-set-key" 0 14 (fontified t)) . 6109) 6305) nil (24635 50519 408715 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 6345) (undo-tree-id23 . -1)) nil (24635 50519 408725 0) 0 nil]) ((nil rear-nonsticky nil 6107 . 6108) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -6343) (6107 . 6344)) nil (24635 50519 408728 0) 0 nil]) ((6106 . 6110)) nil (24635 50519 408731 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 6367) (#("
" 0 1 (fontified t)) . 6367) (#("
" 0 1 (fontified t rear-nonsticky t)) . 6367) (undo-tree-id24 . -1)) nil (24635 50519 408736 0) 0 nil]) ((#("(GLOBAL-SET-KEY (KBD \"S-C-<UP>\")    'ENLARGE-WINDOW)" 0 21 (fontified t) 21 31 (face font-lock-string-face fontified t) 31 52 (fontified t)) . 6367)) nil (24635 50519 408739 0) 0 nil]) ((#(")" 0 1 (fontified t)) . 6366)) nil (24635 50519 408741 0) 0 nil]) ((#("W" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("D" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366)) nil (24635 50519 408744 0) 0 nil]) ((#("I" 0 1 (fontified t)) . 6366) (#("W" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("K" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366) (#("I" 0 1 (fontified t)) . 6366) (#("R" 0 1 (fontified t)) . 6366) (#("H" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366) (#("'" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366)) nil (24635 50519 408750 0) 0 nil]) ((#(" " 0 1 (fontified t)) . 6366) (#(")" 0 1 (fontified t)) . 6366) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 6366) (#(">" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366) (#("W" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("D" 0 1 (fontified t)) . 6366) (#("<" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("C" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("D" 0 1 (fontified t)) . 6366) (#("B" 0 1 (fontified t)) . 6366) (#("K" 0 1 (fontified t)) . 6366) (#("(" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("Y" 0 1 (fontified t)) . 6366)) nil (24635 50519 408759 0) 0 nil]) ((#("E" 0 1 (fontified t)) . 6366) (#("K" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("A" 0 1 (fontified t)) . 6366) (#("B" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("G" 0 1 (fontified t)) . 6366) (#("(" 0 1 (fontified t)) . 6366) (#("
" 0 1 (fontified t)) . 6366) (#(")" 0 1 (fontified t)) . 6366) (#("Y" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("A" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366)) nil (24635 50519 408771 0) 0 nil]) ((#("N" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("Z" 0 1 (fontified t)) . 6366) (#("I" 0 1 (fontified t)) . 6366) (#("R" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("H" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("W" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("D" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366) (#("I" 0 1 (fontified t)) . 6366) (#("W" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("G" 0 1 (fontified t)) . 6366) (#("R" 0 1 (fontified t)) . 6366) (#("A" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366)) nil (24635 50519 408782 0) 0 nil]) ((#("E" 0 1 (fontified t)) . 6366) (#("'" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#(")" 0 1 (fontified t)) . 6366) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 6366) (#(">" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366) (#("H" 0 1 (fontified t)) . 6366) (#("G" 0 1 (fontified t)) . 6366) (#("I" 0 1 (fontified t)) . 6366) (#("R" 0 1 (fontified t)) . 6366) (#("<" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("C" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("D" 0 1 (fontified t)) . 6366) (#("B" 0 1 (fontified t)) . 6366) (#("K" 0 1 (fontified t)) . 6366)) nil (24635 50519 408794 0) 0 nil]) ((#("(" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("Y" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("K" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("A" 0 1 (fontified t)) . 6366) (#("B" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("G" 0 1 (fontified t)) . 6366) (#("(" 0 1 (fontified t)) . 6366) (#("
" 0 1 (fontified t)) . 6366) (#(")" 0 1 (fontified t)) . 6366) (#("Y" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366)) nil (24635 50519 408805 0) 0 nil]) ((#("L" 0 1 (fontified t)) . 6366) (#("A" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("Z" 0 1 (fontified t)) . 6366) (#("I" 0 1 (fontified t)) . 6366) (#("R" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("H" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("W" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("D" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366) (#("I" 0 1 (fontified t)) . 6366) (#("W" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("K" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366) (#("I" 0 1 (fontified t)) . 6366)) nil (24635 50519 408816 0) 0 nil]) ((#("R" 0 1 (fontified t)) . 6366) (#("H" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366) (#("'" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#(")" 0 1 (fontified t)) . 6366) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 6366) (#(">" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366) (#("F" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("<" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("C" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("D" 0 1 (fontified t)) . 6366)) nil (24635 50519 408828 0) 0 nil]) ((#("B" 0 1 (fontified t)) . 6366) (#("K" 0 1 (fontified t)) . 6366) (#("(" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("Y" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("K" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366) (#("-" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("A" 0 1 (fontified t)) . 6366) (#("B" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("G" 0 1 (fontified t)) . 6366) (#("(" 0 1 (fontified t)) . 6366) (#("
" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366)) nil (24635 50519 408839 0) 0 nil]) ((#("W" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("D" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366) (#("I" 0 1 (fontified t)) . 6366) (#("W" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("G" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366) (#("I" 0 1 (fontified t)) . 6366) (#("Z" 0 1 (fontified t)) . 6366) (#("I" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("R" 0 1 (fontified t)) . 6366) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 6366) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 6366) (#("
" 0 1 (fontified t)) . 6366) (#("
" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("G" 0 1 (fontified t)) . 6366)) nil (24635 50519 408851 0) 0 nil]) ((#("A" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("R" 0 1 (fontified t)) . 6366) (#("A" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("Y" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("1" 0 1 (fontified t)) . 6366) (#("
" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("C" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("R" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366) (#("O" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366) (#("N" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366)) nil (24635 50519 408862 0) 0 nil]) ((#("C" 0 1 (fontified t)) . 6366) (#("
" 0 1 (fontified t)) . 6366) (#("1" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("V" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("L" 0 1 (fontified t)) . 6366) (#("
" 0 1 (fontified t)) . 6366) (#("R" 0 1 (fontified t)) . 6366) (#("A" 0 1 (fontified t)) . 6366) (#("T" 0 1 (fontified t)) . 6366) (#("A" 0 1 (fontified t)) . 6366) (#("V" 0 1 (fontified t)) . 6366) (#("A" 0 1 (fontified t)) . 6366) (#(" " 0 1 (fontified t)) . 6366) (#("R" 0 1 (fontified t)) . 6366) (#("E" 0 1 (fontified t)) . 6366) (#("S" 0 1 (fontified t)) . 6366) (#("U" 0 1 (fontified t)) . 6366)) nil (24635 50519 408873 0) 0 nil]) ((nil rear-nonsticky nil 6364 . 6365) (nil fontified nil 6107 . 6365) (6107 . 6365)) nil (24635 50519 408880 0) 0 nil]) ((6108 . 6409) (#("User avatar
level 1
Centotrecento
1 year ago

;;resizing windows
(global-set-key (kbd \"S-C-<left>\")  'shrink-window-horizontally)
(global-set-key (kbd \"S-C-<right>\") 'enlarge-window-horizontally)
(global-set-key (kbd \"S-C-<down>\")  'shrink-window)
(global-set-key (kbd \"S-C-<up>\")    'enlarge-window)
" 0 46 (fontified t) 46 48 (face font-lock-comment-delimiter-face fontified t) 48 65 (face font-lock-comment-face fontified t) 65 86 (fontified t) 86 98 (face font-lock-string-face fontified t) 98 151 (fontified t) 151 164 (face font-lock-string-face fontified t) 164 217 (fontified t) 217 229 (face font-lock-string-face fontified t) 229 269 (fontified t) 269 279 (face font-lock-string-face fontified t) 279 300 (fontified t) 300 301 (rear-nonsticky t fontified t)) . -6108) 6409) nil (24635 50519 408882 0) 0 nil]) ((nil rear-nonsticky nil 6408 . 6409) (nil fontified nil 6108 . 6409) (6108 . 6409)) nil (24635 50519 408885 0) 0 nil]) ((6107 . 6110) (t 24635 50037 0 0)) nil (24635 50519 408888 0) 0 nil]) ((5863 . 5869)) nil (24635 50037 560159 0) 0 nil]) ((5854 . 5863)) nil (24635 50037 560165 0) 0 nil]) ((5837 . 5838) (t 24635 49935 0 0)) nil (24635 50037 560167 0) 0 nil]) ((apply -12 5610 5833 undo--wrap-and-run-primitive-undo 5610 5833 ((5776 . 5779) (5720 . 5723) (5664 . 5667) (5610 . 5613) 5821))) nil (24635 49935 891877 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 5823)) nil (24635 49935 891883 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 5823) (#("o" 0 1 (fontified t)) . 5823) (#("g" 0 1 (fontified t)) . 5823)) nil (24635 49935 891886 0) 0 nil]) ((#("a" 0 1 (fontified t)) . 5823) (#(" " 0 1 (fontified t)) . 5823) (#("r" 0 1 (fontified t)) . 5823) (#("a" 0 1 (fontified t)) . 5823) (#("e" 0 1 (fontified t)) . 5823) (#("y" 0 1 (fontified t)) . 5823) (#(" " 0 1 (fontified t)) . 5823) (#("1" 0 1 (fontified t)) . 5823) (#("
" 0 1 (fontified t)) . 5823) (#("o" 0 1 (fontified t)) . 5823) (#("t" 0 1 (fontified t)) . 5823) (#("n" 0 1 (fontified t)) . 5823) (#("e" 0 1 (fontified t)) . 5823) (#("c" 0 1 (fontified t)) . 5823) (#("e" 0 1 (fontified t)) . 5823) (#("r" 0 1 (fontified t)) . 5823) (#("t" 0 1 (fontified t)) . 5823) (#("o" 0 1 (fontified t)) . 5823) (#("t" 0 1 (fontified t)) . 5823) (#("n" 0 1 (fontified t)) . 5823) (#("e" 0 1 (fontified t)) . 5823)) nil (24635 49935 891894 0) 0 nil]) ((#("C" 0 1 (fontified t)) . 5823) (#("
" 0 1 (fontified t)) . 5823) (#("1" 0 1 (fontified t)) . 5823) (#(" " 0 1 (fontified t)) . 5823) (#("l" 0 1 (fontified t)) . 5823) (#("e" 0 1 (fontified t)) . 5823) (#("v" 0 1 (fontified t)) . 5823) (#("e" 0 1 (fontified t)) . 5823) (#("l" 0 1 (fontified t)) . 5823) (#("
" 0 1 (fontified t)) . 5823) (#("r" 0 1 (fontified t)) . 5823) (#("a" 0 1 (fontified t)) . 5823) (#("t" 0 1 (fontified t)) . 5823) (#("a" 0 1 (fontified t)) . 5823) (#("v" 0 1 (fontified t)) . 5823) (#("a" 0 1 (fontified t)) . 5823) (#(" " 0 1 (fontified t)) . 5823) (#("r" 0 1 (fontified t)) . 5823) (#("e" 0 1 (fontified t)) . 5823) (#("s" 0 1 (fontified t)) . 5823) (#("U" 0 1 (fontified t)) . 5823)) nil (24635 49935 891906 0) 0 nil]) ((nil rear-nonsticky nil 6123 . 6124) (nil fontified nil 5823 . 6124) (5823 . 6124)) nil (24635 49935 891912 0) 0 nil]) ((5822 . 5824) (t 24634 34727 0 0)) nil (24635 49935 891914 0) 0 nil]) ((4462 . 5534) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4462) (4458 . 4460) (#("
" 0 1 (fontified nil)) . -4458) (3894 . 4459) (#(" " 0 1 (fontified nil)) . 3894) (3864 . 3895) (3839 . 3842) (3802 . 3805) (3767 . 3770) (3717 . 3720) (#("
" 0 1 (fontified nil)) . -3852) (3828 . 3830) (3794 . 3796) (3762 . 3764) (3715 . 3717) (3844 . 3845) (3821 . 3822) (#("
" 0 1 (fontified nil)) . 3821) (3821 . 3822) (#(" " 0 1 (fontified nil)) . -3821) (3789 . 3790) (#("
" 0 1 (fontified nil)) . 3789) (3789 . 3790) (#(" " 0 1 (fontified nil)) . -3789) (3759 . 3760) (#("
" 0 1 (fontified nil)) . 3759) (3759 . 3760) (#(" " 0 1 (fontified nil)) . -3759) (3714 . 3715) (#("
" 0 1 (fontified nil)) . 3714) (3714 . 3715) (#(" " 0 1 (fontified nil)) . -3714) (3674 . 3844) (#(" " 0 1 (fontified nil)) . 3674) (3408 . 3675) (3377 . 3380) (3307 . 3310) (#("
" 0 1 (fontified nil)) . -3402) (3372 . 3374) (3305 . 3307) (3398 . 3399) (3369 . 3370) (#(" " 0 1 (fontified nil)) . -3369) (3304 . 3305) (#("
" 0 1 (fontified nil)) . 3304) (3304 . 3305) (#(" " 0 1 (fontified nil)) . -3304) (3271 . 3398) (#(" " 0 1 (fontified nil)) . 3271) (3246 . 3272) (#("
" 0 1 (fontified nil)) . -3246) (3044 . 3247) (#(" " 0 1 (fontified nil)) . 3044) (2900 . 3045) (#("
" 0 1 (fontified nil)) . -2900) (2815 . 2901) (#(" " 0 1 (fontified nil)) . 2815) (2544 . 2816) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(define-word smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1904 (fontified nil)) . -2544) (t 24633 36439 0 0)) nil (24634 34727 169760 0) 0 nil]) ((4450 . 5522) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4450) (4446 . 4448) (#("
" 0 1 (fontified nil)) . -4446) (3894 . 4447) (#(" " 0 1 (fontified nil)) . 3894) (3864 . 3895) (3839 . 3842) (3802 . 3805) (3767 . 3770) (3717 . 3720) (#("
" 0 1 (fontified nil)) . -3852) (3828 . 3830) (3794 . 3796) (3762 . 3764) (3715 . 3717) (3844 . 3845) (3821 . 3822) (#("
" 0 1 (fontified nil)) . 3821) (3821 . 3822) (#(" " 0 1 (fontified nil)) . -3821) (3789 . 3790) (#("
" 0 1 (fontified nil)) . 3789) (3789 . 3790) (#(" " 0 1 (fontified nil)) . -3789) (3759 . 3760) (#("
" 0 1 (fontified nil)) . 3759) (3759 . 3760) (#(" " 0 1 (fontified nil)) . -3759) (3714 . 3715) (#("
" 0 1 (fontified nil)) . 3714) (3714 . 3715) (#(" " 0 1 (fontified nil)) . -3714) (3674 . 3844) (#(" " 0 1 (fontified nil)) . 3674) (3408 . 3675) (3377 . 3380) (3307 . 3310) (#("
" 0 1 (fontified nil)) . -3402) (3372 . 3374) (3305 . 3307) (3398 . 3399) (3369 . 3370) (#(" " 0 1 (fontified nil)) . -3369) (3304 . 3305) (#("
" 0 1 (fontified nil)) . 3304) (3304 . 3305) (#(" " 0 1 (fontified nil)) . -3304) (3271 . 3398) (#(" " 0 1 (fontified nil)) . 3271) (3246 . 3272) (#("
" 0 1 (fontified nil)) . -3246) (3044 . 3247) (#(" " 0 1 (fontified nil)) . 3044) (2900 . 3045) (#("
" 0 1 (fontified nil)) . -2900) (2815 . 2901) (#(" " 0 1 (fontified nil)) . 2815) (2544 . 2816) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1892 (fontified nil)) . -2544) (t 24633 20826 0 0)) nil (24633 36439 662780 0) 0 nil]) ((4438 . 5510) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#EFF0F1\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#EAEAFF\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4438) (4434 . 4436) (#("
" 0 1 (fontified nil)) . -4434) (3894 . 4435) (#(" " 0 1 (fontified nil)) . 3894) (3864 . 3895) (3839 . 3842) (3802 . 3805) (3767 . 3770) (3717 . 3720) (#("
" 0 1 (fontified nil)) . -3852) (3828 . 3830) (3794 . 3796) (3762 . 3764) (3715 . 3717) (3844 . 3845) (3821 . 3822) (#("
" 0 1 (fontified nil)) . 3821) (3821 . 3822) (#(" " 0 1 (fontified nil)) . -3821) (3789 . 3790) (#("
" 0 1 (fontified nil)) . 3789) (3789 . 3790) (#(" " 0 1 (fontified nil)) . -3789) (3759 . 3760) (#("
" 0 1 (fontified nil)) . 3759) (3759 . 3760) (#(" " 0 1 (fontified nil)) . -3759) (3714 . 3715) (#("
" 0 1 (fontified nil)) . 3714) (3714 . 3715) (#(" " 0 1 (fontified nil)) . -3714) (3674 . 3844) (#(" " 0 1 (fontified nil)) . 3674) (3408 . 3675) (3377 . 3380) (3307 . 3310) (#("
" 0 1 (fontified nil)) . -3402) (3372 . 3374) (3305 . 3307) (3398 . 3399) (3369 . 3370) (#(" " 0 1 (fontified nil)) . -3369) (3304 . 3305) (#("
" 0 1 (fontified nil)) . 3304) (3304 . 3305) (#(" " 0 1 (fontified nil)) . -3304) (3271 . 3398) (#(" " 0 1 (fontified nil)) . 3271) (3246 . 3272) (#("
" 0 1 (fontified nil)) . -3246) (3044 . 3247) (#(" " 0 1 (fontified nil)) . 3044) (2900 . 3045) (#("
" 0 1 (fontified nil)) . -2900) (2815 . 2901) (#(" " 0 1 (fontified nil)) . 2815) (2544 . 2816) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1892 (fontified nil)) . -2544) (t 24633 19809 0 0)) nil (24633 20826 272720 0) 0 nil]) ((4438 . 5510) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 ;; '(org-block ((t (:background \"#f1f6f9\" :extend t))))
 ;; '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 ;; '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1081 (fontified nil)) . -4438) (4434 . 4436) (#("
" 0 1 (fontified nil)) . -4434) (3894 . 4435) (#(" " 0 1 (fontified nil)) . 3894) (3864 . 3895) (3839 . 3842) (3802 . 3805) (3767 . 3770) (3717 . 3720) (#("
" 0 1 (fontified nil)) . -3852) (3828 . 3830) (3794 . 3796) (3762 . 3764) (3715 . 3717) (3844 . 3845) (3821 . 3822) (#("
" 0 1 (fontified nil)) . 3821) (3821 . 3822) (#(" " 0 1 (fontified nil)) . -3821) (3789 . 3790) (#("
" 0 1 (fontified nil)) . 3789) (3789 . 3790) (#(" " 0 1 (fontified nil)) . -3789) (3759 . 3760) (#("
" 0 1 (fontified nil)) . 3759) (3759 . 3760) (#(" " 0 1 (fontified nil)) . -3759) (3714 . 3715) (#("
" 0 1 (fontified nil)) . 3714) (3714 . 3715) (#(" " 0 1 (fontified nil)) . -3714) (3674 . 3844) (#(" " 0 1 (fontified nil)) . 3674) (3408 . 3675) (3377 . 3380) (3307 . 3310) (#("
" 0 1 (fontified nil)) . -3402) (3372 . 3374) (3305 . 3307) (3398 . 3399) (3369 . 3370) (#(" " 0 1 (fontified nil)) . -3369) (3304 . 3305) (#("
" 0 1 (fontified nil)) . 3304) (3304 . 3305) (#(" " 0 1 (fontified nil)) . -3304) (3271 . 3398) (#(" " 0 1 (fontified nil)) . 3271) (3246 . 3272) (#("
" 0 1 (fontified nil)) . -3246) (3044 . 3247) (#(" " 0 1 (fontified nil)) . 3044) (2900 . 3045) (#("
" 0 1 (fontified nil)) . -2900) (2815 . 2901) (#(" " 0 1 (fontified nil)) . 2815) (2544 . 2816) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/testx-emacs-org-agenda.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(smart-mode-line powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1939 (fontified nil)) . -2544) (t 24630 56909 0 0)) nil (24633 19809 978362 0) 0 nil]) ((nil rear-nonsticky nil 1375 . 1376) (nil fontified nil 1366 . 1376) (1366 . 1376)) nil (24630 56909 959648 0) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-face)) . -1366) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 1367) nil (24630 56909 959677 0) 0 nil]) ((1365 . 1367)) nil (24630 56909 959680 0) 0 nil]) ((1344 . 1365)) nil (24630 56909 959682 0) 0 nil]) ((1342 . 1344)) nil (24630 56909 959684 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -1342) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t)) . -1343) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t)) . -1344) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#(" " 0 1 (fontified t)) . -1345) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t)) . -1346) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#(" " 0 1 (fontified t)) . -1347) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t)) . -1348) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t)) . -1349) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t)) . -1350) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t)) . -1351) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 1352) nil (24630 56909 959725 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -1352) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#(" " 0 1 (fontified t)) . -1353) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#(" " 0 1 (fontified t)) . -1354) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#(" " 0 1 (fontified t)) . -1355) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t)) . -1356) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t)) . -1357) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#(" " 0 1 (fontified t)) . -1358) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#(" " 0 1 (fontified t)) . -1359) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#(" " 0 1 (fontified t)) . -1360) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t)) . -1361) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#(" " 0 1 (fontified t)) . -1362) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#(" " 0 1 (fontified t)) . -1363) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#(" " 0 1 (fontified t)) . -1364) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#(" " 0 1 (fontified t)) . -1365) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#(" " 0 1 (fontified t)) . -1366) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#(" " 0 1 (fontified t)) . -1367) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#(" " 0 1 (fontified t)) . -1368) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#(" " 0 1 (fontified t)) . -1369) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (fontified t)) . -1370) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#(" " 0 1 (fontified t)) . -1371) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#(" " 0 1 (fontified t)) . -1372) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 1373) nil (24630 56909 959807 0) 0 nil]) ((1362 . 1373)) nil (24630 56909 959816 0) 0 nil]) ((1341 . 1362)) nil (24630 56909 959818 0) 0 nil]) ((nil rear-nonsticky nil 1340 . 1341) (nil fontified nil 1315 . 1341) (1315 . 1341)) nil (24630 56909 959820 0) 0 nil]) ((1314 . 1315) (t 24629 41584 0 0)) nil (24630 56909 959822 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 22489) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1)) nil (24629 41584 560899 0) 0 nil]) ((#("((nil . ((org-roam-directory . \"~/Desktop/MyCloudSync/1. Next Actions/ELT/4. Sector in Finance/Presentation\"))))" 0 31 (fontified t) 31 32 (face font-lock-string-face fontified t) 32 107 (face font-lock-string-face fontified t) 107 108 (face font-lock-string-face rear-nonsticky t fontified t) 108 111 (fontified t) 111 112 (rear-nonsticky t fontified t)) . 22489) (undo-tree-id59 . -32) (undo-tree-id60 . -32) (undo-tree-id61 . -112) (t 24629 41537 0 0)) nil (24629 41584 560913 0) 0 nil]) ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 22597)) nil (24629 41537 9897 0) 0 nil]) ((nil rear-nonsticky nil 22596 . 22597) (nil fontified nil 22521 . 22597) (22521 . 22597)) nil (24629 41537 9903 0) 0 nil]) ((#("~" 0 1 (face font-lock-string-face fontified t)) . -22521) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -22522) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -22523) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -22524) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -22525) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -22526) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -22527) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 22528) nil (24629 41537 9950 0) 0 nil]) ((#("d" 0 1 (face font-lock-string-face fontified t)) . -22528) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -22529) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -22530) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -22531) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -22532) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -22533) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -22534) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -22535) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -22536) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -22537) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -22538) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -22539) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -22540) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -22541) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -22542) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -22543) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -22544) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -22545) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -22546) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -22547) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -22548) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 22549) nil (24629 41537 10036 0) 0 nil]) ((nil rear-nonsticky nil 22553 . 22554) (nil fontified nil 22489 . 22554) (22489 . 22554)) nil (24629 41537 10045 0) 0 nil]) ((22489 . 22490) (t 24629 29312 0 0)) nil (24629 41537 10048 0) 0 nil]) ((apply -9 4869 5145 undo--wrap-and-run-primitive-undo 4869 5145 ((5038 . 5041) (4927 . 4930) (4870 . 4873) 5136)) (t 24629 27040 0 0)) nil (24629 29312 747712 0) 0 nil]) ((22373 . 22376) (t 24629 26093 0 0)) nil (24629 27040 701216 0) 0 nil]) ((22399 . 22400) (t 24629 26005 0 0)) nil (24629 26093 768336 0) 0 nil]) ((22473 . 22475)) nil (24629 26005 422337 0) 0 nil]) ((nil rear-nonsticky nil 22472 . 22473) (nil fontified nil 22399 . 22473) (22399 . 22473)) nil (24629 26005 422344 0) 0 nil]) ((22397 . 22399)) nil (24629 26005 422346 0) 0 nil]) ((22379 . 22397) (#("org-roam-direc" 0 14 (fontified t)) . -22379) (undo-tree-id0 . -14) (undo-tree-id1 . 14) (undo-tree-id2 . -14) 22393) nil (24629 26005 422375 0) 0 nil]) ((22373 . 22393)) nil (24629 26005 422378 0) 0 nil]) ((22373 . 22374) (t 24629 24337 0 0)) nil (24629 26005 422380 0) 0 nil]) ((4423 . 5495) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#f1f6f9\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4423) (4419 . 4421) (#("
" 0 1 (fontified nil)) . -4419) (3879 . 4420) (#(" " 0 1 (fontified nil)) . 3879) (3849 . 3880) (3824 . 3827) (3787 . 3790) (3752 . 3755) (3702 . 3705) (#("
" 0 1 (fontified nil)) . -3837) (3813 . 3815) (3779 . 3781) (3747 . 3749) (3700 . 3702) (3829 . 3830) (3806 . 3807) (#("
" 0 1 (fontified nil)) . 3806) (3806 . 3807) (#(" " 0 1 (fontified nil)) . -3806) (3774 . 3775) (#("
" 0 1 (fontified nil)) . 3774) (3774 . 3775) (#(" " 0 1 (fontified nil)) . -3774) (3744 . 3745) (#("
" 0 1 (fontified nil)) . 3744) (3744 . 3745) (#(" " 0 1 (fontified nil)) . -3744) (3699 . 3700) (#("
" 0 1 (fontified nil)) . 3699) (3699 . 3700) (#(" " 0 1 (fontified nil)) . -3699) (3659 . 3829) (#(" " 0 1 (fontified nil)) . 3659) (3393 . 3660) (3362 . 3365) (3292 . 3295) (#("
" 0 1 (fontified nil)) . -3387) (3357 . 3359) (3290 . 3292) (3383 . 3384) (3354 . 3355) (#(" " 0 1 (fontified nil)) . -3354) (3289 . 3290) (#("
" 0 1 (fontified nil)) . 3289) (3289 . 3290) (#(" " 0 1 (fontified nil)) . -3289) (3256 . 3383) (#(" " 0 1 (fontified nil)) . 3256) (3231 . 3257) (#("
" 0 1 (fontified nil)) . -3231) (2982 . 3232) (#(" " 0 1 (fontified nil)) . 2982) (2838 . 2983) (#("
" 0 1 (fontified nil)) . -2838) (2753 . 2839) (#(" " 0 1 (fontified nil)) . 2753) (2482 . 2754) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/testx-emacs-org-agenda.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(powerthesaurus indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1923 (fontified nil)) . -2482) (t 24629 5465 0 0)) nil (24629 24337 712235 0) 0 nil]) ((4407 . 5479) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#f1f6f9\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4407) (4403 . 4405) (#("
" 0 1 (fontified nil)) . -4403) (3879 . 4404) (#(" " 0 1 (fontified nil)) . 3879) (3849 . 3880) (3824 . 3827) (3787 . 3790) (3752 . 3755) (3702 . 3705) (#("
" 0 1 (fontified nil)) . -3837) (3813 . 3815) (3779 . 3781) (3747 . 3749) (3700 . 3702) (3829 . 3830) (3806 . 3807) (#("
" 0 1 (fontified nil)) . 3806) (3806 . 3807) (#(" " 0 1 (fontified nil)) . -3806) (3774 . 3775) (#("
" 0 1 (fontified nil)) . 3774) (3774 . 3775) (#(" " 0 1 (fontified nil)) . -3774) (3744 . 3745) (#("
" 0 1 (fontified nil)) . 3744) (3744 . 3745) (#(" " 0 1 (fontified nil)) . -3744) (3699 . 3700) (#("
" 0 1 (fontified nil)) . 3699) (3699 . 3700) (#(" " 0 1 (fontified nil)) . -3699) (3659 . 3829) (#(" " 0 1 (fontified nil)) . 3659) (3393 . 3660) (3362 . 3365) (3292 . 3295) (#("
" 0 1 (fontified nil)) . -3387) (3357 . 3359) (3290 . 3292) (3383 . 3384) (3354 . 3355) (#(" " 0 1 (fontified nil)) . -3354) (3289 . 3290) (#("
" 0 1 (fontified nil)) . 3289) (3289 . 3290) (#(" " 0 1 (fontified nil)) . -3289) (3256 . 3383) (#(" " 0 1 (fontified nil)) . 3256) (3231 . 3257) (#("
" 0 1 (fontified nil)) . -3231) (2982 . 3232) (#(" " 0 1 (fontified nil)) . 2982) (2838 . 2983) (#("
" 0 1 (fontified nil)) . -2838) (2753 . 2839) (#(" " 0 1 (fontified nil)) . 2753) (2482 . 2754) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/testx-emacs-org-agenda.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(indent-guide focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1908 (fontified nil)) . -2482) (t 24629 5090 0 0)) nil (24629 5465 626930 0) 0 nil]) ((4392 . 5464) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#f1f6f9\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4392) (4388 . 4390) (#("
" 0 1 (fontified nil)) . -4388) (3879 . 4389) (#(" " 0 1 (fontified nil)) . 3879) (3849 . 3880) (3824 . 3827) (3787 . 3790) (3752 . 3755) (3702 . 3705) (#("
" 0 1 (fontified nil)) . -3837) (3813 . 3815) (3779 . 3781) (3747 . 3749) (3700 . 3702) (3829 . 3830) (3806 . 3807) (#("
" 0 1 (fontified nil)) . 3806) (3806 . 3807) (#(" " 0 1 (fontified nil)) . -3806) (3774 . 3775) (#("
" 0 1 (fontified nil)) . 3774) (3774 . 3775) (#(" " 0 1 (fontified nil)) . -3774) (3744 . 3745) (#("
" 0 1 (fontified nil)) . 3744) (3744 . 3745) (#(" " 0 1 (fontified nil)) . -3744) (3699 . 3700) (#("
" 0 1 (fontified nil)) . 3699) (3699 . 3700) (#(" " 0 1 (fontified nil)) . -3699) (3659 . 3829) (#(" " 0 1 (fontified nil)) . 3659) (3393 . 3660) (3362 . 3365) (3292 . 3295) (#("
" 0 1 (fontified nil)) . -3387) (3357 . 3359) (3290 . 3292) (3383 . 3384) (3354 . 3355) (#(" " 0 1 (fontified nil)) . -3354) (3289 . 3290) (#("
" 0 1 (fontified nil)) . 3289) (3289 . 3290) (#(" " 0 1 (fontified nil)) . -3289) (3256 . 3383) (#(" " 0 1 (fontified nil)) . 3256) (3231 . 3257) (#("
" 0 1 (fontified nil)) . -3231) (2982 . 3232) (#(" " 0 1 (fontified nil)) . 2982) (2838 . 2983) (#("
" 0 1 (fontified nil)) . -2838) (2753 . 2839) (#(" " 0 1 (fontified nil)) . 2753) (2482 . 2754) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/testx-emacs-org-agenda.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(focus ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1895 (fontified nil)) . -2482) (t 24629 4177 0 0)) nil (24629 5090 884869 0) 0 nil]) ((4379 . 5451) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#f1f6f9\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4379) (4375 . 4377) (#("
" 0 1 (fontified nil)) . -4375) (3879 . 4376) (#(" " 0 1 (fontified nil)) . 3879) (3849 . 3880) (3824 . 3827) (3787 . 3790) (3752 . 3755) (3702 . 3705) (#("
" 0 1 (fontified nil)) . -3837) (3813 . 3815) (3779 . 3781) (3747 . 3749) (3700 . 3702) (3829 . 3830) (3806 . 3807) (#("
" 0 1 (fontified nil)) . 3806) (3806 . 3807) (#(" " 0 1 (fontified nil)) . -3806) (3774 . 3775) (#("
" 0 1 (fontified nil)) . 3774) (3774 . 3775) (#(" " 0 1 (fontified nil)) . -3774) (3744 . 3745) (#("
" 0 1 (fontified nil)) . 3744) (3744 . 3745) (#(" " 0 1 (fontified nil)) . -3744) (3699 . 3700) (#("
" 0 1 (fontified nil)) . 3699) (3699 . 3700) (#(" " 0 1 (fontified nil)) . -3699) (3659 . 3829) (#(" " 0 1 (fontified nil)) . 3659) (3393 . 3660) (3362 . 3365) (3292 . 3295) (#("
" 0 1 (fontified nil)) . -3387) (3357 . 3359) (3290 . 3292) (3383 . 3384) (3354 . 3355) (#(" " 0 1 (fontified nil)) . -3354) (3289 . 3290) (#("
" 0 1 (fontified nil)) . 3289) (3289 . 3290) (#(" " 0 1 (fontified nil)) . -3289) (3256 . 3383) (#(" " 0 1 (fontified nil)) . 3256) (3231 . 3257) (#("
" 0 1 (fontified nil)) . -3231) (2982 . 3232) (#(" " 0 1 (fontified nil)) . 2982) (2838 . 2983) (#("
" 0 1 (fontified nil)) . -2838) (2753 . 2839) (#(" " 0 1 (fontified nil)) . 2753) (2482 . 2754) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/testx-emacs-org-agenda.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(ace-window neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1889 (fontified nil)) . -2482) (t 24629 2485 0 0)) nil (24629 4177 943721 0) 0 nil]) ((nil rear-nonsticky nil 5757 . 5758) (nil fontified nil 5748 . 5758) (5748 . 5758)) nil (24629 2485 646914 0) 0 nil]) ((#(";" 0 1 (face font-lock-comment-face fontified t)) . -5748) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 5749) nil (24629 2485 646942 0) 0 nil]) ((5748 . 5749)) nil (24629 2485 646945 0) 0 nil]) ((5734 . 5748)) nil (24629 2485 646947 0) 0 nil]) ((5733 . 5734)) nil (24629 2485 646948 0) 0 nil]) ((nil rear-nonsticky nil 5773 . 5774) (nil fontified nil 5734 . 5774) (5734 . 5774)) nil (24629 2485 646950 0) 0 nil]) ((5732 . 5736) (t 24629 2282 0 0)) nil (24629 2485 646952 0) 0 nil]) ((4373 . 5445) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#f1f6f9\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4373) (4369 . 4371) (#("
" 0 1 (fontified nil)) . -4369) (3879 . 4370) (#(" " 0 1 (fontified nil)) . 3879) (3849 . 3880) (3824 . 3827) (3787 . 3790) (3752 . 3755) (3702 . 3705) (#("
" 0 1 (fontified nil)) . -3837) (3813 . 3815) (3779 . 3781) (3747 . 3749) (3700 . 3702) (3829 . 3830) (3806 . 3807) (#("
" 0 1 (fontified nil)) . 3806) (3806 . 3807) (#(" " 0 1 (fontified nil)) . -3806) (3774 . 3775) (#("
" 0 1 (fontified nil)) . 3774) (3774 . 3775) (#(" " 0 1 (fontified nil)) . -3774) (3744 . 3745) (#("
" 0 1 (fontified nil)) . 3744) (3744 . 3745) (#(" " 0 1 (fontified nil)) . -3744) (3699 . 3700) (#("
" 0 1 (fontified nil)) . 3699) (3699 . 3700) (#(" " 0 1 (fontified nil)) . -3699) (3659 . 3829) (#(" " 0 1 (fontified nil)) . 3659) (3393 . 3660) (3362 . 3365) (3292 . 3295) (#("
" 0 1 (fontified nil)) . -3387) (3357 . 3359) (3290 . 3292) (3383 . 3384) (3354 . 3355) (#(" " 0 1 (fontified nil)) . -3354) (3289 . 3290) (#("
" 0 1 (fontified nil)) . 3289) (3289 . 3290) (#(" " 0 1 (fontified nil)) . -3289) (3256 . 3383) (#(" " 0 1 (fontified nil)) . 3256) (3231 . 3257) (#("
" 0 1 (fontified nil)) . -3231) (2982 . 3232) (#(" " 0 1 (fontified nil)) . 2982) (2838 . 2983) (#("
" 0 1 (fontified nil)) . -2838) (2753 . 2839) (#(" " 0 1 (fontified nil)) . 2753) (2482 . 2754) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/testx-emacs-org-agenda.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(neotree helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1878 (fontified nil)) . -2482) (t 24629 2050 0 0)) nil (24629 2282 555801 0) 0 nil]) ((4362 . 5434) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#f1f6f9\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4362) (4358 . 4360) (#("
" 0 1 (fontified nil)) . -4358) (3879 . 4359) (#(" " 0 1 (fontified nil)) . 3879) (3849 . 3880) (3824 . 3827) (3787 . 3790) (3752 . 3755) (3702 . 3705) (#("
" 0 1 (fontified nil)) . -3837) (3813 . 3815) (3779 . 3781) (3747 . 3749) (3700 . 3702) (3829 . 3830) (3806 . 3807) (#("
" 0 1 (fontified nil)) . 3806) (3806 . 3807) (#(" " 0 1 (fontified nil)) . -3806) (3774 . 3775) (#("
" 0 1 (fontified nil)) . 3774) (3774 . 3775) (#(" " 0 1 (fontified nil)) . -3774) (3744 . 3745) (#("
" 0 1 (fontified nil)) . 3744) (3744 . 3745) (#(" " 0 1 (fontified nil)) . -3744) (3699 . 3700) (#("
" 0 1 (fontified nil)) . 3699) (3699 . 3700) (#(" " 0 1 (fontified nil)) . -3699) (3659 . 3829) (#(" " 0 1 (fontified nil)) . 3659) (3393 . 3660) (3362 . 3365) (3292 . 3295) (#("
" 0 1 (fontified nil)) . -3387) (3357 . 3359) (3290 . 3292) (3383 . 3384) (3354 . 3355) (#(" " 0 1 (fontified nil)) . -3354) (3289 . 3290) (#("
" 0 1 (fontified nil)) . 3289) (3289 . 3290) (#(" " 0 1 (fontified nil)) . -3289) (3256 . 3383) (#(" " 0 1 (fontified nil)) . 3256) (3231 . 3257) (#("
" 0 1 (fontified nil)) . -3231) (2982 . 3232) (#(" " 0 1 (fontified nil)) . 2982) (2838 . 2983) (#("
" 0 1 (fontified nil)) . -2838) (2753 . 2839) (#(" " 0 1 (fontified nil)) . 2753) (2482 . 2754) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/testx-emacs-org-agenda.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(helpful org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1870 (fontified nil)) . -2482) (t 24629 428 0 0)) nil (24629 2050 189465 0) 0 nil]) ((4354 . 5426) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 140 :width normal :foundry \"nil\" :family \"Menlo\"))))
 '(org-block ((t (:background \"#f1f6f9\" :extend t))))
 '(org-block-begin-line ((t (:underline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-block-end-line ((t (:overline \"#A7A6AA\" :foreground \"#008ED1\" :background \"#f0f0f0\" :extend t))))
 '(org-document-title ((t (:foreground \"midnight blue\" :weight bold :height 1.4))))
 '(org-level-1 ((t (:inherit outline-1 :height 1.0))))
 '(org-level-2 ((t (:inherit outline-2 :height 1.0))))
 '(org-level-3 ((t (:inherit outline-3 :height 1.0))))
 '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
 '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))" 0 1072 (fontified nil)) . -4354) (4350 . 4352) (#("
" 0 1 (fontified nil)) . -4350) (3879 . 4351) (#(" " 0 1 (fontified nil)) . 3879) (3849 . 3880) (3824 . 3827) (3787 . 3790) (3752 . 3755) (3702 . 3705) (#("
" 0 1 (fontified nil)) . -3837) (3813 . 3815) (3779 . 3781) (3747 . 3749) (3700 . 3702) (3829 . 3830) (3806 . 3807) (#("
" 0 1 (fontified nil)) . 3806) (3806 . 3807) (#(" " 0 1 (fontified nil)) . -3806) (3774 . 3775) (#("
" 0 1 (fontified nil)) . 3774) (3774 . 3775) (#(" " 0 1 (fontified nil)) . -3774) (3744 . 3745) (#("
" 0 1 (fontified nil)) . 3744) (3744 . 3745) (#(" " 0 1 (fontified nil)) . -3744) (3699 . 3700) (#("
" 0 1 (fontified nil)) . 3699) (3699 . 3700) (#(" " 0 1 (fontified nil)) . -3699) (3659 . 3829) (#(" " 0 1 (fontified nil)) . 3659) (3393 . 3660) (3362 . 3365) (3292 . 3295) (#("
" 0 1 (fontified nil)) . -3387) (3357 . 3359) (3290 . 3292) (3383 . 3384) (3354 . 3355) (#(" " 0 1 (fontified nil)) . -3354) (3289 . 3290) (#("
" 0 1 (fontified nil)) . 3289) (3289 . 3290) (#(" " 0 1 (fontified nil)) . -3289) (3256 . 3383) (#(" " 0 1 (fontified nil)) . 3256) (3231 . 3257) (#("
" 0 1 (fontified nil)) . -3231) (2982 . 3232) (#(" " 0 1 (fontified nil)) . 2982) (2838 . 2983) (#("
" 0 1 (fontified nil)) . -2838) (2753 . 2839) (#(" " 0 1 (fontified nil)) . 2753) (2482 . 2754) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   [\"#212526\" \"#ff4b4b\" \"#b4fa70\" \"#fce94f\" \"#729fcf\" \"#e090d7\" \"#8cc4ff\" \"#eeeeec\"])
 '(confirm-kill-emacs 'yes-or-no-p)
 '(custom-enabled-themes nil)
 '(doc-view-continuous t)
 '(fringe-mode 0 nil (fringe))
 '(org-agenda-files
   '(\"~/Documents/nvALT/infox-notex-Jiwoo.txt\" \"~/Documents/nvALT/INBOX_TODO_2021.txt\" \"~/Documents/nvALT/testx-emacs-org-agenda.txt\" \"~/Documents/nvALT/projx-elt_221.txt\" \"~/Documents/nvALT/projx-TorontoLife.txt\" \"~/Documents/nvALT/projx-eix.txt\"))
 '(org-agenda-time-grid
   '((daily today require-timed)
     (800 900 1000 1100 1200 1300 1400 1500 1600 1700 1800 1900 2000)
     \"......\" \"----------------\"))
 '(org-agenda-use-time-grid t)
 '(org-confirm-babel-evaluate nil)
 '(org-export-backends '(ascii beamer html icalendar latex odt))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-link-frame-setup
   '((vm . vm-visit-folder-other-frame)
     (vm-imap . vm-visit-imap-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file-other-window)
     (wl . wl-other-frame)))
 '(package-selected-packages
   '(org-roam htmlize ox-reveal transpose-frame centered-window undo-tree olivetti ivy markdown-preview-mode rainbow-delimiters pdf-tools helm-ack helm-ag ack ag helm-projectile projectile evil-surround which-key auctex flymake jedi auto-complete pygen python-mode ein company-jedi ob-ipython company evil ace-jump-mode elpy use-package csv-mode pandoc smex ido-vertical-mode buffer-move markdown-mode multiple-cursors git-gutter helm magit exec-path-from-shell)))" 0 1862 (fontified nil)) . -2482) (t 24628 25916 0 0)) nil (24629 428 297685 0) 0 nil]) nil nil (24629 428 297698 0) 0 nil] #1# 217875 574 nil)